                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _ScrollBlock
                                     13 	.globl _Hit
                                     14 	.globl _MovementPhysics
                                     15 	.globl _DetectCollisions
                                     16 	.globl _SetupCharacter
                                     17 	.globl _MoveCharacterWithJoypad
                                     18 	.globl _ScrollCharacter
                                     19 	.globl _MoveCharacter
                                     20 	.globl _SetSpriteFlip
                                     21 	.globl _LoadNextSpriteFrame
                                     22 	.globl _RefreshSprite
                                     23 	.globl _LoadSpriteFrame
                                     24 	.globl _printf
                                     25 	.globl _set_sprite_data
                                     26 	.globl _set_bkg_tiles
                                     27 	.globl _set_bkg_data
                                     28 	.globl _wait_vbl_done
                                     29 	.globl _joypad
                                     30 	.globl _initarand
                                     31 	.globl _slowingX
                                     32 	.globl _lastMovementY
                                     33 	.globl _lastMovementX
                                     34 	.globl _jumpFrameCount
                                     35 	.globl _animationFrameCount
                                     36 	.globl _movementFrameCount
                                     37 	.globl _block
                                     38 	.globl _player
                                     39 	.globl _ShowTitle
                                     40 	.globl _SetupBackGround
                                     41 	.globl _SetupBlock
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
                           000000    49 G$player$0_0$0==.
      000000                         50 _player::
      000000                         51 	.ds 19
                           000013    52 G$block$0_0$0==.
      000013                         53 _block::
      000013                         54 	.ds 24
                                     55 ;--------------------------------------------------------
                                     56 ; ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _INITIALIZED
                           000000    59 G$movementFrameCount$0_0$0==.
      000000                         60 _movementFrameCount::
      000000                         61 	.ds 1
                           000001    62 G$animationFrameCount$0_0$0==.
      000001                         63 _animationFrameCount::
      000001                         64 	.ds 1
                           000002    65 G$jumpFrameCount$0_0$0==.
      000002                         66 _jumpFrameCount::
      000002                         67 	.ds 1
                           000003    68 G$lastMovementX$0_0$0==.
      000003                         69 _lastMovementX::
      000003                         70 	.ds 1
                           000004    71 G$lastMovementY$0_0$0==.
      000004                         72 _lastMovementY::
      000004                         73 	.ds 1
                           000005    74 G$slowingX$0_0$0==.
      000005                         75 _slowingX::
      000005                         76 	.ds 1
                                     77 ;--------------------------------------------------------
                                     78 ; absolute external ram data
                                     79 ;--------------------------------------------------------
                                     80 	.area _DABS (ABS)
                                     81 ;--------------------------------------------------------
                                     82 ; global & static initialisations
                                     83 ;--------------------------------------------------------
                                     84 	.area _HOME
                                     85 	.area _GSINIT
                                     86 	.area _GSFINAL
                                     87 	.area _GSINIT
                                     88 ;--------------------------------------------------------
                                     89 ; Home
                                     90 ;--------------------------------------------------------
                                     91 	.area _HOME
                                     92 	.area _HOME
                                     93 ;--------------------------------------------------------
                                     94 ; code
                                     95 ;--------------------------------------------------------
                                     96 	.area _CODE
                           000000    97 	G$LoadSpriteFrame$0$0	= .
                                     98 	.globl	G$LoadSpriteFrame$0$0
                           000000    99 	C$Character.h$67$0_0$135	= .
                                    100 	.globl	C$Character.h$67$0_0$135
                                    101 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:67: void LoadSpriteFrame(Character* character, uint8_t frame)
                                    102 ;	---------------------------------
                                    103 ; Function LoadSpriteFrame
                                    104 ; ---------------------------------
      000000                        105 _LoadSpriteFrame::
      000000 E8 E9            [16]  106 	add	sp, #-23
      000002 F8 13            [12]  107 	ldhl	sp,	#19
      000004 73               [ 8]  108 	ld	(hl), e
      000005 23               [ 8]  109 	inc	hl
      000006 72               [ 8]  110 	ld	(hl), d
                           000007   111 	C$Character.h$69$1_0$135	= .
                                    112 	.globl	C$Character.h$69$1_0$135
                                    113 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:69: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]  114 	dec	hl
      000008 47               [ 4]  115 	ld	b, a
      000009 2A               [ 8]  116 	ld	a, (hl+)
      00000A 5F               [ 4]  117 	ld	e, a
      00000B 56               [ 8]  118 	ld	d, (hl)
      00000C 21 04 00         [12]  119 	ld	hl, #0x0004
      00000F 19               [ 8]  120 	add	hl, de
      000010 5D               [ 4]  121 	ld	e, l
      000011 54               [ 4]  122 	ld	d, h
      000012 78               [ 4]  123 	ld	a, b
      000013 12               [ 8]  124 	ld	(de), a
                           000014   125 	C$Character.h$71$1_1$136	= .
                                    126 	.globl	C$Character.h$71$1_1$136
                                    127 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  128 	ldhl	sp,#19
      000016 2A               [ 8]  129 	ld	a, (hl+)
      000017 5F               [ 4]  130 	ld	e, a
      000018 56               [ 8]  131 	ld	d, (hl)
      000019 6B               [ 4]  132 	ld	l, e
      00001A 62               [ 4]  133 	ld	h, d
      00001B 23               [ 8]  134 	inc	hl
      00001C 33               [ 8]  135 	inc	sp
      00001D 33               [ 8]  136 	inc	sp
      00001E 5D               [ 4]  137 	ld	e, l
      00001F 54               [ 4]  138 	ld	d, h
      000020 D5               [16]  139 	push	de
      000021 1A               [ 8]  140 	ld	a, (de)
      000022 4F               [ 4]  141 	ld	c, a
      000023 F8 13            [12]  142 	ldhl	sp,#19
      000025 2A               [ 8]  143 	ld	a, (hl+)
      000026 5F               [ 4]  144 	ld	e, a
      000027 56               [ 8]  145 	ld	d, (hl)
      000028 21 02 00         [12]  146 	ld	hl, #0x0002
      00002B 19               [ 8]  147 	add	hl, de
      00002C E5               [16]  148 	push	hl
      00002D 7D               [ 4]  149 	ld	a, l
      00002E F8 04            [12]  150 	ldhl	sp,	#4
      000030 77               [ 8]  151 	ld	(hl), a
      000031 E1               [12]  152 	pop	hl
      000032 7C               [ 4]  153 	ld	a, h
      000033 F8 03            [12]  154 	ldhl	sp,	#3
      000035 32               [ 8]  155 	ld	(hl-), a
      000036 2A               [ 8]  156 	ld	a, (hl+)
      000037 5F               [ 4]  157 	ld	e, a
      000038 56               [ 8]  158 	ld	d, (hl)
      000039 1A               [ 8]  159 	ld	a, (de)
      00003A 6F               [ 4]  160 	ld	l, a
                                    161 ;	spillPairReg hl
                                    162 ;	spillPairReg hl
      00003B C5               [16]  163 	push	bc
      00003C 5D               [ 4]  164 	ld	e, l
      00003D 79               [ 4]  165 	ld	a, c
                           00003E   166 	C$Character.h$74$2_1$135	= .
                                    167 	.globl	C$Character.h$74$2_1$135
                                    168 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  169 	call	__muluchar
      000041 F1               [12]  170 	pop	af
      000042 47               [ 4]  171 	ld	b, a
      000043 F8 13            [12]  172 	ldhl	sp,#19
      000045 2A               [ 8]  173 	ld	a, (hl+)
      000046 5F               [ 4]  174 	ld	e, a
      000047 56               [ 8]  175 	ld	d, (hl)
      000048 21 0A 00         [12]  176 	ld	hl, #0x000a
      00004B 19               [ 8]  177 	add	hl, de
      00004C E5               [16]  178 	push	hl
      00004D 7D               [ 4]  179 	ld	a, l
      00004E F8 06            [12]  180 	ldhl	sp,	#6
      000050 77               [ 8]  181 	ld	(hl), a
      000051 E1               [12]  182 	pop	hl
      000052 7C               [ 4]  183 	ld	a, h
      000053 F8 05            [12]  184 	ldhl	sp,	#5
      000055 77               [ 8]  185 	ld	(hl), a
      000056 F8 13            [12]  186 	ldhl	sp,#19
      000058 2A               [ 8]  187 	ld	a, (hl+)
      000059 5F               [ 4]  188 	ld	e, a
      00005A 56               [ 8]  189 	ld	d, (hl)
      00005B 21 0B 00         [12]  190 	ld	hl, #0x000b
      00005E 19               [ 8]  191 	add	hl, de
      00005F E5               [16]  192 	push	hl
      000060 7D               [ 4]  193 	ld	a, l
      000061 F8 08            [12]  194 	ldhl	sp,	#8
      000063 77               [ 8]  195 	ld	(hl), a
      000064 E1               [12]  196 	pop	hl
      000065 7C               [ 4]  197 	ld	a, h
      000066 F8 07            [12]  198 	ldhl	sp,	#7
      000068 77               [ 8]  199 	ld	(hl), a
      000069 F8 13            [12]  200 	ldhl	sp,#19
      00006B 2A               [ 8]  201 	ld	a, (hl+)
      00006C 5F               [ 4]  202 	ld	e, a
      00006D 56               [ 8]  203 	ld	d, (hl)
      00006E 21 11 00         [12]  204 	ld	hl, #0x0011
      000071 19               [ 8]  205 	add	hl, de
      000072 E5               [16]  206 	push	hl
      000073 7D               [ 4]  207 	ld	a, l
      000074 F8 0A            [12]  208 	ldhl	sp,	#10
      000076 77               [ 8]  209 	ld	(hl), a
      000077 E1               [12]  210 	pop	hl
      000078 7C               [ 4]  211 	ld	a, h
      000079 F8 09            [12]  212 	ldhl	sp,	#9
      00007B 77               [ 8]  213 	ld	(hl), a
      00007C 59               [ 4]  214 	ld	e, c
      00007D 78               [ 4]  215 	ld	a, b
      00007E CDr00r00         [24]  216 	call	__muluchar
      000081 F8 0A            [12]  217 	ldhl	sp,	#10
      000083 79               [ 4]  218 	ld	a, c
      000084 22               [ 8]  219 	ld	(hl+), a
      000085 70               [ 8]  220 	ld	(hl), b
      000086 F8 13            [12]  221 	ldhl	sp,#19
      000088 2A               [ 8]  222 	ld	a, (hl+)
      000089 5F               [ 4]  223 	ld	e, a
      00008A 56               [ 8]  224 	ld	d, (hl)
      00008B 21 05 00         [12]  225 	ld	hl, #0x0005
      00008E 19               [ 8]  226 	add	hl, de
      00008F E5               [16]  227 	push	hl
      000090 7D               [ 4]  228 	ld	a, l
      000091 F8 0E            [12]  229 	ldhl	sp,	#14
      000093 77               [ 8]  230 	ld	(hl), a
      000094 E1               [12]  231 	pop	hl
      000095 7C               [ 4]  232 	ld	a, h
      000096 F8 0D            [12]  233 	ldhl	sp,	#13
      000098 77               [ 8]  234 	ld	(hl), a
      000099 F8 15            [12]  235 	ldhl	sp,	#21
      00009B 36 00            [12]  236 	ld	(hl), #0x00
      00009D                        237 00109$:
      00009D F8 02            [12]  238 	ldhl	sp,#2
      00009F 2A               [ 8]  239 	ld	a, (hl+)
      0000A0 5F               [ 4]  240 	ld	e, a
      0000A1 56               [ 8]  241 	ld	d, (hl)
      0000A2 1A               [ 8]  242 	ld	a, (de)
      0000A3 47               [ 4]  243 	ld	b, a
      0000A4 F8 15            [12]  244 	ldhl	sp,	#21
      0000A6 7E               [ 8]  245 	ld	a, (hl)
      0000A7 90               [ 4]  246 	sub	a, b
      0000A8 CArA7r01         [16]  247 	jp	Z,00111$
                           0000AB   248 	C$Character.h$76$2_1$135	= .
                                    249 	.globl	C$Character.h$76$2_1$135
                                    250 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  251 	ldhl	sp,	#22
      0000AD 36 00            [12]  252 	ld	(hl), #0x00
      0000AF                        253 00106$:
                           0000AF   254 	C$Character.h$71$2_1$135	= .
                                    255 	.globl	C$Character.h$71$2_1$135
                                    256 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  257 	pop	de
      0000B0 D5               [16]  258 	push	de
      0000B1 1A               [ 8]  259 	ld	a, (de)
      0000B2 F8 10            [12]  260 	ldhl	sp,	#16
      0000B4 77               [ 8]  261 	ld	(hl), a
                           0000B5   262 	C$Character.h$76$4_1$139	= .
                                    263 	.globl	C$Character.h$76$4_1$139
                                    264 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  265 	ldhl	sp,	#22
      0000B7 7E               [ 8]  266 	ld	a, (hl)
      0000B8 F8 10            [12]  267 	ldhl	sp,	#16
      0000BA 96               [ 8]  268 	sub	a, (hl)
      0000BB CArA1r01         [16]  269 	jp	Z,00110$
                           0000BE   270 	C$Character.h$79$2_1$135	= .
                                    271 	.globl	C$Character.h$79$2_1$135
                                    272 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  273 	ldhl	sp,#4
      0000C0 2A               [ 8]  274 	ld	a, (hl+)
      0000C1 5F               [ 4]  275 	ld	e, a
      0000C2 56               [ 8]  276 	ld	d, (hl)
      0000C3 1A               [ 8]  277 	ld	a, (de)
      0000C4 F8 11            [12]  278 	ldhl	sp,	#17
      0000C6 77               [ 8]  279 	ld	(hl), a
      0000C7 7E               [ 8]  280 	ld	a, (hl)
      0000C8 B7               [ 4]  281 	or	a, a
      0000C9 28 09            [12]  282 	jr	Z, 00113$
      0000CB 2B               [ 8]  283 	dec	hl
      0000CC 7E               [ 8]  284 	ld	a, (hl)
      0000CD 3D               [ 4]  285 	dec	a
      0000CE F8 16            [12]  286 	ldhl	sp,	#22
      0000D0 4E               [ 8]  287 	ld	c, (hl)
      0000D1 91               [ 4]  288 	sub	a, c
      0000D2 18 03            [12]  289 	jr	00114$
      0000D4                        290 00113$:
      0000D4 F8 16            [12]  291 	ldhl	sp,	#22
      0000D6 7E               [ 8]  292 	ld	a, (hl)
      0000D7                        293 00114$:
      0000D7 4F               [ 4]  294 	ld	c, a
                           0000D8   295 	C$Character.h$80$2_1$135	= .
                                    296 	.globl	C$Character.h$80$2_1$135
                                    297 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:80: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  298 	ldhl	sp,#6
      0000DA 2A               [ 8]  299 	ld	a, (hl+)
      0000DB 5F               [ 4]  300 	ld	e, a
      0000DC 56               [ 8]  301 	ld	d, (hl)
      0000DD 1A               [ 8]  302 	ld	a, (de)
      0000DE F8 12            [12]  303 	ldhl	sp,	#18
      0000E0 77               [ 8]  304 	ld	(hl), a
      0000E1 7E               [ 8]  305 	ld	a, (hl)
      0000E2 B7               [ 4]  306 	or	a, a
      0000E3 28 0D            [12]  307 	jr	Z, 00115$
      0000E5 F8 02            [12]  308 	ldhl	sp,#2
      0000E7 2A               [ 8]  309 	ld	a, (hl+)
      0000E8 5F               [ 4]  310 	ld	e, a
      0000E9 56               [ 8]  311 	ld	d, (hl)
      0000EA 1A               [ 8]  312 	ld	a, (de)
      0000EB 3D               [ 4]  313 	dec	a
      0000EC F8 15            [12]  314 	ldhl	sp,	#21
      0000EE 46               [ 8]  315 	ld	b, (hl)
      0000EF 90               [ 4]  316 	sub	a, b
      0000F0 18 03            [12]  317 	jr	00116$
      0000F2                        318 00115$:
      0000F2 F8 15            [12]  319 	ldhl	sp,	#21
      0000F4 7E               [ 8]  320 	ld	a, (hl)
      0000F5                        321 00116$:
      0000F5 47               [ 4]  322 	ld	b, a
                           0000F6   323 	C$Character.h$83$5_1$140	= .
                                    324 	.globl	C$Character.h$83$5_1$140
                                    325 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:83: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  326 	ldhl	sp,#19
      0000F8 2A               [ 8]  327 	ld	a, (hl+)
      0000F9 5F               [ 4]  328 	ld	e, a
      0000FA 56               [ 8]  329 	ld	d, (hl)
      0000FB 1A               [ 8]  330 	ld	a, (de)
      0000FC 81               [ 4]  331 	add	a, c
      0000FD 4F               [ 4]  332 	ld	c, a
      0000FE C5               [16]  333 	push	bc
      0000FF F8 12            [12]  334 	ldhl	sp,	#18
      000101 5E               [ 8]  335 	ld	e, (hl)
      000102 78               [ 4]  336 	ld	a, b
      000103 CDr00r00         [24]  337 	call	__muluchar
      000106 79               [ 4]  338 	ld	a, c
      000107 C1               [12]  339 	pop	bc
      000108 81               [ 4]  340 	add	a, c
      000109 F8 0E            [12]  341 	ldhl	sp,	#14
      00010B 77               [ 8]  342 	ld	(hl), a
                                    343 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:86: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  344 	ldhl	sp,	#17
      00010E 7E               [ 8]  345 	ld	a, (hl)
      00010F B7               [ 4]  346 	or	a, a
      000110 28 09            [12]  347 	jr	Z, 00117$
      000112 2B               [ 8]  348 	dec	hl
      000113 2B               [ 8]  349 	dec	hl
      000114 3E 20            [ 8]  350 	ld	a, #0x20
      000116 22               [ 8]  351 	ld	(hl+), a
      000117 AF               [ 4]  352 	xor	a, a
      000118 77               [ 8]  353 	ld	(hl), a
      000119 18 05            [12]  354 	jr	00118$
      00011B                        355 00117$:
      00011B AF               [ 4]  356 	xor	a, a
      00011C F8 0F            [12]  357 	ldhl	sp,	#15
      00011E 22               [ 8]  358 	ld	(hl+), a
      00011F 77               [ 8]  359 	ld	(hl), a
      000120                        360 00118$:
      000120 F8 12            [12]  361 	ldhl	sp,	#18
      000122 7E               [ 8]  362 	ld	a, (hl)
      000123 B7               [ 4]  363 	or	a, a
      000124 28 08            [12]  364 	jr	Z, 00119$
      000126 2B               [ 8]  365 	dec	hl
      000127 3E 40            [ 8]  366 	ld	a, #0x40
      000129 22               [ 8]  367 	ld	(hl+), a
      00012A AF               [ 4]  368 	xor	a, a
      00012B 77               [ 8]  369 	ld	(hl), a
      00012C 18 05            [12]  370 	jr	00120$
      00012E                        371 00119$:
      00012E AF               [ 4]  372 	xor	a, a
      00012F F8 11            [12]  373 	ldhl	sp,	#17
      000131 22               [ 8]  374 	ld	(hl+), a
      000132 77               [ 8]  375 	ld	(hl), a
      000133                        376 00120$:
      000133 F8 0F            [12]  377 	ldhl	sp,	#15
      000135 2A               [ 8]  378 	ld	a, (hl+)
      000136 23               [ 8]  379 	inc	hl
      000137 4E               [ 8]  380 	ld	c, (hl)
      000138 B1               [ 4]  381 	or	a, c
      000139 5F               [ 4]  382 	ld	e, a
                                    383 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  384 	ldhl	sp,	#14
      00013C 4E               [ 8]  385 	ld	c, (hl)
      00013D 06 00            [ 8]  386 	ld	b, #0x00
      00013F CB 21            [ 8]  387 	sla	c
      000141 CB 10            [ 8]  388 	rl	b
      000143 CB 21            [ 8]  389 	sla	c
      000145 CB 10            [ 8]  390 	rl	b
      000147 21r01r00         [12]  391 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  392 	add	hl,bc
      00014B 23               [ 8]  393 	inc	hl
      00014C 23               [ 8]  394 	inc	hl
      00014D 73               [ 8]  395 	ld	(hl), e
                                    396 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  397 	ldhl	sp,#8
      000150 2A               [ 8]  398 	ld	a, (hl+)
      000151 5F               [ 4]  399 	ld	e, a
      000152 56               [ 8]  400 	ld	d, (hl)
      000153 1A               [ 8]  401 	ld	a, (de)
      000154 F8 0F            [12]  402 	ldhl	sp,	#15
      000156 22               [ 8]  403 	ld	(hl+), a
      000157 13               [ 8]  404 	inc	de
      000158 1A               [ 8]  405 	ld	a, (de)
      000159 77               [ 8]  406 	ld	(hl), a
      00015A F8 16            [12]  407 	ldhl	sp,	#22
      00015C 7E               [ 8]  408 	ld	a, (hl)
      00015D F8 11            [12]  409 	ldhl	sp,	#17
      00015F 22               [ 8]  410 	ld	(hl+), a
      000160 36 00            [12]  411 	ld	(hl), #0x00
      000162 D1               [12]  412 	pop	de
      000163 D5               [16]  413 	push	de
      000164 1A               [ 8]  414 	ld	a, (de)
      000165 6F               [ 4]  415 	ld	l, a
                                    416 ;	spillPairReg hl
                                    417 ;	spillPairReg hl
      000166 C5               [16]  418 	push	bc
      000167 5D               [ 4]  419 	ld	e, l
      000168 F8 17            [12]  420 	ldhl	sp,	#23
      00016A 7E               [ 8]  421 	ld	a, (hl)
      00016B CDr00r00         [24]  422 	call	__muluchar
      00016E 59               [ 4]  423 	ld	e, c
      00016F 50               [ 4]  424 	ld	d, b
      000170 C1               [12]  425 	pop	bc
      000171 F8 11            [12]  426 	ldhl	sp,	#17
      000173 2A               [ 8]  427 	ld	a,	(hl+)
      000174 66               [ 8]  428 	ld	h, (hl)
      000175 6F               [ 4]  429 	ld	l, a
      000176 19               [ 8]  430 	add	hl, de
      000177 5D               [ 4]  431 	ld	e, l
      000178 54               [ 4]  432 	ld	d, h
      000179 F8 0A            [12]  433 	ldhl	sp,	#10
      00017B 2A               [ 8]  434 	ld	a,	(hl+)
      00017C 66               [ 8]  435 	ld	h, (hl)
      00017D 6F               [ 4]  436 	ld	l, a
      00017E 19               [ 8]  437 	add	hl, de
      00017F 5D               [ 4]  438 	ld	e, l
      000180 54               [ 4]  439 	ld	d, h
      000181 F8 0F            [12]  440 	ldhl	sp,	#15
      000183 2A               [ 8]  441 	ld	a,	(hl+)
      000184 66               [ 8]  442 	ld	h, (hl)
      000185 6F               [ 4]  443 	ld	l, a
      000186 19               [ 8]  444 	add	hl, de
      000187 5D               [ 4]  445 	ld	e, l
      000188 54               [ 4]  446 	ld	d, h
      000189 1A               [ 8]  447 	ld	a, (de)
      00018A F8 0C            [12]  448 	ldhl	sp,#12
      00018C 5E               [ 8]  449 	ld	e, (hl)
      00018D 23               [ 8]  450 	inc	hl
      00018E 56               [ 8]  451 	ld	d, (hl)
      00018F F5               [16]  452 	push	af
      000190 1A               [ 8]  453 	ld	a, (de)
      000191 6F               [ 4]  454 	ld	l, a
                                    455 ;	spillPairReg hl
                                    456 ;	spillPairReg hl
      000192 F1               [12]  457 	pop	af
      000193 85               [ 4]  458 	add	a, l
      000194 5F               [ 4]  459 	ld	e, a
                                    460 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  461 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  462 	add	hl,bc
      000199 23               [ 8]  463 	inc	hl
      00019A 73               [ 8]  464 	ld	(hl), e
                           00019B   465 	C$Character.h$76$4_1$139	= .
                                    466 	.globl	C$Character.h$76$4_1$139
                                    467 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  468 	ldhl	sp,	#22
      00019D 34               [12]  469 	inc	(hl)
      00019E C3rAFr00         [16]  470 	jp	00106$
      0001A1                        471 00110$:
                           0001A1   472 	C$Character.h$74$2_1$137	= .
                                    473 	.globl	C$Character.h$74$2_1$137
                                    474 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  475 	ldhl	sp,	#21
      0001A3 34               [12]  476 	inc	(hl)
      0001A4 C3r9Dr00         [16]  477 	jp	00109$
      0001A7                        478 00111$:
                           0001A7   479 	C$Character.h$93$2_1$135	= .
                                    480 	.globl	C$Character.h$93$2_1$135
                                    481 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: }
      0001A7 E8 17            [16]  482 	add	sp, #23
                           0001A9   483 	C$Character.h$93$2_1$135	= .
                                    484 	.globl	C$Character.h$93$2_1$135
                           0001A9   485 	XG$LoadSpriteFrame$0$0	= .
                                    486 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  487 	ret
                           0001AA   488 	G$RefreshSprite$0$0	= .
                                    489 	.globl	G$RefreshSprite$0$0
                           0001AA   490 	C$Character.h$95$2_1$148	= .
                                    491 	.globl	C$Character.h$95$2_1$148
                                    492 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: void RefreshSprite(Character *character)
                                    493 ;	---------------------------------
                                    494 ; Function RefreshSprite
                                    495 ; ---------------------------------
      0001AA                        496 _RefreshSprite::
                           0001AA   497 	C$Character.h$97$1_0$148	= .
                                    498 	.globl	C$Character.h$97$1_0$148
                                    499 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:97: LoadSpriteFrame(character, character->spriteCurrentFrame);
      0001AA 21 04 00         [12]  500 	ld	hl, #0x0004
      0001AD 19               [ 8]  501 	add	hl, de
      0001AE 4E               [ 8]  502 	ld	c, (hl)
      0001AF 79               [ 4]  503 	ld	a, c
                           0001B0   504 	C$Character.h$98$1_0$148	= .
                                    505 	.globl	C$Character.h$98$1_0$148
                                    506 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:98: }
                           0001B0   507 	C$Character.h$98$1_0$148	= .
                                    508 	.globl	C$Character.h$98$1_0$148
                           0001B0   509 	XG$RefreshSprite$0$0	= .
                                    510 	.globl	XG$RefreshSprite$0$0
      0001B0 C3r00r00         [16]  511 	jp	_LoadSpriteFrame
                           0001B3   512 	G$LoadNextSpriteFrame$0$0	= .
                                    513 	.globl	G$LoadNextSpriteFrame$0$0
                           0001B3   514 	C$Character.h$100$1_0$150	= .
                                    515 	.globl	C$Character.h$100$1_0$150
                                    516 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:100: void LoadNextSpriteFrame(Character *character)
                                    517 ;	---------------------------------
                                    518 ; Function LoadNextSpriteFrame
                                    519 ; ---------------------------------
      0001B3                        520 _LoadNextSpriteFrame::
      0001B3 E8 FC            [16]  521 	add	sp, #-4
      0001B5 F8 02            [12]  522 	ldhl	sp,	#2
      0001B7 7B               [ 4]  523 	ld	a, e
      0001B8 22               [ 8]  524 	ld	(hl+), a
                           0001B9   525 	C$Character.h$103$1_0$150	= .
                                    526 	.globl	C$Character.h$103$1_0$150
                                    527 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: character->spriteCurrentFrame = (character->spriteCurrentFrame + 1) % character->spriteFrames;
      0001B9 7A               [ 4]  528 	ld	a, d
      0001BA 32               [ 8]  529 	ld	(hl-), a
      0001BB 2A               [ 8]  530 	ld	a, (hl+)
      0001BC 5F               [ 4]  531 	ld	e, a
      0001BD 56               [ 8]  532 	ld	d, (hl)
      0001BE 21 04 00         [12]  533 	ld	hl, #0x0004
      0001C1 19               [ 8]  534 	add	hl, de
      0001C2 5D               [ 4]  535 	ld	e, l
      0001C3 54               [ 4]  536 	ld	d, h
      0001C4 1A               [ 8]  537 	ld	a, (de)
      0001C5 4F               [ 4]  538 	ld	c, a
      0001C6 06 00            [ 8]  539 	ld	b, #0x00
      0001C8 03               [ 8]  540 	inc	bc
      0001C9 33               [ 8]  541 	inc	sp
      0001CA 33               [ 8]  542 	inc	sp
      0001CB C5               [16]  543 	push	bc
      0001CC F8 02            [12]  544 	ldhl	sp,	#2
      0001CE 2A               [ 8]  545 	ld	a, (hl+)
      0001CF 4F               [ 4]  546 	ld	c, a
      0001D0 46               [ 8]  547 	ld	b, (hl)
      0001D1 03               [ 8]  548 	inc	bc
      0001D2 03               [ 8]  549 	inc	bc
      0001D3 03               [ 8]  550 	inc	bc
      0001D4 0A               [ 8]  551 	ld	a, (bc)
      0001D5 4F               [ 4]  552 	ld	c, a
      0001D6 06 00            [ 8]  553 	ld	b, #0x00
      0001D8 D5               [16]  554 	push	de
      0001D9 F8 02            [12]  555 	ldhl	sp,	#2
      0001DB 2A               [ 8]  556 	ld	a, (hl+)
      0001DC 5F               [ 4]  557 	ld	e, a
      0001DD 56               [ 8]  558 	ld	d, (hl)
      0001DE CDr00r00         [24]  559 	call	__modsint
      0001E1 D1               [12]  560 	pop	de
      0001E2 79               [ 4]  561 	ld	a, c
      0001E3 12               [ 8]  562 	ld	(de), a
                           0001E4   563 	C$Character.h$105$1_0$150	= .
                                    564 	.globl	C$Character.h$105$1_0$150
                                    565 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:105: RefreshSprite(character);
      0001E4 F8 02            [12]  566 	ldhl	sp,	#2
      0001E6 2A               [ 8]  567 	ld	a, (hl+)
      0001E7 5F               [ 4]  568 	ld	e, a
      0001E8 56               [ 8]  569 	ld	d, (hl)
      0001E9 CDrAAr01         [24]  570 	call	_RefreshSprite
                           0001EC   571 	C$Character.h$106$1_0$150	= .
                                    572 	.globl	C$Character.h$106$1_0$150
                                    573 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: }
      0001EC E8 04            [16]  574 	add	sp, #4
                           0001EE   575 	C$Character.h$106$1_0$150	= .
                                    576 	.globl	C$Character.h$106$1_0$150
                           0001EE   577 	XG$LoadNextSpriteFrame$0$0	= .
                                    578 	.globl	XG$LoadNextSpriteFrame$0$0
      0001EE C9               [16]  579 	ret
                           0001EF   580 	G$SetSpriteFlip$0$0	= .
                                    581 	.globl	G$SetSpriteFlip$0$0
                           0001EF   582 	C$Character.h$108$1_0$152	= .
                                    583 	.globl	C$Character.h$108$1_0$152
                                    584 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: void SetSpriteFlip(Character *character, uint8_t flipX, uint8_t flipY)
                                    585 ;	---------------------------------
                                    586 ; Function SetSpriteFlip
                                    587 ; ---------------------------------
      0001EF                        588 _SetSpriteFlip::
      0001EF 4F               [ 4]  589 	ld	c, a
                           0001F0   590 	C$Character.h$110$1_0$152	= .
                                    591 	.globl	C$Character.h$110$1_0$152
                                    592 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:110: character->spriteFlippedX = flipX;
      0001F0 21 0A 00         [12]  593 	ld	hl, #0x000a
      0001F3 19               [ 8]  594 	add	hl, de
      0001F4 71               [ 8]  595 	ld	(hl), c
                           0001F5   596 	C$Character.h$111$1_0$152	= .
                                    597 	.globl	C$Character.h$111$1_0$152
                                    598 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: character->spriteFlippedY = flipY;
      0001F5 21 0B 00         [12]  599 	ld	hl, #0x000b
      0001F8 19               [ 8]  600 	add	hl, de
      0001F9 4D               [ 4]  601 	ld	c, l
      0001FA 44               [ 4]  602 	ld	b, h
      0001FB F8 02            [12]  603 	ldhl	sp,	#2
      0001FD 7E               [ 8]  604 	ld	a, (hl)
      0001FE 02               [ 8]  605 	ld	(bc), a
                           0001FF   606 	C$Character.h$113$1_0$152	= .
                                    607 	.globl	C$Character.h$113$1_0$152
                                    608 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:113: RefreshSprite(character);
      0001FF CDrAAr01         [24]  609 	call	_RefreshSprite
                           000202   610 	C$Character.h$114$1_0$152	= .
                                    611 	.globl	C$Character.h$114$1_0$152
                                    612 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: }
      000202 E1               [12]  613 	pop	hl
      000203 33               [ 8]  614 	inc	sp
      000204 E9               [ 4]  615 	jp	(hl)
                           000205   616 	G$MoveCharacter$0$0	= .
                                    617 	.globl	G$MoveCharacter$0$0
                           000205   618 	C$Character.h$116$1_0$154	= .
                                    619 	.globl	C$Character.h$116$1_0$154
                                    620 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:116: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    621 ;	---------------------------------
                                    622 ; Function MoveCharacter
                                    623 ; ---------------------------------
      000205                        624 _MoveCharacter::
      000205 E8 F8            [16]  625 	add	sp, #-8
      000207 4B               [ 4]  626 	ld	c, e
      000208 42               [ 4]  627 	ld	b, d
      000209 F8 05            [12]  628 	ldhl	sp,	#5
      00020B 77               [ 8]  629 	ld	(hl), a
                           00020C   630 	C$Character.h$119$1_0$154	= .
                                    631 	.globl	C$Character.h$119$1_0$154
                                    632 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:119: character->x = x;
      00020C 21 06 00         [12]  633 	ld	hl, #0x0006
      00020F 09               [ 8]  634 	add	hl, bc
      000210 5D               [ 4]  635 	ld	e, l
      000211 54               [ 4]  636 	ld	d, h
      000212 F8 05            [12]  637 	ldhl	sp,	#5
      000214 7E               [ 8]  638 	ld	a, (hl)
      000215 12               [ 8]  639 	ld	(de), a
                           000216   640 	C$Character.h$120$1_0$154	= .
                                    641 	.globl	C$Character.h$120$1_0$154
                                    642 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: character->y = y;
      000216 21 07 00         [12]  643 	ld	hl, #0x0007
      000219 09               [ 8]  644 	add	hl, bc
      00021A 5D               [ 4]  645 	ld	e, l
      00021B 54               [ 4]  646 	ld	d, h
      00021C F8 0A            [12]  647 	ldhl	sp,	#10
      00021E 7E               [ 8]  648 	ld	a, (hl)
      00021F 12               [ 8]  649 	ld	(de), a
                           000220   650 	C$Character.h$122$4_0$157	= .
                                    651 	.globl	C$Character.h$122$4_0$157
                                    652 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000220 69               [ 4]  653 	ld	l, c
      000221 60               [ 4]  654 	ld	h, b
      000222 23               [ 8]  655 	inc	hl
      000223 33               [ 8]  656 	inc	sp
      000224 33               [ 8]  657 	inc	sp
      000225 E5               [16]  658 	push	hl
      000226 21 02 00         [12]  659 	ld	hl, #0x0002
      000229 09               [ 8]  660 	add	hl, bc
      00022A E5               [16]  661 	push	hl
      00022B 7D               [ 4]  662 	ld	a, l
      00022C F8 04            [12]  663 	ldhl	sp,	#4
      00022E 77               [ 8]  664 	ld	(hl), a
      00022F E1               [12]  665 	pop	hl
      000230 7C               [ 4]  666 	ld	a, h
      000231 F8 03            [12]  667 	ldhl	sp,	#3
      000233 77               [ 8]  668 	ld	(hl), a
      000234 F8 06            [12]  669 	ldhl	sp,	#6
      000236 36 00            [12]  670 	ld	(hl), #0x00
      000238                        671 00108$:
      000238 F8 02            [12]  672 	ldhl	sp,#2
      00023A 2A               [ 8]  673 	ld	a, (hl+)
      00023B 5F               [ 4]  674 	ld	e, a
      00023C 56               [ 8]  675 	ld	d, (hl)
      00023D 1A               [ 8]  676 	ld	a, (de)
      00023E F8 07            [12]  677 	ldhl	sp,	#7
      000240 32               [ 8]  678 	ld	(hl-), a
      000241 2A               [ 8]  679 	ld	a, (hl+)
      000242 96               [ 8]  680 	sub	a, (hl)
      000243 28 5B            [12]  681 	jr	Z, 00110$
                           000245   682 	C$Character.h$124$2_0$154	= .
                                    683 	.globl	C$Character.h$124$2_0$154
                                    684 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000245 F8 07            [12]  685 	ldhl	sp,	#7
      000247 36 00            [12]  686 	ld	(hl), #0x00
      000249                        687 00105$:
      000249 D1               [12]  688 	pop	de
      00024A D5               [16]  689 	push	de
      00024B 1A               [ 8]  690 	ld	a, (de)
      00024C F8 04            [12]  691 	ldhl	sp,	#4
      00024E 77               [ 8]  692 	ld	(hl), a
      00024F F8 07            [12]  693 	ldhl	sp,	#7
      000251 7E               [ 8]  694 	ld	a, (hl)
      000252 F8 04            [12]  695 	ldhl	sp,	#4
      000254 96               [ 8]  696 	sub	a, (hl)
      000255 28 44            [12]  697 	jr	Z, 00109$
                           000257   698 	C$Character.h$127$5_0$158	= .
                                    699 	.globl	C$Character.h$127$5_0$158
                                    700 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:127: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      000257 0A               [ 8]  701 	ld	a, (bc)
      000258 F8 07            [12]  702 	ldhl	sp,	#7
      00025A 86               [ 8]  703 	add	a, (hl)
      00025B 57               [ 4]  704 	ld	d, a
      00025C C5               [16]  705 	push	bc
      00025D D5               [16]  706 	push	de
      00025E F8 08            [12]  707 	ldhl	sp,	#8
      000260 2A               [ 8]  708 	ld	a, (hl+)
      000261 23               [ 8]  709 	inc	hl
      000262 5F               [ 4]  710 	ld	e, a
      000263 7E               [ 8]  711 	ld	a, (hl)
      000264 CDr00r00         [24]  712 	call	__muluchar
      000267 79               [ 4]  713 	ld	a, c
      000268 D1               [12]  714 	pop	de
      000269 C1               [12]  715 	pop	bc
      00026A 82               [ 4]  716 	add	a, d
      00026B 5F               [ 4]  717 	ld	e, a
                                    718 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:130: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      00026C F8 06            [12]  719 	ldhl	sp,	#6
      00026E 7E               [ 8]  720 	ld	a, (hl)
      00026F 87               [ 4]  721 	add	a, a
      000270 87               [ 4]  722 	add	a, a
      000271 87               [ 4]  723 	add	a, a
      000272 F8 0A            [12]  724 	ldhl	sp,	#10
      000274 56               [ 8]  725 	ld	d, (hl)
      000275 82               [ 4]  726 	add	a, d
      000276 57               [ 4]  727 	ld	d, a
      000277 F8 07            [12]  728 	ldhl	sp,	#7
      000279 3A               [ 8]  729 	ld	a, (hl-)
      00027A 2B               [ 8]  730 	dec	hl
      00027B 87               [ 4]  731 	add	a, a
      00027C 87               [ 4]  732 	add	a, a
      00027D 87               [ 4]  733 	add	a, a
      00027E 6E               [ 8]  734 	ld	l, (hl)
                                    735 ;	spillPairReg hl
                                    736 ;	spillPairReg hl
      00027F 85               [ 4]  737 	add	a, l
      000280 F8 04            [12]  738 	ldhl	sp,	#4
      000282 77               [ 8]  739 	ld	(hl), a
                                    740 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000283 26 00            [ 8]  741 	ld	h, #0x00
                                    742 ;	spillPairReg hl
                                    743 ;	spillPairReg hl
      000285 6B               [ 4]  744 	ld	l, e
      000286 29               [ 8]  745 	add	hl, hl
      000287 29               [ 8]  746 	add	hl, hl
      000288 D5               [16]  747 	push	de
      000289 11r00r00         [12]  748 	ld	de, #_shadow_OAM
      00028C 19               [ 8]  749 	add	hl, de
      00028D D1               [12]  750 	pop	de
                                    751 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00028E 7A               [ 4]  752 	ld	a, d
      00028F 22               [ 8]  753 	ld	(hl+), a
      000290 5D               [ 4]  754 	ld	e, l
      000291 54               [ 4]  755 	ld	d, h
      000292 F8 04            [12]  756 	ldhl	sp,	#4
      000294 7E               [ 8]  757 	ld	a, (hl)
      000295 12               [ 8]  758 	ld	(de), a
                           000296   759 	C$Character.h$124$4_0$157	= .
                                    760 	.globl	C$Character.h$124$4_0$157
                                    761 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000296 F8 07            [12]  762 	ldhl	sp,	#7
      000298 34               [12]  763 	inc	(hl)
      000299 18 AE            [12]  764 	jr	00105$
      00029B                        765 00109$:
                           00029B   766 	C$Character.h$122$2_0$155	= .
                                    767 	.globl	C$Character.h$122$2_0$155
                                    768 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      00029B F8 06            [12]  769 	ldhl	sp,	#6
      00029D 34               [12]  770 	inc	(hl)
      00029E 18 98            [12]  771 	jr	00108$
      0002A0                        772 00110$:
                           0002A0   773 	C$Character.h$133$2_0$154	= .
                                    774 	.globl	C$Character.h$133$2_0$154
                                    775 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: }
      0002A0 E8 08            [16]  776 	add	sp, #8
      0002A2 E1               [12]  777 	pop	hl
      0002A3 33               [ 8]  778 	inc	sp
      0002A4 E9               [ 4]  779 	jp	(hl)
                           0002A5   780 	G$ScrollCharacter$0$0	= .
                                    781 	.globl	G$ScrollCharacter$0$0
                           0002A5   782 	C$Character.h$135$2_0$163	= .
                                    783 	.globl	C$Character.h$135$2_0$163
                                    784 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    785 ;	---------------------------------
                                    786 ; Function ScrollCharacter
                                    787 ; ---------------------------------
      0002A5                        788 _ScrollCharacter::
      0002A5 D5               [16]  789 	push	de
      0002A6 4F               [ 4]  790 	ld	c, a
                           0002A7   791 	C$Character.h$137$1_0$163	= .
                                    792 	.globl	C$Character.h$137$1_0$163
                                    793 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:137: character->x += x;
      0002A7 D1               [12]  794 	pop	de
      0002A8 D5               [16]  795 	push	de
      0002A9 21 06 00         [12]  796 	ld	hl, #0x0006
      0002AC 19               [ 8]  797 	add	hl, de
      0002AD 5D               [ 4]  798 	ld	e, l
      0002AE 54               [ 4]  799 	ld	d, h
      0002AF 1A               [ 8]  800 	ld	a, (de)
      0002B0 81               [ 4]  801 	add	a, c
      0002B1 12               [ 8]  802 	ld	(de), a
                           0002B2   803 	C$Character.h$138$1_0$163	= .
                                    804 	.globl	C$Character.h$138$1_0$163
                                    805 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:138: character->y += y;
      0002B2 D5               [16]  806 	push	de
      0002B3 F8 02            [12]  807 	ldhl	sp,#2
      0002B5 2A               [ 8]  808 	ld	a, (hl+)
      0002B6 5F               [ 4]  809 	ld	e, a
      0002B7 56               [ 8]  810 	ld	d, (hl)
      0002B8 21 07 00         [12]  811 	ld	hl, #0x0007
      0002BB 19               [ 8]  812 	add	hl, de
      0002BC D1               [12]  813 	pop	de
      0002BD 4D               [ 4]  814 	ld	c, l
      0002BE 44               [ 4]  815 	ld	b, h
      0002BF 0A               [ 8]  816 	ld	a, (bc)
      0002C0 F8 04            [12]  817 	ldhl	sp,	#4
      0002C2 86               [ 8]  818 	add	a, (hl)
                           0002C3   819 	C$Character.h$140$1_0$163	= .
                                    820 	.globl	C$Character.h$140$1_0$163
                                    821 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:140: MoveCharacter(character, character->x, character->y);
      0002C3 02               [ 8]  822 	ld	(bc), a
      0002C4 47               [ 4]  823 	ld	b, a
      0002C5 1A               [ 8]  824 	ld	a, (de)
      0002C6 4F               [ 4]  825 	ld	c, a
      0002C7 C5               [16]  826 	push	bc
      0002C8 33               [ 8]  827 	inc	sp
      0002C9 79               [ 4]  828 	ld	a, c
      0002CA F8 01            [12]  829 	ldhl	sp,	#1
      0002CC 5E               [ 8]  830 	ld	e, (hl)
      0002CD 23               [ 8]  831 	inc	hl
      0002CE 56               [ 8]  832 	ld	d, (hl)
                           0002CF   833 	C$Character.h$141$1_0$163	= .
                                    834 	.globl	C$Character.h$141$1_0$163
                                    835 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:141: }
      0002CF CDr05r02         [24]  836 	call	_MoveCharacter
      0002D2 E1               [12]  837 	pop	hl
      0002D3 E1               [12]  838 	pop	hl
      0002D4 33               [ 8]  839 	inc	sp
      0002D5 E9               [ 4]  840 	jp	(hl)
                           0002D6   841 	G$MoveCharacterWithJoypad$0$0	= .
                                    842 	.globl	G$MoveCharacterWithJoypad$0$0
                           0002D6   843 	C$Character.h$143$1_0$165	= .
                                    844 	.globl	C$Character.h$143$1_0$165
                                    845 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:143: void MoveCharacterWithJoypad(Character *character)
                                    846 ;	---------------------------------
                                    847 ; Function MoveCharacterWithJoypad
                                    848 ; ---------------------------------
      0002D6                        849 _MoveCharacterWithJoypad::
      0002D6 E8 F8            [16]  850 	add	sp, #-8
      0002D8 4B               [ 4]  851 	ld	c, e
      0002D9 42               [ 4]  852 	ld	b, d
                           0002DA   853 	C$Character.h$146$1_0$165	= .
                                    854 	.globl	C$Character.h$146$1_0$165
                                    855 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:146: uint8_t buttons = joypad();
      0002DA CDr00r00         [24]  856 	call	_joypad
                           0002DD   857 	C$Character.h$148$1_0$165	= .
                                    858 	.globl	C$Character.h$148$1_0$165
                                    859 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:148: int8_t moveX = 0;
      0002DD F8 00            [12]  860 	ldhl	sp,	#0
      0002DF 36 00            [12]  861 	ld	(hl), #0x00
                           0002E1   862 	C$Character.h$149$1_0$165	= .
                                    863 	.globl	C$Character.h$149$1_0$165
                                    864 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: int8_t moveY = 0;
      0002E1 23               [ 8]  865 	inc	hl
      0002E2 36 00            [12]  866 	ld	(hl), #0x00
                           0002E4   867 	C$Character.h$151$1_0$165	= .
                                    868 	.globl	C$Character.h$151$1_0$165
                                    869 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:151: if (buttons & J_LEFT)
      0002E4 CB 4F            [ 8]  870 	bit	1, a
      0002E6 28 06            [12]  871 	jr	Z, 00104$
                           0002E8   872 	C$Character.h$153$2_0$166	= .
                                    873 	.globl	C$Character.h$153$2_0$166
                                    874 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: moveX = -1;
      0002E8 F8 00            [12]  875 	ldhl	sp,	#0
      0002EA 36 FF            [12]  876 	ld	(hl), #0xff
      0002EC 18 08            [12]  877 	jr	00108$
      0002EE                        878 00104$:
                           0002EE   879 	C$Character.h$155$1_0$165	= .
                                    880 	.globl	C$Character.h$155$1_0$165
                                    881 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: else if (buttons & J_RIGHT)
      0002EE CB 47            [ 8]  882 	bit	0, a
      0002F0 28 04            [12]  883 	jr	Z, 00108$
                           0002F2   884 	C$Character.h$157$2_0$167	= .
                                    885 	.globl	C$Character.h$157$2_0$167
                                    886 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:157: moveX = 1;
      0002F2 F8 00            [12]  887 	ldhl	sp,	#0
      0002F4 36 01            [12]  888 	ld	(hl), #0x01
                           0002F6   889 	C$Character.h$163$1_0$165	= .
                                    890 	.globl	C$Character.h$163$1_0$165
                                    891 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:163: else if (buttons & J_DOWN)
      0002F6                        892 00108$:
                           0002F6   893 	C$Character.h$168$1_0$165	= .
                                    894 	.globl	C$Character.h$168$1_0$165
                                    895 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      0002F6 E6 10            [ 8]  896 	and	a, #0x10
      0002F8 F8 02            [12]  897 	ldhl	sp,	#2
      0002FA 22               [ 8]  898 	ld	(hl+), a
      0002FB 36 00            [12]  899 	ld	(hl), #0x00
                           0002FD   900 	C$Character.h$171$1_0$165	= .
                                    901 	.globl	C$Character.h$171$1_0$165
                                    902 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:171: character->hasJumped = 1;
      0002FD 21 0F 00         [12]  903 	ld	hl, #0x000f
      000300 09               [ 8]  904 	add	hl, bc
      000301 E5               [16]  905 	push	hl
      000302 7D               [ 4]  906 	ld	a, l
      000303 F8 06            [12]  907 	ldhl	sp,	#6
      000305 77               [ 8]  908 	ld	(hl), a
      000306 E1               [12]  909 	pop	hl
      000307 7C               [ 4]  910 	ld	a, h
      000308 F8 05            [12]  911 	ldhl	sp,	#5
      00030A 77               [ 8]  912 	ld	(hl), a
                           00030B   913 	C$Character.h$172$1_0$165	= .
                                    914 	.globl	C$Character.h$172$1_0$165
                                    915 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:172: character->jumpedFrames = 0;
      00030B 21 10 00         [12]  916 	ld	hl, #0x0010
      00030E 09               [ 8]  917 	add	hl, bc
      00030F E5               [16]  918 	push	hl
      000310 7D               [ 4]  919 	ld	a, l
      000311 F8 08            [12]  920 	ldhl	sp,	#8
      000313 77               [ 8]  921 	ld	(hl), a
      000314 E1               [12]  922 	pop	hl
      000315 7C               [ 4]  923 	ld	a, h
      000316 F8 07            [12]  924 	ldhl	sp,	#7
      000318 77               [ 8]  925 	ld	(hl), a
                           000319   926 	C$Character.h$168$1_0$165	= .
                                    927 	.globl	C$Character.h$168$1_0$165
                                    928 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      000319 AF               [ 4]  929 	xor	a, a
      00031A F8 02            [12]  930 	ldhl	sp,	#2
      00031C B6               [ 8]  931 	or	a, (hl)
      00031D 28 0E            [12]  932 	jr	Z, 00110$
                           00031F   933 	C$Character.h$171$2_0$170	= .
                                    934 	.globl	C$Character.h$171$2_0$170
                                    935 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:171: character->hasJumped = 1;
      00031F 23               [ 8]  936 	inc	hl
      000320 23               [ 8]  937 	inc	hl
      000321 2A               [ 8]  938 	ld	a,	(hl+)
      000322 66               [ 8]  939 	ld	h, (hl)
      000323 6F               [ 4]  940 	ld	l, a
      000324 36 01            [12]  941 	ld	(hl), #0x01
                           000326   942 	C$Character.h$172$2_0$170	= .
                                    943 	.globl	C$Character.h$172$2_0$170
                                    944 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:172: character->jumpedFrames = 0;
      000326 F8 06            [12]  945 	ldhl	sp,	#6
      000328 2A               [ 8]  946 	ld	a,	(hl+)
      000329 66               [ 8]  947 	ld	h, (hl)
      00032A 6F               [ 4]  948 	ld	l, a
      00032B 36 00            [12]  949 	ld	(hl), #0x00
      00032D                        950 00110$:
                           00032D   951 	C$Character.h$176$1_0$165	= .
                                    952 	.globl	C$Character.h$176$1_0$165
                                    953 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:176: if (character->hasJumped && (buttons & J_A))
      00032D F8 04            [12]  954 	ldhl	sp,#4
      00032F 2A               [ 8]  955 	ld	a, (hl+)
      000330 5F               [ 4]  956 	ld	e, a
      000331 56               [ 8]  957 	ld	d, (hl)
      000332 1A               [ 8]  958 	ld	a, (de)
      000333 B7               [ 4]  959 	or	a, a
      000334 28 17            [12]  960 	jr	Z, 00112$
      000336 AF               [ 4]  961 	xor	a, a
      000337 F8 02            [12]  962 	ldhl	sp,	#2
      000339 B6               [ 8]  963 	or	a, (hl)
      00033A 28 11            [12]  964 	jr	Z, 00112$
                           00033C   965 	C$Character.h$179$2_0$171	= .
                                    966 	.globl	C$Character.h$179$2_0$171
                                    967 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:179: moveY = -1;
      00033C 2B               [ 8]  968 	dec	hl
      00033D 36 FF            [12]  969 	ld	(hl), #0xff
                           00033F   970 	C$Character.h$182$2_0$171	= .
                                    971 	.globl	C$Character.h$182$2_0$171
                                    972 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:182: character->jumpedFrames++;
      00033F F8 06            [12]  973 	ldhl	sp,#6
      000341 2A               [ 8]  974 	ld	a, (hl+)
      000342 5F               [ 4]  975 	ld	e, a
      000343 3A               [ 8]  976 	ld	a, (hl-)
      000344 57               [ 4]  977 	ld	d, a
      000345 1A               [ 8]  978 	ld	a, (de)
      000346 3C               [ 4]  979 	inc	a
      000347 F5               [16]  980 	push	af
      000348 2A               [ 8]  981 	ld	a,	(hl+)
      000349 66               [ 8]  982 	ld	h, (hl)
      00034A 6F               [ 4]  983 	ld	l, a
      00034B F1               [12]  984 	pop	af
      00034C 77               [ 8]  985 	ld	(hl), a
      00034D                        986 00112$:
                           00034D   987 	C$Character.h$186$1_0$165	= .
                                    988 	.globl	C$Character.h$186$1_0$165
                                    989 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:186: character->movementForceX = moveX;
      00034D 21 0C 00         [12]  990 	ld	hl, #0x000c
      000350 09               [ 8]  991 	add	hl, bc
      000351 5D               [ 4]  992 	ld	e, l
      000352 54               [ 4]  993 	ld	d, h
      000353 F8 00            [12]  994 	ldhl	sp,	#0
      000355 7E               [ 8]  995 	ld	a, (hl)
      000356 12               [ 8]  996 	ld	(de), a
                           000357   997 	C$Character.h$187$1_0$165	= .
                                    998 	.globl	C$Character.h$187$1_0$165
                                    999 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:187: character->movementForceY = moveY;
      000357 21 0D 00         [12] 1000 	ld	hl, #0x000d
      00035A 09               [ 8] 1001 	add	hl, bc
      00035B 4D               [ 4] 1002 	ld	c, l
      00035C 44               [ 4] 1003 	ld	b, h
      00035D F8 01            [12] 1004 	ldhl	sp,	#1
      00035F 7E               [ 8] 1005 	ld	a, (hl)
      000360 02               [ 8] 1006 	ld	(bc), a
                           000361  1007 	C$Character.h$188$1_0$165	= .
                                   1008 	.globl	C$Character.h$188$1_0$165
                                   1009 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:188: }
      000361 E8 08            [16] 1010 	add	sp, #8
                           000363  1011 	C$Character.h$188$1_0$165	= .
                                   1012 	.globl	C$Character.h$188$1_0$165
                           000363  1013 	XG$MoveCharacterWithJoypad$0$0	= .
                                   1014 	.globl	XG$MoveCharacterWithJoypad$0$0
      000363 C9               [16] 1015 	ret
                           000364  1016 	G$SetupCharacter$0$0	= .
                                   1017 	.globl	G$SetupCharacter$0$0
                           000364  1018 	C$Character.h$191$1_0$173	= .
                                   1019 	.globl	C$Character.h$191$1_0$173
                                   1020 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:191: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                   1021 ;	---------------------------------
                                   1022 ; Function SetupCharacter
                                   1023 ; ---------------------------------
      000364                       1024 _SetupCharacter::
      000364 3B               [ 8] 1025 	dec	sp
      000365 F8 00            [12] 1026 	ldhl	sp,	#0
      000367 77               [ 8] 1027 	ld	(hl), a
                           000368  1028 	C$Character.h$193$1_0$173	= .
                                   1029 	.globl	C$Character.h$193$1_0$173
                                   1030 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:193: character->tilemap = tilemap;
      000368 21 11 00         [12] 1031 	ld	hl, #0x0011
      00036B 19               [ 8] 1032 	add	hl, de
      00036C 4D               [ 4] 1033 	ld	c, l
      00036D 44               [ 4] 1034 	ld	b, h
      00036E F8 07            [12] 1035 	ldhl	sp,	#7
      000370 2A               [ 8] 1036 	ld	a, (hl+)
      000371 02               [ 8] 1037 	ld	(bc), a
      000372 03               [ 8] 1038 	inc	bc
      000373 7E               [ 8] 1039 	ld	a, (hl)
      000374 02               [ 8] 1040 	ld	(bc), a
                           000375  1041 	C$Character.h$194$1_0$173	= .
                                   1042 	.globl	C$Character.h$194$1_0$173
                                   1043 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:194: character->spriteId = spriteId;
      000375 F8 00            [12] 1044 	ldhl	sp,	#0
      000377 7E               [ 8] 1045 	ld	a, (hl)
      000378 12               [ 8] 1046 	ld	(de), a
                           000379  1047 	C$Character.h$195$1_0$173	= .
                                   1048 	.globl	C$Character.h$195$1_0$173
                                   1049 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:195: character->spriteTileWidth = tileWidth;
      000379 4B               [ 4] 1050 	ld	c, e
      00037A 42               [ 4] 1051 	ld	b, d
      00037B 03               [ 8] 1052 	inc	bc
      00037C F8 03            [12] 1053 	ldhl	sp,	#3
                           00037E  1054 	C$Character.h$196$1_0$173	= .
                                   1055 	.globl	C$Character.h$196$1_0$173
                                   1056 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:196: character->spriteTileHeight = tileHeight;
      00037E 2A               [ 8] 1057 	ld	a, (hl+)
      00037F 02               [ 8] 1058 	ld	(bc), a
      000380 4B               [ 4] 1059 	ld	c, e
      000381 42               [ 4] 1060 	ld	b, d
      000382 03               [ 8] 1061 	inc	bc
      000383 03               [ 8] 1062 	inc	bc
      000384 7E               [ 8] 1063 	ld	a, (hl)
      000385 02               [ 8] 1064 	ld	(bc), a
                           000386  1065 	C$Character.h$197$1_0$173	= .
                                   1066 	.globl	C$Character.h$197$1_0$173
                                   1067 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:197: character->tilesetStart = tilesetStart;
      000386 21 05 00         [12] 1068 	ld	hl, #0x0005
      000389 19               [ 8] 1069 	add	hl, de
      00038A 4D               [ 4] 1070 	ld	c, l
      00038B 44               [ 4] 1071 	ld	b, h
      00038C F8 05            [12] 1072 	ldhl	sp,	#5
                           00038E  1073 	C$Character.h$198$1_0$173	= .
                                   1074 	.globl	C$Character.h$198$1_0$173
                                   1075 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:198: character->spriteFrames = totalFrames;
      00038E 2A               [ 8] 1076 	ld	a, (hl+)
      00038F 02               [ 8] 1077 	ld	(bc), a
      000390 4B               [ 4] 1078 	ld	c, e
      000391 42               [ 4] 1079 	ld	b, d
      000392 03               [ 8] 1080 	inc	bc
      000393 03               [ 8] 1081 	inc	bc
      000394 03               [ 8] 1082 	inc	bc
      000395 7E               [ 8] 1083 	ld	a, (hl)
      000396 02               [ 8] 1084 	ld	(bc), a
                           000397  1085 	C$Character.h$199$1_0$173	= .
                                   1086 	.globl	C$Character.h$199$1_0$173
                                   1087 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:199: character->underfootState = 0;
      000397 21 0E 00         [12] 1088 	ld	hl, #0x000e
      00039A 19               [ 8] 1089 	add	hl, de
      00039B 36 00            [12] 1090 	ld	(hl), #0x00
                           00039D  1091 	C$Character.h$200$1_0$173	= .
                                   1092 	.globl	C$Character.h$200$1_0$173
                                   1093 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:200: character->jumpedFrames = 0;
      00039D 21 10 00         [12] 1094 	ld	hl, #0x0010
      0003A0 19               [ 8] 1095 	add	hl, de
      0003A1 36 00            [12] 1096 	ld	(hl), #0x00
                           0003A3  1097 	C$Character.h$201$1_0$173	= .
                                   1098 	.globl	C$Character.h$201$1_0$173
                                   1099 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:201: character->hasJumped = 0;
      0003A3 21 0F 00         [12] 1100 	ld	hl, #0x000f
      0003A6 19               [ 8] 1101 	add	hl, de
      0003A7 36 00            [12] 1102 	ld	(hl), #0x00
                           0003A9  1103 	C$Character.h$203$1_0$173	= .
                                   1104 	.globl	C$Character.h$203$1_0$173
                                   1105 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:203: LoadSpriteFrame(character, 0);
      0003A9 AF               [ 4] 1106 	xor	a, a
      0003AA CDr00r00         [24] 1107 	call	_LoadSpriteFrame
                           0003AD  1108 	C$Character.h$204$1_0$173	= .
                                   1109 	.globl	C$Character.h$204$1_0$173
                                   1110 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:204: }
      0003AD 33               [ 8] 1111 	inc	sp
      0003AE E1               [12] 1112 	pop	hl
      0003AF E8 06            [16] 1113 	add	sp, #6
      0003B1 E9               [ 4] 1114 	jp	(hl)
                           0003B2  1115 	G$ShowTitle$0$0	= .
                                   1116 	.globl	G$ShowTitle$0$0
                           0003B2  1117 	C$main.c$38$1_0$178	= .
                                   1118 	.globl	C$main.c$38$1_0$178
                                   1119 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:38: void ShowTitle(void)
                                   1120 ;	---------------------------------
                                   1121 ; Function ShowTitle
                                   1122 ; ---------------------------------
      0003B2                       1123 _ShowTitle::
                           0003B2  1124 	C$main.c$41$1_0$178	= .
                                   1125 	.globl	C$main.c$41$1_0$178
                                   1126 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:41: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0003B2 11r00r00         [12] 1127 	ld	de, #_SplashScreenSprite_tileset
      0003B5 D5               [16] 1128 	push	de
      0003B6 21 00 C8         [12] 1129 	ld	hl, #0xc800
      0003B9 E5               [16] 1130 	push	hl
      0003BA CDr00r00         [24] 1131 	call	_set_bkg_data
      0003BD E8 04            [16] 1132 	add	sp, #4
                           0003BF  1133 	C$main.c$44$1_0$178	= .
                                   1134 	.globl	C$main.c$44$1_0$178
                                   1135 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:44: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      0003BF 11r00r00         [12] 1136 	ld	de, #_SplashScreenSprite_tilemap
      0003C2 D5               [16] 1137 	push	de
      0003C3 21 14 12         [12] 1138 	ld	hl, #0x1214
      0003C6 E5               [16] 1139 	push	hl
      0003C7 AF               [ 4] 1140 	xor	a, a
      0003C8 0F               [ 4] 1141 	rrca
      0003C9 F5               [16] 1142 	push	af
      0003CA CDr00r00         [24] 1143 	call	_set_bkg_tiles
      0003CD E8 06            [16] 1144 	add	sp, #6
                           0003CF  1145 	C$main.c$45$1_0$178	= .
                                   1146 	.globl	C$main.c$45$1_0$178
                                   1147 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:45: }
                           0003CF  1148 	C$main.c$45$1_0$178	= .
                                   1149 	.globl	C$main.c$45$1_0$178
                           0003CF  1150 	XG$ShowTitle$0$0	= .
                                   1151 	.globl	XG$ShowTitle$0$0
      0003CF C9               [16] 1152 	ret
                           0003D0  1153 	G$SetupBackGround$0$0	= .
                                   1154 	.globl	G$SetupBackGround$0$0
                           0003D0  1155 	C$main.c$47$1_0$179	= .
                                   1156 	.globl	C$main.c$47$1_0$179
                                   1157 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: void SetupBackGround()
                                   1158 ;	---------------------------------
                                   1159 ; Function SetupBackGround
                                   1160 ; ---------------------------------
      0003D0                       1161 _SetupBackGround::
                           0003D0  1162 	C$main.c$50$1_0$179	= .
                                   1163 	.globl	C$main.c$50$1_0$179
                                   1164 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:50: set_bkg_data(0, BackGroundSprite_tileset_size, BackGroundSprite_tileset);
      0003D0 11r00r00         [12] 1165 	ld	de, #_BackGroundSprite_tileset
      0003D3 D5               [16] 1166 	push	de
      0003D4 21 00 35         [12] 1167 	ld	hl, #0x3500
      0003D7 E5               [16] 1168 	push	hl
      0003D8 CDr00r00         [24] 1169 	call	_set_bkg_data
      0003DB E8 04            [16] 1170 	add	sp, #4
                           0003DD  1171 	C$main.c$53$1_0$179	= .
                                   1172 	.globl	C$main.c$53$1_0$179
                                   1173 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:53: set_bkg_tiles(0, 0, 40, 18, BackGroundSprite_tilemap);
      0003DD 11r00r00         [12] 1174 	ld	de, #_BackGroundSprite_tilemap
      0003E0 D5               [16] 1175 	push	de
      0003E1 21 28 12         [12] 1176 	ld	hl, #0x1228
      0003E4 E5               [16] 1177 	push	hl
      0003E5 AF               [ 4] 1178 	xor	a, a
      0003E6 0F               [ 4] 1179 	rrca
      0003E7 F5               [16] 1180 	push	af
      0003E8 CDr00r00         [24] 1181 	call	_set_bkg_tiles
      0003EB E8 06            [16] 1182 	add	sp, #6
                           0003ED  1183 	C$main.c$54$1_0$179	= .
                                   1184 	.globl	C$main.c$54$1_0$179
                                   1185 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:54: }
                           0003ED  1186 	C$main.c$54$1_0$179	= .
                                   1187 	.globl	C$main.c$54$1_0$179
                           0003ED  1188 	XG$SetupBackGround$0$0	= .
                                   1189 	.globl	XG$SetupBackGround$0$0
      0003ED C9               [16] 1190 	ret
                           0003EE  1191 	G$DetectCollisions$0$0	= .
                                   1192 	.globl	G$DetectCollisions$0$0
                           0003EE  1193 	C$main.c$56$1_0$181	= .
                                   1194 	.globl	C$main.c$56$1_0$181
                                   1195 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:56: void DetectCollisions(Character *character, uint8_t *predictedX, uint8_t *predictedY)
                                   1196 ;	---------------------------------
                                   1197 ; Function DetectCollisions
                                   1198 ; ---------------------------------
      0003EE                       1199 _DetectCollisions::
                           0003EE  1200 	C$main.c$59$1_0$181	= .
                                   1201 	.globl	C$main.c$59$1_0$181
                                   1202 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:59: if (*predictedY >= GLOUND_LEVEL)
      0003EE F8 02            [12] 1203 	ldhl	sp,	#2
      0003F0 2A               [ 8] 1204 	ld	a, (hl+)
      0003F1 4F               [ 4] 1205 	ld	c, a
      0003F2 46               [ 8] 1206 	ld	b, (hl)
      0003F3 0A               [ 8] 1207 	ld	a, (bc)
      0003F4 6F               [ 4] 1208 	ld	l, a
                                   1209 ;	spillPairReg hl
                                   1210 ;	spillPairReg hl
                           0003F5  1211 	C$main.c$65$1_0$181	= .
                                   1212 	.globl	C$main.c$65$1_0$181
                                   1213 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:65: character->velocityY = 0;
      0003F5 7B               [ 4] 1214 	ld	a, e
      0003F6 C6 09            [ 8] 1215 	add	a, #0x09
      0003F8 5F               [ 4] 1216 	ld	e, a
      0003F9 30 01            [12] 1217 	jr	NC, 00122$
      0003FB 14               [ 4] 1218 	inc	d
      0003FC                       1219 00122$:
                           0003FC  1220 	C$main.c$59$1_0$181	= .
                                   1221 	.globl	C$main.c$59$1_0$181
                                   1222 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:59: if (*predictedY >= GLOUND_LEVEL)
      0003FC 7D               [ 4] 1223 	ld	a, l
      0003FD D6 82            [ 8] 1224 	sub	a, #0x82
      0003FF 38 07            [12] 1225 	jr	C, 00104$
                           000401  1226 	C$main.c$62$2_0$182	= .
                                   1227 	.globl	C$main.c$62$2_0$182
                                   1228 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:62: *predictedY = GLOUND_LEVEL; 
      000401 3E 82            [ 8] 1229 	ld	a, #0x82
      000403 02               [ 8] 1230 	ld	(bc), a
                           000404  1231 	C$main.c$65$2_0$182	= .
                                   1232 	.globl	C$main.c$65$2_0$182
                                   1233 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:65: character->velocityY = 0;
      000404 AF               [ 4] 1234 	xor	a, a
      000405 12               [ 8] 1235 	ld	(de), a
      000406 18 0A            [12] 1236 	jr	00106$
      000408                       1237 00104$:
                           000408  1238 	C$main.c$66$1_0$181	= .
                                   1239 	.globl	C$main.c$66$1_0$181
                                   1240 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:66: }else if(*predictedY < MAX_HEIGHT_LEVEL)
      000408 7D               [ 4] 1241 	ld	a, l
      000409 D6 14            [ 8] 1242 	sub	a, #0x14
      00040B 30 05            [12] 1243 	jr	NC, 00106$
                           00040D  1244 	C$main.c$69$2_0$183	= .
                                   1245 	.globl	C$main.c$69$2_0$183
                                   1246 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:69: *predictedY = MAX_HEIGHT_LEVEL; 
      00040D 3E 14            [ 8] 1247 	ld	a, #0x14
      00040F 02               [ 8] 1248 	ld	(bc), a
                           000410  1249 	C$main.c$72$2_0$183	= .
                                   1250 	.globl	C$main.c$72$2_0$183
                                   1251 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:72: character->velocityY = 0;
      000410 AF               [ 4] 1252 	xor	a, a
      000411 12               [ 8] 1253 	ld	(de), a
      000412                       1254 00106$:
                           000412  1255 	C$main.c$74$1_0$181	= .
                                   1256 	.globl	C$main.c$74$1_0$181
                                   1257 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:74: }
      000412 E1               [12] 1258 	pop	hl
      000413 F1               [12] 1259 	pop	af
      000414 E9               [ 4] 1260 	jp	(hl)
                           000415  1261 	G$MovementPhysics$0$0	= .
                                   1262 	.globl	G$MovementPhysics$0$0
                           000415  1263 	C$main.c$76$1_0$185	= .
                                   1264 	.globl	C$main.c$76$1_0$185
                                   1265 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:76: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                   1266 ;	---------------------------------
                                   1267 ; Function MovementPhysics
                                   1268 ; ---------------------------------
      000415                       1269 _MovementPhysics::
      000415 E8 F7            [16] 1270 	add	sp, #-9
      000417 F8 07            [12] 1271 	ldhl	sp,	#7
      000419 7B               [ 4] 1272 	ld	a, e
      00041A 22               [ 8] 1273 	ld	(hl+), a
                           00041B  1274 	C$main.c$79$1_1$185	= .
                                   1275 	.globl	C$main.c$79$1_1$185
                                   1276 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:79: if (character->movementForceY != 0)
      00041B 7A               [ 4] 1277 	ld	a, d
      00041C 32               [ 8] 1278 	ld	(hl-), a
      00041D 2A               [ 8] 1279 	ld	a, (hl+)
      00041E 5F               [ 4] 1280 	ld	e, a
      00041F 56               [ 8] 1281 	ld	d, (hl)
      000420 21 0D 00         [12] 1282 	ld	hl, #0x000d
      000423 19               [ 8] 1283 	add	hl, de
      000424 E5               [16] 1284 	push	hl
      000425 7D               [ 4] 1285 	ld	a, l
      000426 F8 04            [12] 1286 	ldhl	sp,	#4
      000428 77               [ 8] 1287 	ld	(hl), a
      000429 E1               [12] 1288 	pop	hl
      00042A 7C               [ 4] 1289 	ld	a, h
      00042B F8 03            [12] 1290 	ldhl	sp,	#3
      00042D 32               [ 8] 1291 	ld	(hl-), a
      00042E 2A               [ 8] 1292 	ld	a, (hl+)
      00042F 5F               [ 4] 1293 	ld	e, a
      000430 56               [ 8] 1294 	ld	d, (hl)
      000431 1A               [ 8] 1295 	ld	a, (de)
      000432 F8 06            [12] 1296 	ldhl	sp,	#6
                           000434  1297 	C$main.c$81$1_1$185	= .
                                   1298 	.globl	C$main.c$81$1_1$185
                                   1299 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:81: character->velocityY += character->movementForceY;
      000434 22               [ 8] 1300 	ld	(hl+), a
      000435 2A               [ 8] 1301 	ld	a, (hl+)
      000436 5F               [ 4] 1302 	ld	e, a
      000437 56               [ 8] 1303 	ld	d, (hl)
      000438 21 09 00         [12] 1304 	ld	hl, #0x0009
      00043B 19               [ 8] 1305 	add	hl, de
      00043C 33               [ 8] 1306 	inc	sp
      00043D 33               [ 8] 1307 	inc	sp
      00043E E5               [16] 1308 	push	hl
                           00043F  1309 	C$main.c$79$1_0$185	= .
                                   1310 	.globl	C$main.c$79$1_0$185
                                   1311 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:79: if (character->movementForceY != 0)
      00043F F8 06            [12] 1312 	ldhl	sp,	#6
      000441 7E               [ 8] 1313 	ld	a, (hl)
      000442 B7               [ 4] 1314 	or	a, a
      000443 28 0F            [12] 1315 	jr	Z, 00116$
                           000445  1316 	C$main.c$81$2_0$186	= .
                                   1317 	.globl	C$main.c$81$2_0$186
                                   1318 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:81: character->velocityY += character->movementForceY;
      000445 D1               [12] 1319 	pop	de
      000446 D5               [16] 1320 	push	de
      000447 1A               [ 8] 1321 	ld	a, (de)
      000448 86               [ 8] 1322 	add	a, (hl)
      000449 4F               [ 4] 1323 	ld	c, a
      00044A E1               [12] 1324 	pop	hl
      00044B E5               [16] 1325 	push	hl
      00044C 71               [ 8] 1326 	ld	(hl), c
                           00044D  1327 	C$main.c$82$2_0$186	= .
                                   1328 	.globl	C$main.c$82$2_0$186
                                   1329 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:82: jumpFrameCount = 0;
      00044D 21r02r00         [12] 1330 	ld	hl, #_jumpFrameCount
      000450 36 00            [12] 1331 	ld	(hl), #0x00
      000452 18 57            [12] 1332 	jr	00117$
      000454                       1333 00116$:
                           000454  1334 	C$main.c$86$1_0$185	= .
                                   1335 	.globl	C$main.c$86$1_0$185
                                   1336 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:86: else if (character->underfootState & FOOT_IN_AIR)
      000454 F8 07            [12] 1337 	ldhl	sp,#7
      000456 2A               [ 8] 1338 	ld	a, (hl+)
      000457 5F               [ 4] 1339 	ld	e, a
      000458 56               [ 8] 1340 	ld	d, (hl)
      000459 21 0E 00         [12] 1341 	ld	hl, #0x000e
      00045C 19               [ 8] 1342 	add	hl, de
      00045D 4D               [ 4] 1343 	ld	c, l
      00045E 44               [ 4] 1344 	ld	b, h
      00045F 0A               [ 8] 1345 	ld	a, (bc)
      000460 CB 4F            [ 8] 1346 	bit	1, a
      000462 28 47            [12] 1347 	jr	Z, 00117$
                           000464  1348 	C$main.c$89$2_0$187	= .
                                   1349 	.globl	C$main.c$89$2_0$187
                                   1350 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:89: jumpFrameCount = (jumpFrameCount + 1) % 120;
      000464 21r02r00         [12] 1351 	ld	hl, #_jumpFrameCount
      000467 5E               [ 8] 1352 	ld	e, (hl)
      000468 16 00            [ 8] 1353 	ld	d, #0x00
      00046A 13               [ 8] 1354 	inc	de
      00046B 01 78 00         [12] 1355 	ld	bc, #0x0078
      00046E CDr00r00         [24] 1356 	call	__modsint
      000471 21r02r00         [12] 1357 	ld	hl, #_jumpFrameCount
      000474 71               [ 8] 1358 	ld	(hl), c
                           000475  1359 	C$main.c$92$2_0$187	= .
                                   1360 	.globl	C$main.c$92$2_0$187
                                   1361 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:92: if (jumpFrameCount < 3)
      000475 7E               [ 8] 1362 	ld	a, (hl)
      000476 D6 03            [ 8] 1363 	sub	a, #0x03
      000478 30 06            [12] 1364 	jr	NC, 00111$
                           00047A  1365 	C$main.c$93$2_0$187	= .
                                   1366 	.globl	C$main.c$93$2_0$187
                                   1367 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:93: character->velocityY = -2;
      00047A E1               [12] 1368 	pop	hl
      00047B 36 FE            [12] 1369 	ld	(hl), #0xfe
      00047D E5               [16] 1370 	push	hl
      00047E 18 2B            [12] 1371 	jr	00117$
      000480                       1372 00111$:
                           000480  1373 	C$main.c$94$2_0$187	= .
                                   1374 	.globl	C$main.c$94$2_0$187
                                   1375 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:94: else if (jumpFrameCount < 10)
      000480 FAr02r00         [16] 1376 	ld	a, (#_jumpFrameCount)
      000483 D6 0A            [ 8] 1377 	sub	a, #0x0a
      000485 30 06            [12] 1378 	jr	NC, 00108$
                           000487  1379 	C$main.c$95$2_0$187	= .
                                   1380 	.globl	C$main.c$95$2_0$187
                                   1381 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:95: character->velocityY = -1;
      000487 E1               [12] 1382 	pop	hl
      000488 36 FF            [12] 1383 	ld	(hl), #0xff
      00048A E5               [16] 1384 	push	hl
      00048B 18 1E            [12] 1385 	jr	00117$
      00048D                       1386 00108$:
                           00048D  1387 	C$main.c$96$2_0$187	= .
                                   1388 	.globl	C$main.c$96$2_0$187
                                   1389 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:96: else if (jumpFrameCount < 14)
      00048D FAr02r00         [16] 1390 	ld	a, (#_jumpFrameCount)
      000490 D6 0E            [ 8] 1391 	sub	a, #0x0e
      000492 30 06            [12] 1392 	jr	NC, 00105$
                           000494  1393 	C$main.c$97$2_0$187	= .
                                   1394 	.globl	C$main.c$97$2_0$187
                                   1395 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:97: character->velocityY = 0;
      000494 E1               [12] 1396 	pop	hl
      000495 36 00            [12] 1397 	ld	(hl), #0x00
      000497 E5               [16] 1398 	push	hl
      000498 18 11            [12] 1399 	jr	00117$
      00049A                       1400 00105$:
                           00049A  1401 	C$main.c$98$2_0$187	= .
                                   1402 	.globl	C$main.c$98$2_0$187
                                   1403 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:98: else if (jumpFrameCount < 20)
      00049A FAr02r00         [16] 1404 	ld	a, (#_jumpFrameCount)
      00049D D6 14            [ 8] 1405 	sub	a, #0x14
      00049F 30 06            [12] 1406 	jr	NC, 00102$
                           0004A1  1407 	C$main.c$99$2_0$187	= .
                                   1408 	.globl	C$main.c$99$2_0$187
                                   1409 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:99: character->velocityY = 1;
      0004A1 E1               [12] 1410 	pop	hl
      0004A2 36 01            [12] 1411 	ld	(hl), #0x01
      0004A4 E5               [16] 1412 	push	hl
      0004A5 18 04            [12] 1413 	jr	00117$
      0004A7                       1414 00102$:
                           0004A7  1415 	C$main.c$101$2_0$187	= .
                                   1416 	.globl	C$main.c$101$2_0$187
                                   1417 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:101: character->velocityY = 2;
      0004A7 E1               [12] 1418 	pop	hl
      0004A8 36 02            [12] 1419 	ld	(hl), #0x02
      0004AA E5               [16] 1420 	push	hl
      0004AB                       1421 00117$:
                           0004AB  1422 	C$main.c$105$1_0$185	= .
                                   1423 	.globl	C$main.c$105$1_0$185
                                   1424 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:105: if (character->velocityY != 0 && character->velocityY < -3)
      0004AB D1               [12] 1425 	pop	de
      0004AC D5               [16] 1426 	push	de
      0004AD 1A               [ 8] 1427 	ld	a, (de)
      0004AE B7               [ 4] 1428 	or	a,a
      0004AF 28 0A            [12] 1429 	jr	Z, 00119$
      0004B1 EE 80            [ 8] 1430 	xor	a, #0x80
      0004B3 D6 7D            [ 8] 1431 	sub	a, #0x7d
      0004B5 30 04            [12] 1432 	jr	NC, 00119$
                           0004B7  1433 	C$main.c$106$1_0$185	= .
                                   1434 	.globl	C$main.c$106$1_0$185
                                   1435 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:106: character->velocityY = -3;
      0004B7 E1               [12] 1436 	pop	hl
      0004B8 36 FD            [12] 1437 	ld	(hl), #0xfd
      0004BA E5               [16] 1438 	push	hl
      0004BB                       1439 00119$:
                           0004BB  1440 	C$main.c$105$1_1$185	= .
                                   1441 	.globl	C$main.c$105$1_1$185
                                   1442 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:105: if (character->velocityY != 0 && character->velocityY < -3)
      0004BB D1               [12] 1443 	pop	de
      0004BC D5               [16] 1444 	push	de
      0004BD 1A               [ 8] 1445 	ld	a, (de)
                           0004BE  1446 	C$main.c$107$1_0$185	= .
                                   1447 	.globl	C$main.c$107$1_0$185
                                   1448 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:107: if (character->velocityY != 0 && character->velocityY > 3)
      0004BE 4F               [ 4] 1449 	ld	c, a
      0004BF B7               [ 4] 1450 	or	a, a
      0004C0 28 1B            [12] 1451 	jr	Z, 00122$
      0004C2 59               [ 4] 1452 	ld	e, c
      0004C3 3E 03            [ 8] 1453 	ld	a,#0x03
      0004C5 57               [ 4] 1454 	ld	d,a
      0004C6 91               [ 4] 1455 	sub	a, c
      0004C7 CB 7B            [ 8] 1456 	bit	7, e
      0004C9 28 07            [12] 1457 	jr	Z, 00197$
      0004CB CB 7A            [ 8] 1458 	bit	7, d
      0004CD 20 08            [12] 1459 	jr	NZ, 00198$
      0004CF BF               [ 4] 1460 	cp	a, a
      0004D0 18 05            [12] 1461 	jr	00198$
      0004D2                       1462 00197$:
      0004D2 CB 7A            [ 8] 1463 	bit	7, d
      0004D4 28 01            [12] 1464 	jr	Z, 00198$
      0004D6 37               [ 4] 1465 	scf
      0004D7                       1466 00198$:
      0004D7 30 04            [12] 1467 	jr	NC, 00122$
                           0004D9  1468 	C$main.c$108$1_0$185	= .
                                   1469 	.globl	C$main.c$108$1_0$185
                                   1470 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:108: character->velocityY = 3;
      0004D9 E1               [12] 1471 	pop	hl
      0004DA 36 03            [12] 1472 	ld	(hl), #0x03
      0004DC E5               [16] 1473 	push	hl
      0004DD                       1474 00122$:
                           0004DD  1475 	C$main.c$111$1_1$188	= .
                                   1476 	.globl	C$main.c$111$1_1$188
                                   1477 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:111: uint8_t predictedY = character->y + character->velocityY;
      0004DD F8 07            [12] 1478 	ldhl	sp,#7
      0004DF 2A               [ 8] 1479 	ld	a, (hl+)
      0004E0 5F               [ 4] 1480 	ld	e, a
      0004E1 56               [ 8] 1481 	ld	d, (hl)
      0004E2 21 07 00         [12] 1482 	ld	hl, #0x0007
      0004E5 19               [ 8] 1483 	add	hl, de
      0004E6 4D               [ 4] 1484 	ld	c, l
      0004E7 44               [ 4] 1485 	ld	b, h
      0004E8 0A               [ 8] 1486 	ld	a, (bc)
      0004E9 F8 06            [12] 1487 	ldhl	sp,	#6
      0004EB 32               [ 8] 1488 	ld	(hl-), a
      0004EC 2B               [ 8] 1489 	dec	hl
      0004ED D1               [12] 1490 	pop	de
      0004EE D5               [16] 1491 	push	de
      0004EF 1A               [ 8] 1492 	ld	a, (de)
      0004F0 22               [ 8] 1493 	ld	(hl+), a
      0004F1 23               [ 8] 1494 	inc	hl
      0004F2 3A               [ 8] 1495 	ld	a, (hl-)
      0004F3 2B               [ 8] 1496 	dec	hl
      0004F4 86               [ 8] 1497 	add	a, (hl)
      0004F5 23               [ 8] 1498 	inc	hl
      0004F6 23               [ 8] 1499 	inc	hl
      0004F7 77               [ 8] 1500 	ld	(hl), a
      0004F8 3A               [ 8] 1501 	ld	a, (hl-)
      0004F9 77               [ 8] 1502 	ld	(hl), a
                           0004FA  1503 	C$main.c$114$1_1$188	= .
                                   1504 	.globl	C$main.c$114$1_1$188
                                   1505 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:114: DetectCollisions(character, &character->x, &predictedY);
      0004FA F8 05            [12] 1506 	ldhl	sp,	#5
      0004FC 4D               [ 4] 1507 	ld	c, l
      0004FD 44               [ 4] 1508 	ld	b, h
      0004FE F8 07            [12] 1509 	ldhl	sp,#7
      000500 2A               [ 8] 1510 	ld	a, (hl+)
      000501 5F               [ 4] 1511 	ld	e, a
      000502 56               [ 8] 1512 	ld	d, (hl)
      000503 21 06 00         [12] 1513 	ld	hl, #0x0006
      000506 19               [ 8] 1514 	add	hl, de
      000507 5D               [ 4] 1515 	ld	e, l
      000508 54               [ 4] 1516 	ld	d, h
      000509 D5               [16] 1517 	push	de
      00050A C5               [16] 1518 	push	bc
      00050B 4B               [ 4] 1519 	ld	c, e
      00050C 42               [ 4] 1520 	ld	b, d
      00050D F8 0B            [12] 1521 	ldhl	sp,	#11
      00050F 2A               [ 8] 1522 	ld	a, (hl+)
      000510 5F               [ 4] 1523 	ld	e, a
      000511 56               [ 8] 1524 	ld	d, (hl)
      000512 CDrEEr03         [24] 1525 	call	_DetectCollisions
      000515 D1               [12] 1526 	pop	de
                           000516  1527 	C$main.c$117$1_1$188	= .
                                   1528 	.globl	C$main.c$117$1_1$188
                                   1529 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:117: MoveCharacter(character, character->x, predictedY);
      000516 1A               [ 8] 1530 	ld	a, (de)
      000517 4F               [ 4] 1531 	ld	c, a
      000518 F8 05            [12] 1532 	ldhl	sp,	#5
      00051A 2A               [ 8] 1533 	ld	a, (hl+)
      00051B 23               [ 8] 1534 	inc	hl
      00051C F5               [16] 1535 	push	af
      00051D 33               [ 8] 1536 	inc	sp
      00051E 79               [ 4] 1537 	ld	a, c
      00051F 5E               [ 8] 1538 	ld	e, (hl)
      000520 23               [ 8] 1539 	inc	hl
      000521 56               [ 8] 1540 	ld	d, (hl)
      000522 CDr05r02         [24] 1541 	call	_MoveCharacter
                           000525  1542 	C$main.c$120$1_1$188	= .
                                   1543 	.globl	C$main.c$120$1_1$188
                                   1544 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:120: lastMovementY = character->movementForceY;
      000525 F8 02            [12] 1545 	ldhl	sp,#2
      000527 2A               [ 8] 1546 	ld	a, (hl+)
      000528 5F               [ 4] 1547 	ld	e, a
      000529 56               [ 8] 1548 	ld	d, (hl)
      00052A 1A               [ 8] 1549 	ld	a, (de)
      00052B EAr04r00         [16] 1550 	ld	(#_lastMovementY),a
                           00052E  1551 	C$main.c$121$1_1$185	= .
                                   1552 	.globl	C$main.c$121$1_1$185
                                   1553 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: }
      00052E E8 09            [16] 1554 	add	sp, #9
                           000530  1555 	C$main.c$121$1_1$185	= .
                                   1556 	.globl	C$main.c$121$1_1$185
                           000530  1557 	XG$MovementPhysics$0$0	= .
                                   1558 	.globl	XG$MovementPhysics$0$0
      000530 C9               [16] 1559 	ret
                           000531  1560 	G$Hit$0$0	= .
                                   1561 	.globl	G$Hit$0$0
                           000531  1562 	C$main.c$123$1_1$190	= .
                                   1563 	.globl	C$main.c$123$1_1$190
                                   1564 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:123: BOOLEAN Hit(uint8_t playerX, uint8_t playerY, uint8_t objX, uint8_t objY)
                                   1565 ;	---------------------------------
                                   1566 ; Function Hit
                                   1567 ; ---------------------------------
      000531                       1568 _Hit::
      000531 E8 FB            [16] 1569 	add	sp, #-5
      000533 4F               [ 4] 1570 	ld	c, a
      000534 F8 04            [12] 1571 	ldhl	sp,	#4
      000536 73               [ 8] 1572 	ld	(hl), e
                           000537  1573 	C$main.c$125$1_0$190	= .
                                   1574 	.globl	C$main.c$125$1_0$190
                                   1575 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:125: return (playerX < objX + 8 && objX < playerX + 8) && (playerY < objY + 8 && objY < playerY + 8);
      000537 F8 07            [12] 1576 	ldhl	sp,	#7
      000539 7E               [ 8] 1577 	ld	a, (hl)
      00053A F8 00            [12] 1578 	ldhl	sp,	#0
      00053C 22               [ 8] 1579 	ld	(hl+), a
      00053D 36 00            [12] 1580 	ld	(hl), #0x00
      00053F D1               [12] 1581 	pop	de
      000540 D5               [16] 1582 	push	de
      000541 21 08 00         [12] 1583 	ld	hl, #0x0008
      000544 19               [ 8] 1584 	add	hl, de
      000545 E5               [16] 1585 	push	hl
      000546 7D               [ 4] 1586 	ld	a, l
      000547 F8 04            [12] 1587 	ldhl	sp,	#4
      000549 77               [ 8] 1588 	ld	(hl), a
      00054A E1               [12] 1589 	pop	hl
      00054B 7C               [ 4] 1590 	ld	a, h
      00054C F8 03            [12] 1591 	ldhl	sp,	#3
      00054E 32               [ 8] 1592 	ld	(hl-), a
      00054F 06 00            [ 8] 1593 	ld	b, #0x00
      000551 79               [ 4] 1594 	ld	a, c
      000552 96               [ 8] 1595 	sub	a, (hl)
      000553 23               [ 8] 1596 	inc	hl
      000554 78               [ 4] 1597 	ld	a, b
      000555 9E               [ 8] 1598 	sbc	a, (hl)
      000556 78               [ 4] 1599 	ld	a, b
      000557 57               [ 4] 1600 	ld	d, a
      000558 5E               [ 8] 1601 	ld	e, (hl)
      000559 CB 7B            [ 8] 1602 	bit	7, e
      00055B 28 07            [12] 1603 	jr	Z, 00132$
      00055D CB 7A            [ 8] 1604 	bit	7, d
      00055F 20 08            [12] 1605 	jr	NZ, 00133$
      000561 BF               [ 4] 1606 	cp	a, a
      000562 18 05            [12] 1607 	jr	00133$
      000564                       1608 00132$:
      000564 CB 7A            [ 8] 1609 	bit	7, d
      000566 28 01            [12] 1610 	jr	Z, 00133$
      000568 37               [ 4] 1611 	scf
      000569                       1612 00133$:
      000569 30 79            [12] 1613 	jr	NC, 00103$
      00056B 21 08 00         [12] 1614 	ld	hl, #0x0008
      00056E 09               [ 8] 1615 	add	hl, bc
      00056F 4D               [ 4] 1616 	ld	c, l
      000570 44               [ 4] 1617 	ld	b, h
      000571 F8 00            [12] 1618 	ldhl	sp,	#0
      000573 2A               [ 8] 1619 	ld	a, (hl+)
      000574 91               [ 4] 1620 	sub	a, c
      000575 7E               [ 8] 1621 	ld	a, (hl)
      000576 98               [ 4] 1622 	sbc	a, b
      000577 56               [ 8] 1623 	ld	d, (hl)
      000578 78               [ 4] 1624 	ld	a, b
      000579 5F               [ 4] 1625 	ld	e, a
      00057A CB 7B            [ 8] 1626 	bit	7, e
      00057C 28 07            [12] 1627 	jr	Z, 00134$
      00057E CB 7A            [ 8] 1628 	bit	7, d
      000580 20 08            [12] 1629 	jr	NZ, 00135$
      000582 BF               [ 4] 1630 	cp	a, a
      000583 18 05            [12] 1631 	jr	00135$
      000585                       1632 00134$:
      000585 CB 7A            [ 8] 1633 	bit	7, d
      000587 28 01            [12] 1634 	jr	Z, 00135$
      000589 37               [ 4] 1635 	scf
      00058A                       1636 00135$:
      00058A 30 58            [12] 1637 	jr	NC, 00103$
      00058C F8 08            [12] 1638 	ldhl	sp,	#8
      00058E 7E               [ 8] 1639 	ld	a, (hl)
      00058F F8 00            [12] 1640 	ldhl	sp,	#0
      000591 22               [ 8] 1641 	ld	(hl+), a
      000592 36 00            [12] 1642 	ld	(hl), #0x00
      000594 D1               [12] 1643 	pop	de
      000595 D5               [16] 1644 	push	de
      000596 21 08 00         [12] 1645 	ld	hl, #0x0008
      000599 19               [ 8] 1646 	add	hl, de
      00059A E5               [16] 1647 	push	hl
      00059B 7D               [ 4] 1648 	ld	a, l
      00059C F8 04            [12] 1649 	ldhl	sp,	#4
      00059E 77               [ 8] 1650 	ld	(hl), a
      00059F E1               [12] 1651 	pop	hl
      0005A0 7C               [ 4] 1652 	ld	a, h
      0005A1 F8 03            [12] 1653 	ldhl	sp,	#3
      0005A3 22               [ 8] 1654 	ld	(hl+), a
      0005A4 3A               [ 8] 1655 	ld	a, (hl-)
      0005A5 2B               [ 8] 1656 	dec	hl
      0005A6 4F               [ 4] 1657 	ld	c, a
      0005A7 06 00            [ 8] 1658 	ld	b, #0x00
      0005A9 79               [ 4] 1659 	ld	a, c
      0005AA 96               [ 8] 1660 	sub	a, (hl)
      0005AB 23               [ 8] 1661 	inc	hl
      0005AC 78               [ 4] 1662 	ld	a, b
      0005AD 9E               [ 8] 1663 	sbc	a, (hl)
      0005AE 78               [ 4] 1664 	ld	a, b
      0005AF 57               [ 4] 1665 	ld	d, a
      0005B0 5E               [ 8] 1666 	ld	e, (hl)
      0005B1 CB 7B            [ 8] 1667 	bit	7, e
      0005B3 28 07            [12] 1668 	jr	Z, 00136$
      0005B5 CB 7A            [ 8] 1669 	bit	7, d
      0005B7 20 08            [12] 1670 	jr	NZ, 00137$
      0005B9 BF               [ 4] 1671 	cp	a, a
      0005BA 18 05            [12] 1672 	jr	00137$
      0005BC                       1673 00136$:
      0005BC CB 7A            [ 8] 1674 	bit	7, d
      0005BE 28 01            [12] 1675 	jr	Z, 00137$
      0005C0 37               [ 4] 1676 	scf
      0005C1                       1677 00137$:
      0005C1 30 21            [12] 1678 	jr	NC, 00103$
      0005C3 21 08 00         [12] 1679 	ld	hl, #0x0008
      0005C6 09               [ 8] 1680 	add	hl, bc
      0005C7 4D               [ 4] 1681 	ld	c, l
      0005C8 44               [ 4] 1682 	ld	b, h
      0005C9 F8 00            [12] 1683 	ldhl	sp,	#0
      0005CB 2A               [ 8] 1684 	ld	a, (hl+)
      0005CC 91               [ 4] 1685 	sub	a, c
      0005CD 7E               [ 8] 1686 	ld	a, (hl)
      0005CE 98               [ 4] 1687 	sbc	a, b
      0005CF 56               [ 8] 1688 	ld	d, (hl)
      0005D0 78               [ 4] 1689 	ld	a, b
      0005D1 5F               [ 4] 1690 	ld	e, a
      0005D2 CB 7B            [ 8] 1691 	bit	7, e
      0005D4 28 07            [12] 1692 	jr	Z, 00138$
      0005D6 CB 7A            [ 8] 1693 	bit	7, d
      0005D8 20 08            [12] 1694 	jr	NZ, 00139$
      0005DA BF               [ 4] 1695 	cp	a, a
      0005DB 18 05            [12] 1696 	jr	00139$
      0005DD                       1697 00138$:
      0005DD CB 7A            [ 8] 1698 	bit	7, d
      0005DF 28 01            [12] 1699 	jr	Z, 00139$
      0005E1 37               [ 4] 1700 	scf
      0005E2                       1701 00139$:
      0005E2 38 03            [12] 1702 	jr	C, 00104$
      0005E4                       1703 00103$:
      0005E4 AF               [ 4] 1704 	xor	a, a
      0005E5 18 02            [12] 1705 	jr	00105$
      0005E7                       1706 00104$:
      0005E7 3E 01            [ 8] 1707 	ld	a, #0x01
      0005E9                       1708 00105$:
                           0005E9  1709 	C$main.c$126$1_0$190	= .
                                   1710 	.globl	C$main.c$126$1_0$190
                                   1711 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:126: }
      0005E9 E8 05            [16] 1712 	add	sp, #5
      0005EB E1               [12] 1713 	pop	hl
      0005EC C1               [12] 1714 	pop	bc
      0005ED E9               [ 4] 1715 	jp	(hl)
                           0005EE  1716 	G$SetupBlock$0$0	= .
                                   1717 	.globl	G$SetupBlock$0$0
                           0005EE  1718 	C$main.c$128$1_0$192	= .
                                   1719 	.globl	C$main.c$128$1_0$192
                                   1720 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:128: void SetupBlock(Block* block)
                                   1721 ;	---------------------------------
                                   1722 ; Function SetupBlock
                                   1723 ; ---------------------------------
      0005EE                       1724 _SetupBlock::
      0005EE E8 F2            [16] 1725 	add	sp, #-14
      0005F0 F8 09            [12] 1726 	ldhl	sp,	#9
      0005F2 7B               [ 4] 1727 	ld	a, e
      0005F3 22               [ 8] 1728 	ld	(hl+), a
      0005F4 72               [ 8] 1729 	ld	(hl), d
                           0005F5  1730 	C$main.c$131$1_0$192	= .
                                   1731 	.globl	C$main.c$131$1_0$192
                                   1732 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:131: set_sprite_data(BirdSprite_tileset_size + 1, 4, blocksprite_tileset);
      0005F5 11r00r00         [12] 1733 	ld	de, #_blocksprite_tileset
      0005F8 D5               [16] 1734 	push	de
      0005F9 21 27 04         [12] 1735 	ld	hl, #0x427
      0005FC E5               [16] 1736 	push	hl
      0005FD CDr00r00         [24] 1737 	call	_set_sprite_data
      000600 E8 04            [16] 1738 	add	sp, #4
                           000602  1739 	C$main.c$133$6_0$197	= .
                                   1740 	.globl	C$main.c$133$6_0$197
                                   1741 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:133: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000602 F8 09            [12] 1742 	ldhl	sp,#9
      000604 2A               [ 8] 1743 	ld	a, (hl+)
      000605 5F               [ 4] 1744 	ld	e, a
      000606 56               [ 8] 1745 	ld	d, (hl)
      000607 21 02 00         [12] 1746 	ld	hl, #0x0002
      00060A 19               [ 8] 1747 	add	hl, de
      00060B 33               [ 8] 1748 	inc	sp
      00060C 33               [ 8] 1749 	inc	sp
      00060D E5               [16] 1750 	push	hl
      00060E F8 09            [12] 1751 	ldhl	sp,#9
      000610 2A               [ 8] 1752 	ld	a, (hl+)
      000611 5F               [ 4] 1753 	ld	e, a
      000612 56               [ 8] 1754 	ld	d, (hl)
      000613 21 03 00         [12] 1755 	ld	hl, #0x0003
      000616 19               [ 8] 1756 	add	hl, de
      000617 E5               [16] 1757 	push	hl
      000618 7D               [ 4] 1758 	ld	a, l
      000619 F8 04            [12] 1759 	ldhl	sp,	#4
      00061B 77               [ 8] 1760 	ld	(hl), a
      00061C E1               [12] 1761 	pop	hl
      00061D 7C               [ 4] 1762 	ld	a, h
      00061E F8 03            [12] 1763 	ldhl	sp,	#3
      000620 77               [ 8] 1764 	ld	(hl), a
      000621 F8 0B            [12] 1765 	ldhl	sp,	#11
      000623 36 00            [12] 1766 	ld	(hl), #0x00
      000625                       1767 00116$:
      000625 F8 0B            [12] 1768 	ldhl	sp,	#11
      000627 7E               [ 8] 1769 	ld	a, (hl)
      000628 D6 06            [ 8] 1770 	sub	a, #0x06
      00062A D2rBCr07         [16] 1771 	jp	NC, 00118$
                           00062D  1772 	C$main.c$135$3_0$194	= .
                                   1773 	.globl	C$main.c$135$3_0$194
                                   1774 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:135: uint8_t baseSpriteId = i * blockOffset;
      00062D 7E               [ 8] 1775 	ld	a, (hl)
      00062E 87               [ 4] 1776 	add	a, a
      00062F 87               [ 4] 1777 	add	a, a
      000630 F8 04            [12] 1778 	ldhl	sp,	#4
      000632 77               [ 8] 1779 	ld	(hl), a
                                   1780 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:136: set_sprite_tile(baseSpriteId + 4, 39); 
      000633 2A               [ 8] 1781 	ld	a, (hl+)
      000634 23               [ 8] 1782 	inc	hl
      000635 77               [ 8] 1783 	ld	(hl), a
      000636 7E               [ 8] 1784 	ld	a, (hl)
      000637 C6 04            [ 8] 1785 	add	a, #0x04
      000639 F8 0D            [12] 1786 	ldhl	sp,	#13
      00063B 77               [ 8] 1787 	ld	(hl), a
                                   1788 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00063C 3A               [ 8] 1789 	ld	a, (hl-)
      00063D 22               [ 8] 1790 	ld	(hl+), a
      00063E 36 00            [12] 1791 	ld	(hl), #0x00
      000640 3E 02            [ 8] 1792 	ld	a, #0x02
      000642                       1793 00165$:
      000642 F8 0C            [12] 1794 	ldhl	sp,	#12
      000644 CB 26            [16] 1795 	sla	(hl)
      000646 23               [ 8] 1796 	inc	hl
      000647 CB 16            [16] 1797 	rl	(hl)
      000649 3D               [ 4] 1798 	dec	a
      00064A 20 F6            [12] 1799 	jr	NZ, 00165$
      00064C 2B               [ 8] 1800 	dec	hl
      00064D 2A               [ 8] 1801 	ld	a, (hl+)
      00064E 5F               [ 4] 1802 	ld	e, a
      00064F 56               [ 8] 1803 	ld	d, (hl)
      000650 21r00r00         [12] 1804 	ld	hl, #_shadow_OAM
      000653 19               [ 8] 1805 	add	hl, de
      000654 E5               [16] 1806 	push	hl
      000655 7D               [ 4] 1807 	ld	a, l
      000656 F8 09            [12] 1808 	ldhl	sp,	#9
      000658 77               [ 8] 1809 	ld	(hl), a
      000659 E1               [12] 1810 	pop	hl
      00065A 7C               [ 4] 1811 	ld	a, h
      00065B F8 08            [12] 1812 	ldhl	sp,	#8
      00065D 32               [ 8] 1813 	ld	(hl-), a
      00065E 2A               [ 8] 1814 	ld	a, (hl+)
      00065F 5F               [ 4] 1815 	ld	e, a
      000660 56               [ 8] 1816 	ld	d, (hl)
      000661 21 02 00         [12] 1817 	ld	hl, #0x0002
      000664 19               [ 8] 1818 	add	hl, de
      000665 E5               [16] 1819 	push	hl
      000666 7D               [ 4] 1820 	ld	a, l
      000667 F8 0E            [12] 1821 	ldhl	sp,	#14
      000669 77               [ 8] 1822 	ld	(hl), a
      00066A E1               [12] 1823 	pop	hl
      00066B 7C               [ 4] 1824 	ld	a, h
      00066C F8 0D            [12] 1825 	ldhl	sp,	#13
      00066E 32               [ 8] 1826 	ld	(hl-), a
      00066F 2A               [ 8] 1827 	ld	a,	(hl+)
      000670 66               [ 8] 1828 	ld	h, (hl)
      000671 6F               [ 4] 1829 	ld	l, a
      000672 36 27            [12] 1830 	ld	(hl), #0x27
                                   1831 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:137: set_sprite_tile(baseSpriteId + 5, 40); 
      000674 F8 06            [12] 1832 	ldhl	sp,	#6
      000676 7E               [ 8] 1833 	ld	a, (hl)
      000677 C6 05            [ 8] 1834 	add	a, #0x05
      000679 F8 0D            [12] 1835 	ldhl	sp,	#13
      00067B 77               [ 8] 1836 	ld	(hl), a
                                   1837 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00067C 3A               [ 8] 1838 	ld	a, (hl-)
      00067D 22               [ 8] 1839 	ld	(hl+), a
      00067E 36 00            [12] 1840 	ld	(hl), #0x00
      000680 3E 02            [ 8] 1841 	ld	a, #0x02
      000682                       1842 00166$:
      000682 F8 0C            [12] 1843 	ldhl	sp,	#12
      000684 CB 26            [16] 1844 	sla	(hl)
      000686 23               [ 8] 1845 	inc	hl
      000687 CB 16            [16] 1846 	rl	(hl)
      000689 3D               [ 4] 1847 	dec	a
      00068A 20 F6            [12] 1848 	jr	NZ, 00166$
      00068C 2B               [ 8] 1849 	dec	hl
      00068D 2A               [ 8] 1850 	ld	a, (hl+)
      00068E 5F               [ 4] 1851 	ld	e, a
      00068F 56               [ 8] 1852 	ld	d, (hl)
      000690 21r00r00         [12] 1853 	ld	hl, #_shadow_OAM
      000693 19               [ 8] 1854 	add	hl, de
      000694 E5               [16] 1855 	push	hl
      000695 7D               [ 4] 1856 	ld	a, l
      000696 F8 09            [12] 1857 	ldhl	sp,	#9
      000698 77               [ 8] 1858 	ld	(hl), a
      000699 E1               [12] 1859 	pop	hl
      00069A 7C               [ 4] 1860 	ld	a, h
      00069B F8 08            [12] 1861 	ldhl	sp,	#8
      00069D 32               [ 8] 1862 	ld	(hl-), a
      00069E 2A               [ 8] 1863 	ld	a, (hl+)
      00069F 5F               [ 4] 1864 	ld	e, a
      0006A0 56               [ 8] 1865 	ld	d, (hl)
      0006A1 21 02 00         [12] 1866 	ld	hl, #0x0002
      0006A4 19               [ 8] 1867 	add	hl, de
      0006A5 E5               [16] 1868 	push	hl
      0006A6 7D               [ 4] 1869 	ld	a, l
      0006A7 F8 0E            [12] 1870 	ldhl	sp,	#14
      0006A9 77               [ 8] 1871 	ld	(hl), a
      0006AA E1               [12] 1872 	pop	hl
      0006AB 7C               [ 4] 1873 	ld	a, h
      0006AC F8 0D            [12] 1874 	ldhl	sp,	#13
      0006AE 32               [ 8] 1875 	ld	(hl-), a
      0006AF 2A               [ 8] 1876 	ld	a,	(hl+)
      0006B0 66               [ 8] 1877 	ld	h, (hl)
      0006B1 6F               [ 4] 1878 	ld	l, a
      0006B2 36 28            [12] 1879 	ld	(hl), #0x28
                                   1880 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:138: set_sprite_tile(baseSpriteId + 6, 41); 
      0006B4 F8 06            [12] 1881 	ldhl	sp,	#6
      0006B6 7E               [ 8] 1882 	ld	a, (hl)
      0006B7 C6 06            [ 8] 1883 	add	a, #0x06
      0006B9 F8 0D            [12] 1884 	ldhl	sp,	#13
      0006BB 77               [ 8] 1885 	ld	(hl), a
                                   1886 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0006BC 3A               [ 8] 1887 	ld	a, (hl-)
      0006BD 22               [ 8] 1888 	ld	(hl+), a
      0006BE 36 00            [12] 1889 	ld	(hl), #0x00
      0006C0 3E 02            [ 8] 1890 	ld	a, #0x02
      0006C2                       1891 00167$:
      0006C2 F8 0C            [12] 1892 	ldhl	sp,	#12
      0006C4 CB 26            [16] 1893 	sla	(hl)
      0006C6 23               [ 8] 1894 	inc	hl
      0006C7 CB 16            [16] 1895 	rl	(hl)
      0006C9 3D               [ 4] 1896 	dec	a
      0006CA 20 F6            [12] 1897 	jr	NZ, 00167$
      0006CC 2B               [ 8] 1898 	dec	hl
      0006CD 2A               [ 8] 1899 	ld	a, (hl+)
      0006CE 5F               [ 4] 1900 	ld	e, a
      0006CF 56               [ 8] 1901 	ld	d, (hl)
      0006D0 21r00r00         [12] 1902 	ld	hl, #_shadow_OAM
      0006D3 19               [ 8] 1903 	add	hl, de
      0006D4 E5               [16] 1904 	push	hl
      0006D5 7D               [ 4] 1905 	ld	a, l
      0006D6 F8 09            [12] 1906 	ldhl	sp,	#9
      0006D8 77               [ 8] 1907 	ld	(hl), a
      0006D9 E1               [12] 1908 	pop	hl
      0006DA 7C               [ 4] 1909 	ld	a, h
      0006DB F8 08            [12] 1910 	ldhl	sp,	#8
      0006DD 32               [ 8] 1911 	ld	(hl-), a
      0006DE 2A               [ 8] 1912 	ld	a, (hl+)
      0006DF 5F               [ 4] 1913 	ld	e, a
      0006E0 56               [ 8] 1914 	ld	d, (hl)
      0006E1 21 02 00         [12] 1915 	ld	hl, #0x0002
      0006E4 19               [ 8] 1916 	add	hl, de
      0006E5 E5               [16] 1917 	push	hl
      0006E6 7D               [ 4] 1918 	ld	a, l
      0006E7 F8 0E            [12] 1919 	ldhl	sp,	#14
      0006E9 77               [ 8] 1920 	ld	(hl), a
      0006EA E1               [12] 1921 	pop	hl
      0006EB 7C               [ 4] 1922 	ld	a, h
      0006EC F8 0D            [12] 1923 	ldhl	sp,	#13
      0006EE 32               [ 8] 1924 	ld	(hl-), a
      0006EF 2A               [ 8] 1925 	ld	a,	(hl+)
      0006F0 66               [ 8] 1926 	ld	h, (hl)
      0006F1 6F               [ 4] 1927 	ld	l, a
      0006F2 36 29            [12] 1928 	ld	(hl), #0x29
                                   1929 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:139: set_sprite_tile(baseSpriteId + 7, 42);
      0006F4 F8 06            [12] 1930 	ldhl	sp,	#6
      0006F6 7E               [ 8] 1931 	ld	a, (hl)
      0006F7 C6 07            [ 8] 1932 	add	a, #0x07
      0006F9 4F               [ 4] 1933 	ld	c, a
                                   1934 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0006FA F8 0C            [12] 1935 	ldhl	sp,	#12
      0006FC 79               [ 4] 1936 	ld	a, c
      0006FD 22               [ 8] 1937 	ld	(hl+), a
      0006FE 36 00            [12] 1938 	ld	(hl), #0x00
      000700 3E 02            [ 8] 1939 	ld	a, #0x02
      000702                       1940 00168$:
      000702 F8 0C            [12] 1941 	ldhl	sp,	#12
      000704 CB 26            [16] 1942 	sla	(hl)
      000706 23               [ 8] 1943 	inc	hl
      000707 CB 16            [16] 1944 	rl	(hl)
      000709 3D               [ 4] 1945 	dec	a
      00070A 20 F6            [12] 1946 	jr	NZ, 00168$
      00070C 2B               [ 8] 1947 	dec	hl
      00070D 2A               [ 8] 1948 	ld	a, (hl+)
      00070E 5F               [ 4] 1949 	ld	e, a
      00070F 56               [ 8] 1950 	ld	d, (hl)
      000710 21r00r00         [12] 1951 	ld	hl, #_shadow_OAM
      000713 19               [ 8] 1952 	add	hl, de
      000714 E5               [16] 1953 	push	hl
      000715 7D               [ 4] 1954 	ld	a, l
      000716 F8 09            [12] 1955 	ldhl	sp,	#9
      000718 77               [ 8] 1956 	ld	(hl), a
      000719 E1               [12] 1957 	pop	hl
      00071A 7C               [ 4] 1958 	ld	a, h
      00071B F8 08            [12] 1959 	ldhl	sp,	#8
      00071D 32               [ 8] 1960 	ld	(hl-), a
      00071E 2A               [ 8] 1961 	ld	a, (hl+)
      00071F 5F               [ 4] 1962 	ld	e, a
      000720 56               [ 8] 1963 	ld	d, (hl)
      000721 21 02 00         [12] 1964 	ld	hl, #0x0002
      000724 19               [ 8] 1965 	add	hl, de
      000725 E5               [16] 1966 	push	hl
      000726 7D               [ 4] 1967 	ld	a, l
      000727 F8 0E            [12] 1968 	ldhl	sp,	#14
      000729 77               [ 8] 1969 	ld	(hl), a
      00072A E1               [12] 1970 	pop	hl
      00072B 7C               [ 4] 1971 	ld	a, h
      00072C F8 0D            [12] 1972 	ldhl	sp,	#13
      00072E 32               [ 8] 1973 	ld	(hl-), a
      00072F 2A               [ 8] 1974 	ld	a,	(hl+)
      000730 66               [ 8] 1975 	ld	h, (hl)
      000731 6F               [ 4] 1976 	ld	l, a
      000732 36 2A            [12] 1977 	ld	(hl), #0x2a
                           000734  1978 	C$main.c$141$2_0$192	= .
                                   1979 	.globl	C$main.c$141$2_0$192
                                   1980 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:141: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      000734 F8 0C            [12] 1981 	ldhl	sp,	#12
      000736 36 00            [12] 1982 	ld	(hl), #0x00
      000738                       1983 00113$:
      000738 F8 02            [12] 1984 	ldhl	sp,#2
      00073A 2A               [ 8] 1985 	ld	a, (hl+)
      00073B 5F               [ 4] 1986 	ld	e, a
      00073C 56               [ 8] 1987 	ld	d, (hl)
      00073D 1A               [ 8] 1988 	ld	a, (de)
      00073E 47               [ 4] 1989 	ld	b, a
      00073F F8 0C            [12] 1990 	ldhl	sp,	#12
      000741 7E               [ 8] 1991 	ld	a, (hl)
      000742 90               [ 4] 1992 	sub	a, b
      000743 28 71            [12] 1993 	jr	Z, 00117$
                           000745  1994 	C$main.c$143$7_0$198	= .
                                   1995 	.globl	C$main.c$143$7_0$198
                                   1996 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:143: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      000745 F8 04            [12] 1997 	ldhl	sp,	#4
      000747 7E               [ 8] 1998 	ld	a, (hl)
      000748 F8 0C            [12] 1999 	ldhl	sp,	#12
      00074A 86               [ 8] 2000 	add	a, (hl)
      00074B F8 05            [12] 2001 	ldhl	sp,	#5
      00074D 77               [ 8] 2002 	ld	(hl), a
      00074E F8 0D            [12] 2003 	ldhl	sp,	#13
      000750 36 00            [12] 2004 	ld	(hl), #0x00
      000752                       2005 00110$:
      000752 D1               [12] 2006 	pop	de
      000753 D5               [16] 2007 	push	de
      000754 1A               [ 8] 2008 	ld	a, (de)
      000755 F8 08            [12] 2009 	ldhl	sp,	#8
      000757 77               [ 8] 2010 	ld	(hl), a
      000758 F8 0D            [12] 2011 	ldhl	sp,	#13
      00075A 7E               [ 8] 2012 	ld	a, (hl)
      00075B F8 08            [12] 2013 	ldhl	sp,	#8
      00075D 96               [ 8] 2014 	sub	a, (hl)
      00075E 28 51            [12] 2015 	jr	Z, 00114$
                           000760  2016 	C$main.c$145$2_0$192	= .
                                   2017 	.globl	C$main.c$145$2_0$192
                                   2018 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:145: uint8_t index = baseSpriteId + iy + (ix * block->blockWidth);
      000760 F8 08            [12] 2019 	ldhl	sp,	#8
      000762 5E               [ 8] 2020 	ld	e, (hl)
      000763 F8 0D            [12] 2021 	ldhl	sp,	#13
      000765 7E               [ 8] 2022 	ld	a, (hl)
      000766 CDr00r00         [24] 2023 	call	__muluchar
      000769 F8 08            [12] 2024 	ldhl	sp,#8
      00076B 71               [ 8] 2025 	ld	(hl), c
      00076C 7E               [ 8] 2026 	ld	a, (hl)
      00076D F8 05            [12] 2027 	ldhl	sp,	#5
      00076F 86               [ 8] 2028 	add	a, (hl)
      000770 23               [ 8] 2029 	inc	hl
      000771 77               [ 8] 2030 	ld	(hl), a
                                   2031 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:146: move_sprite(index, block[i].x + (ix * 8), block[i].y + (iy * 8));       
      000772 F8 0B            [12] 2032 	ldhl	sp,	#11
      000774 7E               [ 8] 2033 	ld	a, (hl)
      000775 F8 07            [12] 2034 	ldhl	sp,	#7
      000777 22               [ 8] 2035 	ld	(hl+), a
      000778 AF               [ 4] 2036 	xor	a, a
      000779 32               [ 8] 2037 	ld	(hl-), a
      00077A 2A               [ 8] 2038 	ld	a, (hl+)
      00077B 56               [ 8] 2039 	ld	d, (hl)
      00077C 23               [ 8] 2040 	inc	hl
      00077D 87               [ 4] 2041 	add	a, a
      00077E CB 12            [ 8] 2042 	rl	d
      000780 87               [ 4] 2043 	add	a, a
      000781 CB 12            [ 8] 2044 	rl	d
      000783 5F               [ 4] 2045 	ld	e, a
      000784 2A               [ 8] 2046 	ld	a,	(hl+)
      000785 66               [ 8] 2047 	ld	h, (hl)
      000786 6F               [ 4] 2048 	ld	l, a
      000787 19               [ 8] 2049 	add	hl, de
                                   2050 ;	spillPairReg hl
                                   2051 ;	spillPairReg hl
      000788 5D               [ 4] 2052 	ld	e,l
      000789 54               [ 4] 2053 	ld	d,h
                                   2054 ;	spillPairReg hl
                                   2055 ;	spillPairReg hl
      00078A 23               [ 8] 2056 	inc	hl
      00078B 4E               [ 8] 2057 	ld	c, (hl)
      00078C F8 0C            [12] 2058 	ldhl	sp,	#12
      00078E 2A               [ 8] 2059 	ld	a, (hl+)
      00078F 87               [ 4] 2060 	add	a, a
      000790 87               [ 4] 2061 	add	a, a
      000791 87               [ 4] 2062 	add	a, a
      000792 81               [ 4] 2063 	add	a, c
      000793 47               [ 4] 2064 	ld	b, a
      000794 1A               [ 8] 2065 	ld	a, (de)
      000795 4F               [ 4] 2066 	ld	c, a
      000796 7E               [ 8] 2067 	ld	a, (hl)
      000797 87               [ 4] 2068 	add	a, a
      000798 87               [ 4] 2069 	add	a, a
      000799 87               [ 4] 2070 	add	a, a
      00079A 81               [ 4] 2071 	add	a, c
      00079B 4F               [ 4] 2072 	ld	c, a
                                   2073 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00079C F8 06            [12] 2074 	ldhl	sp,	#6
      00079E 5E               [ 8] 2075 	ld	e, (hl)
      00079F 16 00            [ 8] 2076 	ld	d, #0x00
      0007A1 6B               [ 4] 2077 	ld	l, e
      0007A2 62               [ 4] 2078 	ld	h, d
      0007A3 29               [ 8] 2079 	add	hl, hl
      0007A4 29               [ 8] 2080 	add	hl, hl
      0007A5 11r00r00         [12] 2081 	ld	de, #_shadow_OAM
      0007A8 19               [ 8] 2082 	add	hl, de
                                   2083 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      0007A9 78               [ 4] 2084 	ld	a, b
      0007AA 22               [ 8] 2085 	ld	(hl+), a
      0007AB 71               [ 8] 2086 	ld	(hl), c
                           0007AC  2087 	C$main.c$143$6_0$197	= .
                                   2088 	.globl	C$main.c$143$6_0$197
                                   2089 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:143: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      0007AC F8 0D            [12] 2090 	ldhl	sp,	#13
      0007AE 34               [12] 2091 	inc	(hl)
      0007AF 18 A1            [12] 2092 	jr	00110$
      0007B1                       2093 00114$:
                           0007B1  2094 	C$main.c$141$4_0$195	= .
                                   2095 	.globl	C$main.c$141$4_0$195
                                   2096 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:141: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      0007B1 F8 0C            [12] 2097 	ldhl	sp,	#12
      0007B3 34               [12] 2098 	inc	(hl)
      0007B4 18 82            [12] 2099 	jr	00113$
      0007B6                       2100 00117$:
                           0007B6  2101 	C$main.c$133$2_0$193	= .
                                   2102 	.globl	C$main.c$133$2_0$193
                                   2103 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:133: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0007B6 F8 0B            [12] 2104 	ldhl	sp,	#11
      0007B8 34               [12] 2105 	inc	(hl)
      0007B9 C3r25r06         [16] 2106 	jp	00116$
      0007BC                       2107 00118$:
                           0007BC  2108 	C$main.c$150$2_0$192	= .
                                   2109 	.globl	C$main.c$150$2_0$192
                                   2110 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:150: }
      0007BC E8 0E            [16] 2111 	add	sp, #14
                           0007BE  2112 	C$main.c$150$2_0$192	= .
                                   2113 	.globl	C$main.c$150$2_0$192
                           0007BE  2114 	XG$SetupBlock$0$0	= .
                                   2115 	.globl	XG$SetupBlock$0$0
      0007BE C9               [16] 2116 	ret
                           0007BF  2117 	G$ScrollBlock$0$0	= .
                                   2118 	.globl	G$ScrollBlock$0$0
                           0007BF  2119 	C$main.c$152$2_0$215	= .
                                   2120 	.globl	C$main.c$152$2_0$215
                                   2121 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:152: void ScrollBlock()
                                   2122 ;	---------------------------------
                                   2123 ; Function ScrollBlock
                                   2124 ; ---------------------------------
      0007BF                       2125 _ScrollBlock::
      0007BF E8 F9            [16] 2126 	add	sp, #-7
                           0007C1  2127 	C$main.c$154$3_0$216	= .
                                   2128 	.globl	C$main.c$154$3_0$216
                                   2129 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:154: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0007C1 F8 04            [12] 2130 	ldhl	sp,	#4
      0007C3 36 00            [12] 2131 	ld	(hl), #0x00
      0007C5                       2132 00114$:
      0007C5 F8 04            [12] 2133 	ldhl	sp,	#4
      0007C7 7E               [ 8] 2134 	ld	a, (hl)
      0007C8 D6 06            [ 8] 2135 	sub	a, #0x06
      0007CA D2r99r08         [16] 2136 	jp	NC, 00116$
                           0007CD  2137 	C$main.c$156$3_0$216	= .
                                   2138 	.globl	C$main.c$156$3_0$216
                                   2139 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:156: uint8_t baseSpriteId = i * BLOCK_SPRITE_OFFSET;
      0007CD 7E               [ 8] 2140 	ld	a, (hl)
      0007CE 87               [ 4] 2141 	add	a, a
      0007CF 87               [ 4] 2142 	add	a, a
      0007D0 F8 00            [12] 2143 	ldhl	sp,	#0
      0007D2 77               [ 8] 2144 	ld	(hl), a
                           0007D3  2145 	C$main.c$157$3_0$216	= .
                                   2146 	.globl	C$main.c$157$3_0$216
                                   2147 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:157: block[i].x -= 1;
      0007D3 F8 04            [12] 2148 	ldhl	sp,	#4
      0007D5 2A               [ 8] 2149 	ld	a, (hl+)
      0007D6 22               [ 8] 2150 	ld	(hl+), a
      0007D7 AF               [ 4] 2151 	xor	a, a
      0007D8 32               [ 8] 2152 	ld	(hl-), a
      0007D9 7E               [ 8] 2153 	ld	a, (hl)
      0007DA F8 02            [12] 2154 	ldhl	sp,	#2
      0007DC 22               [ 8] 2155 	ld	(hl+), a
      0007DD 36 00            [12] 2156 	ld	(hl), #0x00
      0007DF 3E 02            [ 8] 2157 	ld	a, #0x02
      0007E1                       2158 00170$:
      0007E1 F8 02            [12] 2159 	ldhl	sp,	#2
      0007E3 CB 26            [16] 2160 	sla	(hl)
      0007E5 23               [ 8] 2161 	inc	hl
      0007E6 CB 16            [16] 2162 	rl	(hl)
      0007E8 3D               [ 4] 2163 	dec	a
      0007E9 20 F6            [12] 2164 	jr	NZ, 00170$
      0007EB 2B               [ 8] 2165 	dec	hl
      0007EC 2A               [ 8] 2166 	ld	a, (hl+)
      0007ED 5F               [ 4] 2167 	ld	e, a
      0007EE 56               [ 8] 2168 	ld	d, (hl)
      0007EF 21r13r00         [12] 2169 	ld	hl, #_block
      0007F2 19               [ 8] 2170 	add	hl, de
      0007F3 E5               [16] 2171 	push	hl
      0007F4 7D               [ 4] 2172 	ld	a, l
      0007F5 F8 07            [12] 2173 	ldhl	sp,	#7
      0007F7 77               [ 8] 2174 	ld	(hl), a
      0007F8 E1               [12] 2175 	pop	hl
      0007F9 7C               [ 4] 2176 	ld	a, h
      0007FA F8 06            [12] 2177 	ldhl	sp,	#6
      0007FC 32               [ 8] 2178 	ld	(hl-), a
      0007FD 2A               [ 8] 2179 	ld	a, (hl+)
      0007FE 5F               [ 4] 2180 	ld	e, a
      0007FF 56               [ 8] 2181 	ld	d, (hl)
      000800 1A               [ 8] 2182 	ld	a, (de)
      000801 4F               [ 4] 2183 	ld	c, a
      000802 0D               [ 4] 2184 	dec	c
      000803 3A               [ 8] 2185 	ld	a, (hl-)
      000804 6E               [ 8] 2186 	ld	l, (hl)
      000805 67               [ 4] 2187 	ld	h, a
      000806 71               [ 8] 2188 	ld	(hl), c
                           000807  2189 	C$main.c$158$2_0$215	= .
                                   2190 	.globl	C$main.c$158$2_0$215
                                   2191 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:158: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      000807 F8 05            [12] 2192 	ldhl	sp,	#5
      000809 36 00            [12] 2193 	ld	(hl), #0x00
      00080B                       2194 00111$:
      00080B 21r16r00         [12] 2195 	ld	hl, #(_block + 3)
      00080E 46               [ 8] 2196 	ld	b, (hl)
      00080F F8 05            [12] 2197 	ldhl	sp,	#5
      000811 7E               [ 8] 2198 	ld	a, (hl)
      000812 90               [ 4] 2199 	sub	a, b
      000813 CAr93r08         [16] 2200 	jp	Z,00115$
                           000816  2201 	C$main.c$160$7_0$220	= .
                                   2202 	.globl	C$main.c$160$7_0$220
                                   2203 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:160: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      000816 F8 00            [12] 2204 	ldhl	sp,	#0
      000818 7E               [ 8] 2205 	ld	a, (hl)
      000819 F8 05            [12] 2206 	ldhl	sp,	#5
      00081B 86               [ 8] 2207 	add	a, (hl)
      00081C F8 01            [12] 2208 	ldhl	sp,	#1
      00081E 77               [ 8] 2209 	ld	(hl), a
      00081F F8 06            [12] 2210 	ldhl	sp,	#6
      000821 36 00            [12] 2211 	ld	(hl), #0x00
      000823                       2212 00108$:
      000823 FAr15r00         [16] 2213 	ld	a, (#(_block + 2) + 0)
      000826 F8 03            [12] 2214 	ldhl	sp,	#3
      000828 77               [ 8] 2215 	ld	(hl), a
      000829 F8 06            [12] 2216 	ldhl	sp,	#6
      00082B 7E               [ 8] 2217 	ld	a, (hl)
      00082C F8 03            [12] 2218 	ldhl	sp,	#3
      00082E 96               [ 8] 2219 	sub	a, (hl)
      00082F 28 5C            [12] 2220 	jr	Z, 00112$
                           000831  2221 	C$main.c$162$2_0$215	= .
                                   2222 	.globl	C$main.c$162$2_0$215
                                   2223 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:162: uint8_t index = baseSpriteId + iy + (ix * block->blockWidth);
      000831 F8 03            [12] 2224 	ldhl	sp,	#3
      000833 5E               [ 8] 2225 	ld	e, (hl)
      000834 F8 06            [12] 2226 	ldhl	sp,	#6
      000836 7E               [ 8] 2227 	ld	a, (hl)
      000837 CDr00r00         [24] 2228 	call	__muluchar
      00083A 79               [ 4] 2229 	ld	a, c
      00083B F8 01            [12] 2230 	ldhl	sp,	#1
      00083D 86               [ 8] 2231 	add	a, (hl)
                                   2232 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      00083E 6F               [ 4] 2233 	ld	l, a
      00083F 01r00r00         [12] 2234 	ld	bc, #_shadow_OAM+0
                                   2235 ;	spillPairReg hl
                                   2236 ;	spillPairReg hl
      000842 26 00            [ 8] 2237 	ld	h, #0x00
                                   2238 ;	spillPairReg hl
                                   2239 ;	spillPairReg hl
      000844 29               [ 8] 2240 	add	hl, hl
      000845 29               [ 8] 2241 	add	hl, hl
      000846 09               [ 8] 2242 	add	hl, bc
                                   2243 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      000847 7E               [ 8] 2244 	ld	a, (hl)
      000848 22               [ 8] 2245 	ld	(hl+), a
      000849 35               [12] 2246 	dec	(hl)
      00084A 7E               [ 8] 2247 	ld	a, (hl)
                           00084B  2248 	C$main.c$164$7_0$220	= .
                                   2249 	.globl	C$main.c$164$7_0$220
                                   2250 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:164: if(block[i].x <= -128)
      00084B F8 04            [12] 2251 	ldhl	sp,	#4
      00084D 7E               [ 8] 2252 	ld	a, (hl)
      00084E 16 00            [ 8] 2253 	ld	d, #0x00
      000850 87               [ 4] 2254 	add	a, a
      000851 CB 12            [ 8] 2255 	rl	d
      000853 87               [ 4] 2256 	add	a, a
      000854 CB 12            [ 8] 2257 	rl	d
      000856 5F               [ 4] 2258 	ld	e, a
      000857 21r13r00         [12] 2259 	ld	hl, #_block
      00085A 19               [ 8] 2260 	add	hl, de
      00085B E5               [16] 2261 	push	hl
      00085C 7D               [ 4] 2262 	ld	a, l
      00085D F8 04            [12] 2263 	ldhl	sp,	#4
      00085F 77               [ 8] 2264 	ld	(hl), a
      000860 E1               [12] 2265 	pop	hl
      000861 7C               [ 4] 2266 	ld	a, h
      000862 F8 03            [12] 2267 	ldhl	sp,	#3
      000864 32               [ 8] 2268 	ld	(hl-), a
      000865 2A               [ 8] 2269 	ld	a, (hl+)
      000866 5F               [ 4] 2270 	ld	e, a
      000867 56               [ 8] 2271 	ld	d, (hl)
      000868 1A               [ 8] 2272 	ld	a, (de)
      000869 4F               [ 4] 2273 	ld	c, a
      00086A 59               [ 4] 2274 	ld	e, c
      00086B 3E 80            [ 8] 2275 	ld	a,#0x80
      00086D 57               [ 4] 2276 	ld	d,a
      00086E 91               [ 4] 2277 	sub	a, c
      00086F CB 7B            [ 8] 2278 	bit	7, e
      000871 28 07            [12] 2279 	jr	Z, 00174$
      000873 CB 7A            [ 8] 2280 	bit	7, d
      000875 20 08            [12] 2281 	jr	NZ, 00175$
      000877 BF               [ 4] 2282 	cp	a, a
      000878 18 05            [12] 2283 	jr	00175$
      00087A                       2284 00174$:
      00087A CB 7A            [ 8] 2285 	bit	7, d
      00087C 28 01            [12] 2286 	jr	Z, 00175$
      00087E 37               [ 4] 2287 	scf
      00087F                       2288 00175$:
      00087F 38 07            [12] 2289 	jr	C, 00109$
                           000881  2290 	C$main.c$166$8_0$221	= .
                                   2291 	.globl	C$main.c$166$8_0$221
                                   2292 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:166: block[i].x = 127;
      000881 F8 02            [12] 2293 	ldhl	sp,	#2
      000883 2A               [ 8] 2294 	ld	a,	(hl+)
      000884 66               [ 8] 2295 	ld	h, (hl)
      000885 6F               [ 4] 2296 	ld	l, a
      000886 36 7F            [12] 2297 	ld	(hl), #0x7f
      000888                       2298 00109$:
                           000888  2299 	C$main.c$160$6_0$219	= .
                                   2300 	.globl	C$main.c$160$6_0$219
                                   2301 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:160: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      000888 F8 06            [12] 2302 	ldhl	sp,	#6
      00088A 34               [12] 2303 	inc	(hl)
      00088B 18 96            [12] 2304 	jr	00108$
      00088D                       2305 00112$:
                           00088D  2306 	C$main.c$158$4_0$217	= .
                                   2307 	.globl	C$main.c$158$4_0$217
                                   2308 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:158: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      00088D F8 05            [12] 2309 	ldhl	sp,	#5
      00088F 34               [12] 2310 	inc	(hl)
      000890 C3r0Br08         [16] 2311 	jp	00111$
      000893                       2312 00115$:
                           000893  2313 	C$main.c$154$2_0$215	= .
                                   2314 	.globl	C$main.c$154$2_0$215
                                   2315 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:154: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000893 F8 04            [12] 2316 	ldhl	sp,	#4
      000895 34               [12] 2317 	inc	(hl)
      000896 C3rC5r07         [16] 2318 	jp	00114$
      000899                       2319 00116$:
                           000899  2320 	C$main.c$171$2_0$215	= .
                                   2321 	.globl	C$main.c$171$2_0$215
                                   2322 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:171: }
      000899 E8 07            [16] 2323 	add	sp, #7
                           00089B  2324 	C$main.c$171$2_0$215	= .
                                   2325 	.globl	C$main.c$171$2_0$215
                           00089B  2326 	XG$ScrollBlock$0$0	= .
                                   2327 	.globl	XG$ScrollBlock$0$0
      00089B C9               [16] 2328 	ret
                           00089C  2329 	G$main$0$0	= .
                                   2330 	.globl	G$main$0$0
                           00089C  2331 	C$main.c$173$2_0$226	= .
                                   2332 	.globl	C$main.c$173$2_0$226
                                   2333 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:173: void main(void)
                                   2334 ;	---------------------------------
                                   2335 ; Function main
                                   2336 ; ---------------------------------
      00089C                       2337 _main::
      00089C E8 FC            [16] 2338 	add	sp, #-4
                           00089E  2339 	C$main.c$176$1_0$226	= .
                                   2340 	.globl	C$main.c$176$1_0$226
                                   2341 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:176: initarand(__rand_seed);
      00089E 21r00r00         [12] 2342 	ld	hl, #___rand_seed
      0008A1 2A               [ 8] 2343 	ld	a, (hl+)
      0008A2 5F               [ 4] 2344 	ld	e, a
      0008A3 56               [ 8] 2345 	ld	d, (hl)
      0008A4 D5               [16] 2346 	push	de
      0008A5 CDr00r00         [24] 2347 	call	_initarand
      0008A8 E1               [12] 2348 	pop	hl
                           0008A9  2349 	C$main.c$178$1_0$226	= .
                                   2350 	.globl	C$main.c$178$1_0$226
                                   2351 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:178: SetupBackGround();
      0008A9 CDrD0r03         [24] 2352 	call	_SetupBackGround
                           0008AC  2353 	C$main.c$180$1_0$226	= .
                                   2354 	.globl	C$main.c$180$1_0$226
                                   2355 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:180: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      0008AC 11r00r00         [12] 2356 	ld	de, #_BirdSprite_tileset
      0008AF D5               [16] 2357 	push	de
      0008B0 21 00 26         [12] 2358 	ld	hl, #0x2600
      0008B3 E5               [16] 2359 	push	hl
      0008B4 CDr00r00         [24] 2360 	call	_set_sprite_data
      0008B7 E8 04            [16] 2361 	add	sp, #4
                           0008B9  2362 	C$main.c$182$1_0$226	= .
                                   2363 	.globl	C$main.c$182$1_0$226
                                   2364 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:182: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      0008B9 11r00r00         [12] 2365 	ld	de, #_BirdSprite_tilemap
      0008BC D5               [16] 2366 	push	de
      0008BD 3E 08            [ 8] 2367 	ld	a, #0x08
      0008BF F5               [16] 2368 	push	af
      0008C0 33               [ 8] 2369 	inc	sp
      0008C1 AF               [ 4] 2370 	xor	a, a
      0008C2 67               [ 4] 2371 	ld	h, a
      0008C3 2E 02            [ 8] 2372 	ld	l, #0x02
      0008C5 E5               [16] 2373 	push	hl
      0008C6 3E 02            [ 8] 2374 	ld	a, #0x02
      0008C8 F5               [16] 2375 	push	af
      0008C9 33               [ 8] 2376 	inc	sp
      0008CA AF               [ 4] 2377 	xor	a, a
      0008CB 11r00r00         [12] 2378 	ld	de, #_player
      0008CE CDr64r03         [24] 2379 	call	_SetupCharacter
                           0008D1  2380 	C$main.c$184$1_0$226	= .
                                   2381 	.globl	C$main.c$184$1_0$226
                                   2382 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:184: MoveCharacter(&player, 16, 56);
      0008D1 3E 38            [ 8] 2383 	ld	a, #0x38
      0008D3 F5               [16] 2384 	push	af
      0008D4 33               [ 8] 2385 	inc	sp
      0008D5 3E 10            [ 8] 2386 	ld	a, #0x10
      0008D7 11r00r00         [12] 2387 	ld	de, #_player
      0008DA CDr05r02         [24] 2388 	call	_MoveCharacter
                           0008DD  2389 	C$main.c$187$3_0$227	= .
                                   2390 	.globl	C$main.c$187$3_0$227
                                   2391 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:187: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0008DD 0E 00            [ 8] 2392 	ld	c, #0x00
      0008DF                       2393 00111$:
      0008DF 79               [ 4] 2394 	ld	a, c
      0008E0 EE 80            [ 8] 2395 	xor	a, #0x80
      0008E2 D6 86            [ 8] 2396 	sub	a, #0x86
      0008E4 30 4E            [12] 2397 	jr	NC, 00101$
                           0008E6  2398 	C$main.c$189$3_0$228	= .
                                   2399 	.globl	C$main.c$189$3_0$228
                                   2400 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:189: block[i].x = 60 * (i + 1);
      0008E6 79               [ 4] 2401 	ld	a, c
      0008E7 6F               [ 4] 2402 	ld	l, a
                                   2403 ;	spillPairReg hl
                                   2404 ;	spillPairReg hl
      0008E8 07               [ 4] 2405 	rlca
      0008E9 9F               [ 4] 2406 	sbc	a, a
      0008EA 67               [ 4] 2407 	ld	h, a
                                   2408 ;	spillPairReg hl
                                   2409 ;	spillPairReg hl
      0008EB 29               [ 8] 2410 	add	hl, hl
      0008EC 29               [ 8] 2411 	add	hl, hl
      0008ED 5D               [ 4] 2412 	ld	e, l
      0008EE 54               [ 4] 2413 	ld	d, h
      0008EF 21r13r00         [12] 2414 	ld	hl, #_block
      0008F2 19               [ 8] 2415 	add	hl, de
      0008F3 E5               [16] 2416 	push	hl
      0008F4 7D               [ 4] 2417 	ld	a, l
      0008F5 F8 03            [12] 2418 	ldhl	sp,	#3
      0008F7 77               [ 8] 2419 	ld	(hl), a
      0008F8 E1               [12] 2420 	pop	hl
      0008F9 7C               [ 4] 2421 	ld	a, h
      0008FA F8 02            [12] 2422 	ldhl	sp,	#2
      0008FC 22               [ 8] 2423 	ld	(hl+), a
      0008FD 79               [ 4] 2424 	ld	a, c
      0008FE 3C               [ 4] 2425 	inc	a
      0008FF 77               [ 8] 2426 	ld	(hl), a
      000900 3A               [ 8] 2427 	ld	a, (hl-)
      000901 4F               [ 4] 2428 	ld	c, a
      000902 87               [ 4] 2429 	add	a, a
      000903 87               [ 4] 2430 	add	a, a
      000904 87               [ 4] 2431 	add	a, a
      000905 87               [ 4] 2432 	add	a, a
      000906 91               [ 4] 2433 	sub	a, c
      000907 87               [ 4] 2434 	add	a, a
      000908 87               [ 4] 2435 	add	a, a
      000909 4F               [ 4] 2436 	ld	c, a
      00090A 3A               [ 8] 2437 	ld	a, (hl-)
      00090B 6E               [ 8] 2438 	ld	l, (hl)
      00090C 67               [ 4] 2439 	ld	h, a
      00090D 71               [ 8] 2440 	ld	(hl), c
                           00090E  2441 	C$main.c$190$3_0$228	= .
                                   2442 	.globl	C$main.c$190$3_0$228
                                   2443 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:190: block[i].y = 20 * (i + 1);
      00090E F8 01            [12] 2444 	ldhl	sp,	#1
      000910 2A               [ 8] 2445 	ld	a, (hl+)
      000911 4F               [ 4] 2446 	ld	c, a
      000912 2A               [ 8] 2447 	ld	a, (hl+)
      000913 47               [ 4] 2448 	ld	b, a
      000914 03               [ 8] 2449 	inc	bc
                           000915  2450 	C$main.c$191$3_0$228	= .
                                   2451 	.globl	C$main.c$191$3_0$228
                                   2452 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:191: block[i].blockWidth = 2;
      000915 3A               [ 8] 2453 	ld	a, (hl-)
      000916 2B               [ 8] 2454 	dec	hl
      000917 5F               [ 4] 2455 	ld	e, a
      000918 87               [ 4] 2456 	add	a, a
      000919 87               [ 4] 2457 	add	a, a
      00091A 83               [ 4] 2458 	add	a, e
      00091B 87               [ 4] 2459 	add	a, a
      00091C 87               [ 4] 2460 	add	a, a
      00091D 02               [ 8] 2461 	ld	(bc), a
      00091E 2A               [ 8] 2462 	ld	a, (hl+)
      00091F 4F               [ 4] 2463 	ld	c, a
                           000920  2464 	C$main.c$192$3_0$228	= .
                                   2465 	.globl	C$main.c$192$3_0$228
                                   2466 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:192: block[i].blockHeight = 2;
      000920 3A               [ 8] 2467 	ld	a, (hl-)
      000921 47               [ 4] 2468 	ld	b, a
      000922 03               [ 8] 2469 	inc	bc
      000923 03               [ 8] 2470 	inc	bc
      000924 3E 02            [ 8] 2471 	ld	a, #0x02
      000926 02               [ 8] 2472 	ld	(bc), a
      000927 2A               [ 8] 2473 	ld	a, (hl+)
      000928 4F               [ 4] 2474 	ld	c, a
                           000929  2475 	C$main.c$187$2_0$227	= .
                                   2476 	.globl	C$main.c$187$2_0$227
                                   2477 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:187: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000929 2A               [ 8] 2478 	ld	a, (hl+)
      00092A 47               [ 4] 2479 	ld	b, a
      00092B 03               [ 8] 2480 	inc	bc
      00092C 03               [ 8] 2481 	inc	bc
      00092D 03               [ 8] 2482 	inc	bc
      00092E 3E 02            [ 8] 2483 	ld	a, #0x02
      000930 02               [ 8] 2484 	ld	(bc), a
      000931 4E               [ 8] 2485 	ld	c, (hl)
      000932 18 AB            [12] 2486 	jr	00111$
      000934                       2487 00101$:
                           000934  2488 	C$main.c$195$1_0$226	= .
                                   2489 	.globl	C$main.c$195$1_0$226
                                   2490 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:195: SetupBlock(block);
      000934 11r13r00         [12] 2491 	ld	de, #_block
      000937 CDrEEr05         [24] 2492 	call	_SetupBlock
                           00093A  2493 	C$main.c$197$1_0$226	= .
                                   2494 	.globl	C$main.c$197$1_0$226
                                   2495 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:197: SHOW_BKG;
      00093A F0r00            [12] 2496 	ldh	a, (_LCDC_REG + 0)
      00093C F6 01            [ 8] 2497 	or	a, #0x01
      00093E E0r00            [12] 2498 	ldh	(_LCDC_REG + 0), a
                           000940  2499 	C$main.c$198$1_0$226	= .
                                   2500 	.globl	C$main.c$198$1_0$226
                                   2501 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:198: SHOW_SPRITES;
      000940 F0r00            [12] 2502 	ldh	a, (_LCDC_REG + 0)
      000942 F6 02            [ 8] 2503 	or	a, #0x02
      000944 E0r00            [12] 2504 	ldh	(_LCDC_REG + 0), a
                           000946  2505 	C$main.c$199$1_0$226	= .
                                   2506 	.globl	C$main.c$199$1_0$226
                                   2507 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:199: DISPLAY_ON;
      000946 F0r00            [12] 2508 	ldh	a, (_LCDC_REG + 0)
      000948 F6 80            [ 8] 2509 	or	a, #0x80
      00094A E0r00            [12] 2510 	ldh	(_LCDC_REG + 0), a
                           00094C  2511 	C$main.c$201$2_0$229	= .
                                   2512 	.globl	C$main.c$201$2_0$229
                                   2513 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:201: BOOLEAN gameLoop = 1;
      00094C F8 02            [12] 2514 	ldhl	sp,	#2
      00094E 36 01            [12] 2515 	ld	(hl), #0x01
                           000950  2516 	C$main.c$203$2_1$230	= .
                                   2517 	.globl	C$main.c$203$2_1$230
                                   2518 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:203: while(gameLoop)
      000950                       2519 00105$:
      000950 F8 02            [12] 2520 	ldhl	sp,	#2
      000952 7E               [ 8] 2521 	ld	a, (hl)
      000953 B7               [ 4] 2522 	or	a, a
      000954 CArD7r09         [16] 2523 	jp	Z, 00107$
                           000957  2524 	C$main.c$205$2_1$230	= .
                                   2525 	.globl	C$main.c$205$2_1$230
                                   2526 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:205: player.underfootState = player.y >= GLOUND_LEVEL ? FOOT_ON_LAND : FOOT_IN_AIR;
      000957 FAr07r00         [16] 2527 	ld	a, (#(_player + 7) + 0)
      00095A D6 82            [ 8] 2528 	sub	a, #0x82
      00095C 38 09            [12] 2529 	jr	C, 00118$
      00095E 2B               [ 8] 2530 	dec	hl
      00095F 2B               [ 8] 2531 	dec	hl
      000960 3E 01            [ 8] 2532 	ld	a, #0x01
      000962 22               [ 8] 2533 	ld	(hl+), a
      000963 AF               [ 4] 2534 	xor	a, a
      000964 77               [ 8] 2535 	ld	(hl), a
      000965 18 07            [12] 2536 	jr	00119$
      000967                       2537 00118$:
      000967 F8 00            [12] 2538 	ldhl	sp,	#0
      000969 3E 02            [ 8] 2539 	ld	a, #0x02
      00096B 22               [ 8] 2540 	ld	(hl+), a
      00096C AF               [ 4] 2541 	xor	a, a
      00096D 77               [ 8] 2542 	ld	(hl), a
      00096E                       2543 00119$:
      00096E F8 00            [12] 2544 	ldhl	sp,	#0
      000970 7E               [ 8] 2545 	ld	a, (hl)
      000971 EAr0Er00         [16] 2546 	ld	(#(_player + 14)),a
                           000974  2547 	C$main.c$206$2_1$230	= .
                                   2548 	.globl	C$main.c$206$2_1$230
                                   2549 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:206: MoveCharacterWithJoypad(&player);
      000974 11r00r00         [12] 2550 	ld	de, #_player
      000977 CDrD6r02         [24] 2551 	call	_MoveCharacterWithJoypad
                           00097A  2552 	C$main.c$207$2_1$230	= .
                                   2553 	.globl	C$main.c$207$2_1$230
                                   2554 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:207: MovementPhysics(&player, 3);
      00097A 3E 03            [ 8] 2555 	ld	a, #0x03
      00097C 11r00r00         [12] 2556 	ld	de, #_player
      00097F CDr15r04         [24] 2557 	call	_MovementPhysics
                           000982  2558 	C$main.c$208$2_1$230	= .
                                   2559 	.globl	C$main.c$208$2_1$230
                                   2560 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:208: LoadNextSpriteFrame(&player);
      000982 11r00r00         [12] 2561 	ld	de, #_player
      000985 CDrB3r01         [24] 2562 	call	_LoadNextSpriteFrame
                                   2563 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1392: SCX_REG+=x, SCY_REG+=y;
      000988 F0r00            [12] 2564 	ldh	a, (_SCX_REG + 0)
      00098A 3C               [ 4] 2565 	inc	a
      00098B E0r00            [12] 2566 	ldh	(_SCX_REG + 0), a
                           00098D  2567 	C$main.c$211$2_1$230	= .
                                   2568 	.globl	C$main.c$211$2_1$230
                                   2569 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:211: ScrollBlock();
      00098D CDrBFr07         [24] 2570 	call	_ScrollBlock
                           000990  2571 	C$main.c$213$1_1$226	= .
                                   2572 	.globl	C$main.c$213$1_1$226
                                   2573 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:213: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000990 0E 00            [ 8] 2574 	ld	c, #0x00
      000992                       2575 00114$:
      000992 79               [ 4] 2576 	ld	a, c
      000993 EE 80            [ 8] 2577 	xor	a, #0x80
      000995 D6 86            [ 8] 2578 	sub	a, #0x86
      000997 30 38            [12] 2579 	jr	NC, 00104$
                           000999  2580 	C$main.c$215$4_1$232	= .
                                   2581 	.globl	C$main.c$215$4_1$232
                                   2582 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:215: if(Hit(player.x, player.y, block[i].x, block[i].y))
      000999 79               [ 4] 2583 	ld	a, c
      00099A 6F               [ 4] 2584 	ld	l, a
                                   2585 ;	spillPairReg hl
                                   2586 ;	spillPairReg hl
      00099B 07               [ 4] 2587 	rlca
      00099C 9F               [ 4] 2588 	sbc	a, a
      00099D 67               [ 4] 2589 	ld	h, a
      00099E 29               [ 8] 2590 	add	hl, hl
      00099F 29               [ 8] 2591 	add	hl, hl
      0009A0 11r13r00         [12] 2592 	ld	de, #_block
      0009A3 19               [ 8] 2593 	add	hl, de
      0009A4 5D               [ 4] 2594 	ld	e, l
      0009A5 54               [ 4] 2595 	ld	d, h
      0009A6 13               [ 8] 2596 	inc	de
      0009A7 1A               [ 8] 2597 	ld	a, (de)
      0009A8 46               [ 8] 2598 	ld	b, (hl)
      0009A9 21r07r00         [12] 2599 	ld	hl, #(_player + 7)
      0009AC F5               [16] 2600 	push	af
      0009AD 7E               [ 8] 2601 	ld	a, (hl)
      0009AE F8 05            [12] 2602 	ldhl	sp,	#5
      0009B0 77               [ 8] 2603 	ld	(hl), a
      0009B1 F1               [12] 2604 	pop	af
      0009B2 21r06r00         [12] 2605 	ld	hl, #(_player + 6)
      0009B5 6E               [ 8] 2606 	ld	l, (hl)
                                   2607 ;	spillPairReg hl
      0009B6 C5               [16] 2608 	push	bc
      0009B7 F5               [16] 2609 	push	af
      0009B8 33               [ 8] 2610 	inc	sp
      0009B9 C5               [16] 2611 	push	bc
      0009BA 33               [ 8] 2612 	inc	sp
      0009BB E5               [16] 2613 	push	hl
      0009BC F8 09            [12] 2614 	ldhl	sp,	#9
      0009BE 5E               [ 8] 2615 	ld	e, (hl)
      0009BF E1               [12] 2616 	pop	hl
      0009C0 7D               [ 4] 2617 	ld	a, l
      0009C1 CDr31r05         [24] 2618 	call	_Hit
      0009C4 C1               [12] 2619 	pop	bc
      0009C5 B7               [ 4] 2620 	or	a, a
      0009C6 28 06            [12] 2621 	jr	Z, 00115$
                           0009C8  2622 	C$main.c$217$5_1$233	= .
                                   2623 	.globl	C$main.c$217$5_1$233
                                   2624 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:217: gameLoop= 0;
      0009C8 F8 02            [12] 2625 	ldhl	sp,	#2
      0009CA 36 00            [12] 2626 	ld	(hl), #0x00
                           0009CC  2627 	C$main.c$218$5_1$233	= .
                                   2628 	.globl	C$main.c$218$5_1$233
                                   2629 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:218: break;
      0009CC 18 03            [12] 2630 	jr	00104$
      0009CE                       2631 00115$:
                           0009CE  2632 	C$main.c$213$3_1$231	= .
                                   2633 	.globl	C$main.c$213$3_1$231
                                   2634 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:213: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0009CE 0C               [ 4] 2635 	inc	c
      0009CF 18 C1            [12] 2636 	jr	00114$
      0009D1                       2637 00104$:
                           0009D1  2638 	C$main.c$221$2_1$230	= .
                                   2639 	.globl	C$main.c$221$2_1$230
                                   2640 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:221: wait_vbl_done();
      0009D1 CDr00r00         [24] 2641 	call	_wait_vbl_done
      0009D4 C3r50r09         [16] 2642 	jp	00105$
      0009D7                       2643 00107$:
                           0009D7  2644 	C$main.c$223$1_1$229	= .
                                   2645 	.globl	C$main.c$223$1_1$229
                                   2646 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:223: HIDE_SPRITES;
      0009D7 F0r00            [12] 2647 	ldh	a, (_LCDC_REG + 0)
      0009D9 E6 FD            [ 8] 2648 	and	a, #0xfd
      0009DB E0r00            [12] 2649 	ldh	(_LCDC_REG + 0), a
                                   2650 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1378: SCX_REG=x, SCY_REG=y;
      0009DD AF               [ 4] 2651 	xor	a, a
      0009DE E0r00            [12] 2652 	ldh	(_SCX_REG + 0), a
      0009E0 AF               [ 4] 2653 	xor	a, a
      0009E1 E0r00            [12] 2654 	ldh	(_SCY_REG + 0), a
                           0009E3  2655 	C$main.c$225$1_1$229	= .
                                   2656 	.globl	C$main.c$225$1_1$229
                                   2657 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:225: printf("GameOver");
      0009E3 11rEEr09         [12] 2658 	ld	de, #___str_0
      0009E6 D5               [16] 2659 	push	de
      0009E7 CDr00r00         [24] 2660 	call	_printf
      0009EA E1               [12] 2661 	pop	hl
                           0009EB  2662 	C$main.c$226$1_1$226	= .
                                   2663 	.globl	C$main.c$226$1_1$226
                                   2664 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:226: }
      0009EB E8 04            [16] 2665 	add	sp, #4
                           0009ED  2666 	C$main.c$226$1_1$226	= .
                                   2667 	.globl	C$main.c$226$1_1$226
                           0009ED  2668 	XG$main$0$0	= .
                                   2669 	.globl	XG$main$0$0
      0009ED C9               [16] 2670 	ret
                           0009EE  2671 Fmain$__str_0$0_0$0 == .
      0009EE                       2672 ___str_0:
      0009EE 47 61 6D 65 4F 76 65  2673 	.ascii "GameOver"
             72
      0009F6 00                    2674 	.db 0x00
                                   2675 	.area _CODE
                                   2676 	.area _INITIALIZER
                           000000  2677 Fmain$__xinit_movementFrameCount$0_0$0 == .
      000000                       2678 __xinit__movementFrameCount:
      000000 00                    2679 	.db #0x00	; 0
                           000001  2680 Fmain$__xinit_animationFrameCount$0_0$0 == .
      000001                       2681 __xinit__animationFrameCount:
      000001 00                    2682 	.db #0x00	; 0
                           000002  2683 Fmain$__xinit_jumpFrameCount$0_0$0 == .
      000002                       2684 __xinit__jumpFrameCount:
      000002 00                    2685 	.db #0x00	; 0
                           000003  2686 Fmain$__xinit_lastMovementX$0_0$0 == .
      000003                       2687 __xinit__lastMovementX:
      000003 00                    2688 	.db #0x00	;  0
                           000004  2689 Fmain$__xinit_lastMovementY$0_0$0 == .
      000004                       2690 __xinit__lastMovementY:
      000004 00                    2691 	.db #0x00	;  0
                           000005  2692 Fmain$__xinit_slowingX$0_0$0 == .
      000005                       2693 __xinit__slowingX:
      000005 00                    2694 	.db #0x00	;  0
                                   2695 	.area _CABS (ABS)
