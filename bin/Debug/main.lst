                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _Hit
                                     13 	.globl _MovementPhysics
                                     14 	.globl _DetectCollisions
                                     15 	.globl _SetupCharacter
                                     16 	.globl _MoveCharacterWithJoypad
                                     17 	.globl _ScrollCharacter
                                     18 	.globl _MoveCharacter
                                     19 	.globl _SetSpriteFlip
                                     20 	.globl _LoadNextSpriteFrame
                                     21 	.globl _RefreshSprite
                                     22 	.globl _LoadSpriteFrame
                                     23 	.globl _printf
                                     24 	.globl _set_sprite_data
                                     25 	.globl _set_bkg_tiles
                                     26 	.globl _set_bkg_data
                                     27 	.globl _wait_vbl_done
                                     28 	.globl _joypad
                                     29 	.globl _slowingX
                                     30 	.globl _lastMovementY
                                     31 	.globl _lastMovementX
                                     32 	.globl _jumpFrameCount
                                     33 	.globl _animationFrameCount
                                     34 	.globl _movementFrameCount
                                     35 	.globl _player
                                     36 	.globl _ShowTitle
                                     37 	.globl _SetupBackGround
                                     38 	.globl _SetupBlock
                                     39 ;--------------------------------------------------------
                                     40 ; special function registers
                                     41 ;--------------------------------------------------------
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area _DATA
                           000000    46 G$player$0_0$0==.
      000000                         47 _player::
      000000                         48 	.ds 19
                                     49 ;--------------------------------------------------------
                                     50 ; ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _INITIALIZED
                           000000    53 G$movementFrameCount$0_0$0==.
      000000                         54 _movementFrameCount::
      000000                         55 	.ds 1
                           000001    56 G$animationFrameCount$0_0$0==.
      000001                         57 _animationFrameCount::
      000001                         58 	.ds 1
                           000002    59 G$jumpFrameCount$0_0$0==.
      000002                         60 _jumpFrameCount::
      000002                         61 	.ds 1
                           000003    62 G$lastMovementX$0_0$0==.
      000003                         63 _lastMovementX::
      000003                         64 	.ds 1
                           000004    65 G$lastMovementY$0_0$0==.
      000004                         66 _lastMovementY::
      000004                         67 	.ds 1
                           000005    68 G$slowingX$0_0$0==.
      000005                         69 _slowingX::
      000005                         70 	.ds 1
                                     71 ;--------------------------------------------------------
                                     72 ; absolute external ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area _DABS (ABS)
                                     75 ;--------------------------------------------------------
                                     76 ; global & static initialisations
                                     77 ;--------------------------------------------------------
                                     78 	.area _HOME
                                     79 	.area _GSINIT
                                     80 	.area _GSFINAL
                                     81 	.area _GSINIT
                                     82 ;--------------------------------------------------------
                                     83 ; Home
                                     84 ;--------------------------------------------------------
                                     85 	.area _HOME
                                     86 	.area _HOME
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area _CODE
                           000000    91 	G$LoadSpriteFrame$0$0	= .
                                     92 	.globl	G$LoadSpriteFrame$0$0
                           000000    93 	C$Character.h$67$0_0$130	= .
                                     94 	.globl	C$Character.h$67$0_0$130
                                     95 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:67: void LoadSpriteFrame(Character* character, uint8_t frame)
                                     96 ;	---------------------------------
                                     97 ; Function LoadSpriteFrame
                                     98 ; ---------------------------------
      000000                         99 _LoadSpriteFrame::
      000000 E8 E9            [16]  100 	add	sp, #-23
      000002 F8 13            [12]  101 	ldhl	sp,	#19
      000004 73               [ 8]  102 	ld	(hl), e
      000005 23               [ 8]  103 	inc	hl
      000006 72               [ 8]  104 	ld	(hl), d
                           000007   105 	C$Character.h$69$1_0$130	= .
                                    106 	.globl	C$Character.h$69$1_0$130
                                    107 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:69: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]  108 	dec	hl
      000008 47               [ 4]  109 	ld	b, a
      000009 2A               [ 8]  110 	ld	a, (hl+)
      00000A 5F               [ 4]  111 	ld	e, a
      00000B 56               [ 8]  112 	ld	d, (hl)
      00000C 21 04 00         [12]  113 	ld	hl, #0x0004
      00000F 19               [ 8]  114 	add	hl, de
      000010 5D               [ 4]  115 	ld	e, l
      000011 54               [ 4]  116 	ld	d, h
      000012 78               [ 4]  117 	ld	a, b
      000013 12               [ 8]  118 	ld	(de), a
                           000014   119 	C$Character.h$71$1_1$131	= .
                                    120 	.globl	C$Character.h$71$1_1$131
                                    121 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  122 	ldhl	sp,#19
      000016 2A               [ 8]  123 	ld	a, (hl+)
      000017 5F               [ 4]  124 	ld	e, a
      000018 56               [ 8]  125 	ld	d, (hl)
      000019 6B               [ 4]  126 	ld	l, e
      00001A 62               [ 4]  127 	ld	h, d
      00001B 23               [ 8]  128 	inc	hl
      00001C 33               [ 8]  129 	inc	sp
      00001D 33               [ 8]  130 	inc	sp
      00001E 5D               [ 4]  131 	ld	e, l
      00001F 54               [ 4]  132 	ld	d, h
      000020 D5               [16]  133 	push	de
      000021 1A               [ 8]  134 	ld	a, (de)
      000022 4F               [ 4]  135 	ld	c, a
      000023 F8 13            [12]  136 	ldhl	sp,#19
      000025 2A               [ 8]  137 	ld	a, (hl+)
      000026 5F               [ 4]  138 	ld	e, a
      000027 56               [ 8]  139 	ld	d, (hl)
      000028 21 02 00         [12]  140 	ld	hl, #0x0002
      00002B 19               [ 8]  141 	add	hl, de
      00002C E5               [16]  142 	push	hl
      00002D 7D               [ 4]  143 	ld	a, l
      00002E F8 04            [12]  144 	ldhl	sp,	#4
      000030 77               [ 8]  145 	ld	(hl), a
      000031 E1               [12]  146 	pop	hl
      000032 7C               [ 4]  147 	ld	a, h
      000033 F8 03            [12]  148 	ldhl	sp,	#3
      000035 32               [ 8]  149 	ld	(hl-), a
      000036 2A               [ 8]  150 	ld	a, (hl+)
      000037 5F               [ 4]  151 	ld	e, a
      000038 56               [ 8]  152 	ld	d, (hl)
      000039 1A               [ 8]  153 	ld	a, (de)
      00003A 6F               [ 4]  154 	ld	l, a
                                    155 ;	spillPairReg hl
                                    156 ;	spillPairReg hl
      00003B C5               [16]  157 	push	bc
      00003C 5D               [ 4]  158 	ld	e, l
      00003D 79               [ 4]  159 	ld	a, c
                           00003E   160 	C$Character.h$74$2_1$130	= .
                                    161 	.globl	C$Character.h$74$2_1$130
                                    162 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  163 	call	__muluchar
      000041 F1               [12]  164 	pop	af
      000042 47               [ 4]  165 	ld	b, a
      000043 F8 13            [12]  166 	ldhl	sp,#19
      000045 2A               [ 8]  167 	ld	a, (hl+)
      000046 5F               [ 4]  168 	ld	e, a
      000047 56               [ 8]  169 	ld	d, (hl)
      000048 21 0A 00         [12]  170 	ld	hl, #0x000a
      00004B 19               [ 8]  171 	add	hl, de
      00004C E5               [16]  172 	push	hl
      00004D 7D               [ 4]  173 	ld	a, l
      00004E F8 06            [12]  174 	ldhl	sp,	#6
      000050 77               [ 8]  175 	ld	(hl), a
      000051 E1               [12]  176 	pop	hl
      000052 7C               [ 4]  177 	ld	a, h
      000053 F8 05            [12]  178 	ldhl	sp,	#5
      000055 77               [ 8]  179 	ld	(hl), a
      000056 F8 13            [12]  180 	ldhl	sp,#19
      000058 2A               [ 8]  181 	ld	a, (hl+)
      000059 5F               [ 4]  182 	ld	e, a
      00005A 56               [ 8]  183 	ld	d, (hl)
      00005B 21 0B 00         [12]  184 	ld	hl, #0x000b
      00005E 19               [ 8]  185 	add	hl, de
      00005F E5               [16]  186 	push	hl
      000060 7D               [ 4]  187 	ld	a, l
      000061 F8 08            [12]  188 	ldhl	sp,	#8
      000063 77               [ 8]  189 	ld	(hl), a
      000064 E1               [12]  190 	pop	hl
      000065 7C               [ 4]  191 	ld	a, h
      000066 F8 07            [12]  192 	ldhl	sp,	#7
      000068 77               [ 8]  193 	ld	(hl), a
      000069 F8 13            [12]  194 	ldhl	sp,#19
      00006B 2A               [ 8]  195 	ld	a, (hl+)
      00006C 5F               [ 4]  196 	ld	e, a
      00006D 56               [ 8]  197 	ld	d, (hl)
      00006E 21 11 00         [12]  198 	ld	hl, #0x0011
      000071 19               [ 8]  199 	add	hl, de
      000072 E5               [16]  200 	push	hl
      000073 7D               [ 4]  201 	ld	a, l
      000074 F8 0A            [12]  202 	ldhl	sp,	#10
      000076 77               [ 8]  203 	ld	(hl), a
      000077 E1               [12]  204 	pop	hl
      000078 7C               [ 4]  205 	ld	a, h
      000079 F8 09            [12]  206 	ldhl	sp,	#9
      00007B 77               [ 8]  207 	ld	(hl), a
      00007C 59               [ 4]  208 	ld	e, c
      00007D 78               [ 4]  209 	ld	a, b
      00007E CDr00r00         [24]  210 	call	__muluchar
      000081 F8 0A            [12]  211 	ldhl	sp,	#10
      000083 79               [ 4]  212 	ld	a, c
      000084 22               [ 8]  213 	ld	(hl+), a
      000085 70               [ 8]  214 	ld	(hl), b
      000086 F8 13            [12]  215 	ldhl	sp,#19
      000088 2A               [ 8]  216 	ld	a, (hl+)
      000089 5F               [ 4]  217 	ld	e, a
      00008A 56               [ 8]  218 	ld	d, (hl)
      00008B 21 05 00         [12]  219 	ld	hl, #0x0005
      00008E 19               [ 8]  220 	add	hl, de
      00008F E5               [16]  221 	push	hl
      000090 7D               [ 4]  222 	ld	a, l
      000091 F8 0E            [12]  223 	ldhl	sp,	#14
      000093 77               [ 8]  224 	ld	(hl), a
      000094 E1               [12]  225 	pop	hl
      000095 7C               [ 4]  226 	ld	a, h
      000096 F8 0D            [12]  227 	ldhl	sp,	#13
      000098 77               [ 8]  228 	ld	(hl), a
      000099 F8 15            [12]  229 	ldhl	sp,	#21
      00009B 36 00            [12]  230 	ld	(hl), #0x00
      00009D                        231 00109$:
      00009D F8 02            [12]  232 	ldhl	sp,#2
      00009F 2A               [ 8]  233 	ld	a, (hl+)
      0000A0 5F               [ 4]  234 	ld	e, a
      0000A1 56               [ 8]  235 	ld	d, (hl)
      0000A2 1A               [ 8]  236 	ld	a, (de)
      0000A3 47               [ 4]  237 	ld	b, a
      0000A4 F8 15            [12]  238 	ldhl	sp,	#21
      0000A6 7E               [ 8]  239 	ld	a, (hl)
      0000A7 90               [ 4]  240 	sub	a, b
      0000A8 CArA7r01         [16]  241 	jp	Z,00111$
                           0000AB   242 	C$Character.h$76$2_1$130	= .
                                    243 	.globl	C$Character.h$76$2_1$130
                                    244 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  245 	ldhl	sp,	#22
      0000AD 36 00            [12]  246 	ld	(hl), #0x00
      0000AF                        247 00106$:
                           0000AF   248 	C$Character.h$71$2_1$130	= .
                                    249 	.globl	C$Character.h$71$2_1$130
                                    250 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  251 	pop	de
      0000B0 D5               [16]  252 	push	de
      0000B1 1A               [ 8]  253 	ld	a, (de)
      0000B2 F8 10            [12]  254 	ldhl	sp,	#16
      0000B4 77               [ 8]  255 	ld	(hl), a
                           0000B5   256 	C$Character.h$76$4_1$134	= .
                                    257 	.globl	C$Character.h$76$4_1$134
                                    258 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  259 	ldhl	sp,	#22
      0000B7 7E               [ 8]  260 	ld	a, (hl)
      0000B8 F8 10            [12]  261 	ldhl	sp,	#16
      0000BA 96               [ 8]  262 	sub	a, (hl)
      0000BB CArA1r01         [16]  263 	jp	Z,00110$
                           0000BE   264 	C$Character.h$79$2_1$130	= .
                                    265 	.globl	C$Character.h$79$2_1$130
                                    266 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  267 	ldhl	sp,#4
      0000C0 2A               [ 8]  268 	ld	a, (hl+)
      0000C1 5F               [ 4]  269 	ld	e, a
      0000C2 56               [ 8]  270 	ld	d, (hl)
      0000C3 1A               [ 8]  271 	ld	a, (de)
      0000C4 F8 11            [12]  272 	ldhl	sp,	#17
      0000C6 77               [ 8]  273 	ld	(hl), a
      0000C7 7E               [ 8]  274 	ld	a, (hl)
      0000C8 B7               [ 4]  275 	or	a, a
      0000C9 28 09            [12]  276 	jr	Z, 00113$
      0000CB 2B               [ 8]  277 	dec	hl
      0000CC 7E               [ 8]  278 	ld	a, (hl)
      0000CD 3D               [ 4]  279 	dec	a
      0000CE F8 16            [12]  280 	ldhl	sp,	#22
      0000D0 4E               [ 8]  281 	ld	c, (hl)
      0000D1 91               [ 4]  282 	sub	a, c
      0000D2 18 03            [12]  283 	jr	00114$
      0000D4                        284 00113$:
      0000D4 F8 16            [12]  285 	ldhl	sp,	#22
      0000D6 7E               [ 8]  286 	ld	a, (hl)
      0000D7                        287 00114$:
      0000D7 4F               [ 4]  288 	ld	c, a
                           0000D8   289 	C$Character.h$80$2_1$130	= .
                                    290 	.globl	C$Character.h$80$2_1$130
                                    291 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:80: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  292 	ldhl	sp,#6
      0000DA 2A               [ 8]  293 	ld	a, (hl+)
      0000DB 5F               [ 4]  294 	ld	e, a
      0000DC 56               [ 8]  295 	ld	d, (hl)
      0000DD 1A               [ 8]  296 	ld	a, (de)
      0000DE F8 12            [12]  297 	ldhl	sp,	#18
      0000E0 77               [ 8]  298 	ld	(hl), a
      0000E1 7E               [ 8]  299 	ld	a, (hl)
      0000E2 B7               [ 4]  300 	or	a, a
      0000E3 28 0D            [12]  301 	jr	Z, 00115$
      0000E5 F8 02            [12]  302 	ldhl	sp,#2
      0000E7 2A               [ 8]  303 	ld	a, (hl+)
      0000E8 5F               [ 4]  304 	ld	e, a
      0000E9 56               [ 8]  305 	ld	d, (hl)
      0000EA 1A               [ 8]  306 	ld	a, (de)
      0000EB 3D               [ 4]  307 	dec	a
      0000EC F8 15            [12]  308 	ldhl	sp,	#21
      0000EE 46               [ 8]  309 	ld	b, (hl)
      0000EF 90               [ 4]  310 	sub	a, b
      0000F0 18 03            [12]  311 	jr	00116$
      0000F2                        312 00115$:
      0000F2 F8 15            [12]  313 	ldhl	sp,	#21
      0000F4 7E               [ 8]  314 	ld	a, (hl)
      0000F5                        315 00116$:
      0000F5 47               [ 4]  316 	ld	b, a
                           0000F6   317 	C$Character.h$83$5_1$135	= .
                                    318 	.globl	C$Character.h$83$5_1$135
                                    319 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:83: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  320 	ldhl	sp,#19
      0000F8 2A               [ 8]  321 	ld	a, (hl+)
      0000F9 5F               [ 4]  322 	ld	e, a
      0000FA 56               [ 8]  323 	ld	d, (hl)
      0000FB 1A               [ 8]  324 	ld	a, (de)
      0000FC 81               [ 4]  325 	add	a, c
      0000FD 4F               [ 4]  326 	ld	c, a
      0000FE C5               [16]  327 	push	bc
      0000FF F8 12            [12]  328 	ldhl	sp,	#18
      000101 5E               [ 8]  329 	ld	e, (hl)
      000102 78               [ 4]  330 	ld	a, b
      000103 CDr00r00         [24]  331 	call	__muluchar
      000106 79               [ 4]  332 	ld	a, c
      000107 C1               [12]  333 	pop	bc
      000108 81               [ 4]  334 	add	a, c
      000109 F8 0E            [12]  335 	ldhl	sp,	#14
      00010B 77               [ 8]  336 	ld	(hl), a
                                    337 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:86: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  338 	ldhl	sp,	#17
      00010E 7E               [ 8]  339 	ld	a, (hl)
      00010F B7               [ 4]  340 	or	a, a
      000110 28 09            [12]  341 	jr	Z, 00117$
      000112 2B               [ 8]  342 	dec	hl
      000113 2B               [ 8]  343 	dec	hl
      000114 3E 20            [ 8]  344 	ld	a, #0x20
      000116 22               [ 8]  345 	ld	(hl+), a
      000117 AF               [ 4]  346 	xor	a, a
      000118 77               [ 8]  347 	ld	(hl), a
      000119 18 05            [12]  348 	jr	00118$
      00011B                        349 00117$:
      00011B AF               [ 4]  350 	xor	a, a
      00011C F8 0F            [12]  351 	ldhl	sp,	#15
      00011E 22               [ 8]  352 	ld	(hl+), a
      00011F 77               [ 8]  353 	ld	(hl), a
      000120                        354 00118$:
      000120 F8 12            [12]  355 	ldhl	sp,	#18
      000122 7E               [ 8]  356 	ld	a, (hl)
      000123 B7               [ 4]  357 	or	a, a
      000124 28 08            [12]  358 	jr	Z, 00119$
      000126 2B               [ 8]  359 	dec	hl
      000127 3E 40            [ 8]  360 	ld	a, #0x40
      000129 22               [ 8]  361 	ld	(hl+), a
      00012A AF               [ 4]  362 	xor	a, a
      00012B 77               [ 8]  363 	ld	(hl), a
      00012C 18 05            [12]  364 	jr	00120$
      00012E                        365 00119$:
      00012E AF               [ 4]  366 	xor	a, a
      00012F F8 11            [12]  367 	ldhl	sp,	#17
      000131 22               [ 8]  368 	ld	(hl+), a
      000132 77               [ 8]  369 	ld	(hl), a
      000133                        370 00120$:
      000133 F8 0F            [12]  371 	ldhl	sp,	#15
      000135 2A               [ 8]  372 	ld	a, (hl+)
      000136 23               [ 8]  373 	inc	hl
      000137 4E               [ 8]  374 	ld	c, (hl)
      000138 B1               [ 4]  375 	or	a, c
      000139 5F               [ 4]  376 	ld	e, a
                                    377 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  378 	ldhl	sp,	#14
      00013C 4E               [ 8]  379 	ld	c, (hl)
      00013D 06 00            [ 8]  380 	ld	b, #0x00
      00013F CB 21            [ 8]  381 	sla	c
      000141 CB 10            [ 8]  382 	rl	b
      000143 CB 21            [ 8]  383 	sla	c
      000145 CB 10            [ 8]  384 	rl	b
      000147 21r01r00         [12]  385 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  386 	add	hl,bc
      00014B 23               [ 8]  387 	inc	hl
      00014C 23               [ 8]  388 	inc	hl
      00014D 73               [ 8]  389 	ld	(hl), e
                                    390 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  391 	ldhl	sp,#8
      000150 2A               [ 8]  392 	ld	a, (hl+)
      000151 5F               [ 4]  393 	ld	e, a
      000152 56               [ 8]  394 	ld	d, (hl)
      000153 1A               [ 8]  395 	ld	a, (de)
      000154 F8 0F            [12]  396 	ldhl	sp,	#15
      000156 22               [ 8]  397 	ld	(hl+), a
      000157 13               [ 8]  398 	inc	de
      000158 1A               [ 8]  399 	ld	a, (de)
      000159 77               [ 8]  400 	ld	(hl), a
      00015A F8 16            [12]  401 	ldhl	sp,	#22
      00015C 7E               [ 8]  402 	ld	a, (hl)
      00015D F8 11            [12]  403 	ldhl	sp,	#17
      00015F 22               [ 8]  404 	ld	(hl+), a
      000160 36 00            [12]  405 	ld	(hl), #0x00
      000162 D1               [12]  406 	pop	de
      000163 D5               [16]  407 	push	de
      000164 1A               [ 8]  408 	ld	a, (de)
      000165 6F               [ 4]  409 	ld	l, a
                                    410 ;	spillPairReg hl
                                    411 ;	spillPairReg hl
      000166 C5               [16]  412 	push	bc
      000167 5D               [ 4]  413 	ld	e, l
      000168 F8 17            [12]  414 	ldhl	sp,	#23
      00016A 7E               [ 8]  415 	ld	a, (hl)
      00016B CDr00r00         [24]  416 	call	__muluchar
      00016E 59               [ 4]  417 	ld	e, c
      00016F 50               [ 4]  418 	ld	d, b
      000170 C1               [12]  419 	pop	bc
      000171 F8 11            [12]  420 	ldhl	sp,	#17
      000173 2A               [ 8]  421 	ld	a,	(hl+)
      000174 66               [ 8]  422 	ld	h, (hl)
      000175 6F               [ 4]  423 	ld	l, a
      000176 19               [ 8]  424 	add	hl, de
      000177 5D               [ 4]  425 	ld	e, l
      000178 54               [ 4]  426 	ld	d, h
      000179 F8 0A            [12]  427 	ldhl	sp,	#10
      00017B 2A               [ 8]  428 	ld	a,	(hl+)
      00017C 66               [ 8]  429 	ld	h, (hl)
      00017D 6F               [ 4]  430 	ld	l, a
      00017E 19               [ 8]  431 	add	hl, de
      00017F 5D               [ 4]  432 	ld	e, l
      000180 54               [ 4]  433 	ld	d, h
      000181 F8 0F            [12]  434 	ldhl	sp,	#15
      000183 2A               [ 8]  435 	ld	a,	(hl+)
      000184 66               [ 8]  436 	ld	h, (hl)
      000185 6F               [ 4]  437 	ld	l, a
      000186 19               [ 8]  438 	add	hl, de
      000187 5D               [ 4]  439 	ld	e, l
      000188 54               [ 4]  440 	ld	d, h
      000189 1A               [ 8]  441 	ld	a, (de)
      00018A F8 0C            [12]  442 	ldhl	sp,#12
      00018C 5E               [ 8]  443 	ld	e, (hl)
      00018D 23               [ 8]  444 	inc	hl
      00018E 56               [ 8]  445 	ld	d, (hl)
      00018F F5               [16]  446 	push	af
      000190 1A               [ 8]  447 	ld	a, (de)
      000191 6F               [ 4]  448 	ld	l, a
                                    449 ;	spillPairReg hl
                                    450 ;	spillPairReg hl
      000192 F1               [12]  451 	pop	af
      000193 85               [ 4]  452 	add	a, l
      000194 5F               [ 4]  453 	ld	e, a
                                    454 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  455 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  456 	add	hl,bc
      000199 23               [ 8]  457 	inc	hl
      00019A 73               [ 8]  458 	ld	(hl), e
                           00019B   459 	C$Character.h$76$4_1$134	= .
                                    460 	.globl	C$Character.h$76$4_1$134
                                    461 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  462 	ldhl	sp,	#22
      00019D 34               [12]  463 	inc	(hl)
      00019E C3rAFr00         [16]  464 	jp	00106$
      0001A1                        465 00110$:
                           0001A1   466 	C$Character.h$74$2_1$132	= .
                                    467 	.globl	C$Character.h$74$2_1$132
                                    468 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  469 	ldhl	sp,	#21
      0001A3 34               [12]  470 	inc	(hl)
      0001A4 C3r9Dr00         [16]  471 	jp	00109$
      0001A7                        472 00111$:
                           0001A7   473 	C$Character.h$93$2_1$130	= .
                                    474 	.globl	C$Character.h$93$2_1$130
                                    475 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: }
      0001A7 E8 17            [16]  476 	add	sp, #23
                           0001A9   477 	C$Character.h$93$2_1$130	= .
                                    478 	.globl	C$Character.h$93$2_1$130
                           0001A9   479 	XG$LoadSpriteFrame$0$0	= .
                                    480 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  481 	ret
                           0001AA   482 	G$RefreshSprite$0$0	= .
                                    483 	.globl	G$RefreshSprite$0$0
                           0001AA   484 	C$Character.h$95$2_1$143	= .
                                    485 	.globl	C$Character.h$95$2_1$143
                                    486 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: void RefreshSprite(Character *character)
                                    487 ;	---------------------------------
                                    488 ; Function RefreshSprite
                                    489 ; ---------------------------------
      0001AA                        490 _RefreshSprite::
                           0001AA   491 	C$Character.h$97$1_0$143	= .
                                    492 	.globl	C$Character.h$97$1_0$143
                                    493 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:97: LoadSpriteFrame(character, character->spriteCurrentFrame);
      0001AA 21 04 00         [12]  494 	ld	hl, #0x0004
      0001AD 19               [ 8]  495 	add	hl, de
      0001AE 4E               [ 8]  496 	ld	c, (hl)
      0001AF 79               [ 4]  497 	ld	a, c
                           0001B0   498 	C$Character.h$98$1_0$143	= .
                                    499 	.globl	C$Character.h$98$1_0$143
                                    500 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:98: }
                           0001B0   501 	C$Character.h$98$1_0$143	= .
                                    502 	.globl	C$Character.h$98$1_0$143
                           0001B0   503 	XG$RefreshSprite$0$0	= .
                                    504 	.globl	XG$RefreshSprite$0$0
      0001B0 C3r00r00         [16]  505 	jp	_LoadSpriteFrame
                           0001B3   506 	G$LoadNextSpriteFrame$0$0	= .
                                    507 	.globl	G$LoadNextSpriteFrame$0$0
                           0001B3   508 	C$Character.h$100$1_0$145	= .
                                    509 	.globl	C$Character.h$100$1_0$145
                                    510 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:100: void LoadNextSpriteFrame(Character *character)
                                    511 ;	---------------------------------
                                    512 ; Function LoadNextSpriteFrame
                                    513 ; ---------------------------------
      0001B3                        514 _LoadNextSpriteFrame::
      0001B3 E8 FC            [16]  515 	add	sp, #-4
      0001B5 F8 02            [12]  516 	ldhl	sp,	#2
      0001B7 7B               [ 4]  517 	ld	a, e
      0001B8 22               [ 8]  518 	ld	(hl+), a
                           0001B9   519 	C$Character.h$103$1_0$145	= .
                                    520 	.globl	C$Character.h$103$1_0$145
                                    521 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: character->spriteCurrentFrame = (character->spriteCurrentFrame + 1) % character->spriteFrames;
      0001B9 7A               [ 4]  522 	ld	a, d
      0001BA 32               [ 8]  523 	ld	(hl-), a
      0001BB 2A               [ 8]  524 	ld	a, (hl+)
      0001BC 5F               [ 4]  525 	ld	e, a
      0001BD 56               [ 8]  526 	ld	d, (hl)
      0001BE 21 04 00         [12]  527 	ld	hl, #0x0004
      0001C1 19               [ 8]  528 	add	hl, de
      0001C2 5D               [ 4]  529 	ld	e, l
      0001C3 54               [ 4]  530 	ld	d, h
      0001C4 1A               [ 8]  531 	ld	a, (de)
      0001C5 4F               [ 4]  532 	ld	c, a
      0001C6 06 00            [ 8]  533 	ld	b, #0x00
      0001C8 03               [ 8]  534 	inc	bc
      0001C9 33               [ 8]  535 	inc	sp
      0001CA 33               [ 8]  536 	inc	sp
      0001CB C5               [16]  537 	push	bc
      0001CC F8 02            [12]  538 	ldhl	sp,	#2
      0001CE 2A               [ 8]  539 	ld	a, (hl+)
      0001CF 4F               [ 4]  540 	ld	c, a
      0001D0 46               [ 8]  541 	ld	b, (hl)
      0001D1 03               [ 8]  542 	inc	bc
      0001D2 03               [ 8]  543 	inc	bc
      0001D3 03               [ 8]  544 	inc	bc
      0001D4 0A               [ 8]  545 	ld	a, (bc)
      0001D5 4F               [ 4]  546 	ld	c, a
      0001D6 06 00            [ 8]  547 	ld	b, #0x00
      0001D8 D5               [16]  548 	push	de
      0001D9 F8 02            [12]  549 	ldhl	sp,	#2
      0001DB 2A               [ 8]  550 	ld	a, (hl+)
      0001DC 5F               [ 4]  551 	ld	e, a
      0001DD 56               [ 8]  552 	ld	d, (hl)
      0001DE CDr00r00         [24]  553 	call	__modsint
      0001E1 D1               [12]  554 	pop	de
      0001E2 79               [ 4]  555 	ld	a, c
      0001E3 12               [ 8]  556 	ld	(de), a
                           0001E4   557 	C$Character.h$105$1_0$145	= .
                                    558 	.globl	C$Character.h$105$1_0$145
                                    559 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:105: RefreshSprite(character);
      0001E4 F8 02            [12]  560 	ldhl	sp,	#2
      0001E6 2A               [ 8]  561 	ld	a, (hl+)
      0001E7 5F               [ 4]  562 	ld	e, a
      0001E8 56               [ 8]  563 	ld	d, (hl)
      0001E9 CDrAAr01         [24]  564 	call	_RefreshSprite
                           0001EC   565 	C$Character.h$106$1_0$145	= .
                                    566 	.globl	C$Character.h$106$1_0$145
                                    567 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: }
      0001EC E8 04            [16]  568 	add	sp, #4
                           0001EE   569 	C$Character.h$106$1_0$145	= .
                                    570 	.globl	C$Character.h$106$1_0$145
                           0001EE   571 	XG$LoadNextSpriteFrame$0$0	= .
                                    572 	.globl	XG$LoadNextSpriteFrame$0$0
      0001EE C9               [16]  573 	ret
                           0001EF   574 	G$SetSpriteFlip$0$0	= .
                                    575 	.globl	G$SetSpriteFlip$0$0
                           0001EF   576 	C$Character.h$108$1_0$147	= .
                                    577 	.globl	C$Character.h$108$1_0$147
                                    578 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: void SetSpriteFlip(Character *character, uint8_t flipX, uint8_t flipY)
                                    579 ;	---------------------------------
                                    580 ; Function SetSpriteFlip
                                    581 ; ---------------------------------
      0001EF                        582 _SetSpriteFlip::
      0001EF 4F               [ 4]  583 	ld	c, a
                           0001F0   584 	C$Character.h$110$1_0$147	= .
                                    585 	.globl	C$Character.h$110$1_0$147
                                    586 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:110: character->spriteFlippedX = flipX;
      0001F0 21 0A 00         [12]  587 	ld	hl, #0x000a
      0001F3 19               [ 8]  588 	add	hl, de
      0001F4 71               [ 8]  589 	ld	(hl), c
                           0001F5   590 	C$Character.h$111$1_0$147	= .
                                    591 	.globl	C$Character.h$111$1_0$147
                                    592 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: character->spriteFlippedY = flipY;
      0001F5 21 0B 00         [12]  593 	ld	hl, #0x000b
      0001F8 19               [ 8]  594 	add	hl, de
      0001F9 4D               [ 4]  595 	ld	c, l
      0001FA 44               [ 4]  596 	ld	b, h
      0001FB F8 02            [12]  597 	ldhl	sp,	#2
      0001FD 7E               [ 8]  598 	ld	a, (hl)
      0001FE 02               [ 8]  599 	ld	(bc), a
                           0001FF   600 	C$Character.h$113$1_0$147	= .
                                    601 	.globl	C$Character.h$113$1_0$147
                                    602 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:113: RefreshSprite(character);
      0001FF CDrAAr01         [24]  603 	call	_RefreshSprite
                           000202   604 	C$Character.h$114$1_0$147	= .
                                    605 	.globl	C$Character.h$114$1_0$147
                                    606 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: }
      000202 E1               [12]  607 	pop	hl
      000203 33               [ 8]  608 	inc	sp
      000204 E9               [ 4]  609 	jp	(hl)
                           000205   610 	G$MoveCharacter$0$0	= .
                                    611 	.globl	G$MoveCharacter$0$0
                           000205   612 	C$Character.h$116$1_0$149	= .
                                    613 	.globl	C$Character.h$116$1_0$149
                                    614 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:116: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    615 ;	---------------------------------
                                    616 ; Function MoveCharacter
                                    617 ; ---------------------------------
      000205                        618 _MoveCharacter::
      000205 E8 F8            [16]  619 	add	sp, #-8
      000207 4B               [ 4]  620 	ld	c, e
      000208 42               [ 4]  621 	ld	b, d
      000209 F8 05            [12]  622 	ldhl	sp,	#5
      00020B 77               [ 8]  623 	ld	(hl), a
                           00020C   624 	C$Character.h$119$1_0$149	= .
                                    625 	.globl	C$Character.h$119$1_0$149
                                    626 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:119: character->x = x;
      00020C 21 06 00         [12]  627 	ld	hl, #0x0006
      00020F 09               [ 8]  628 	add	hl, bc
      000210 5D               [ 4]  629 	ld	e, l
      000211 54               [ 4]  630 	ld	d, h
      000212 F8 05            [12]  631 	ldhl	sp,	#5
      000214 7E               [ 8]  632 	ld	a, (hl)
      000215 12               [ 8]  633 	ld	(de), a
                           000216   634 	C$Character.h$120$1_0$149	= .
                                    635 	.globl	C$Character.h$120$1_0$149
                                    636 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: character->y = y;
      000216 21 07 00         [12]  637 	ld	hl, #0x0007
      000219 09               [ 8]  638 	add	hl, bc
      00021A 5D               [ 4]  639 	ld	e, l
      00021B 54               [ 4]  640 	ld	d, h
      00021C F8 0A            [12]  641 	ldhl	sp,	#10
      00021E 7E               [ 8]  642 	ld	a, (hl)
      00021F 12               [ 8]  643 	ld	(de), a
                           000220   644 	C$Character.h$122$4_0$152	= .
                                    645 	.globl	C$Character.h$122$4_0$152
                                    646 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000220 69               [ 4]  647 	ld	l, c
      000221 60               [ 4]  648 	ld	h, b
      000222 23               [ 8]  649 	inc	hl
      000223 33               [ 8]  650 	inc	sp
      000224 33               [ 8]  651 	inc	sp
      000225 E5               [16]  652 	push	hl
      000226 21 02 00         [12]  653 	ld	hl, #0x0002
      000229 09               [ 8]  654 	add	hl, bc
      00022A E5               [16]  655 	push	hl
      00022B 7D               [ 4]  656 	ld	a, l
      00022C F8 04            [12]  657 	ldhl	sp,	#4
      00022E 77               [ 8]  658 	ld	(hl), a
      00022F E1               [12]  659 	pop	hl
      000230 7C               [ 4]  660 	ld	a, h
      000231 F8 03            [12]  661 	ldhl	sp,	#3
      000233 77               [ 8]  662 	ld	(hl), a
      000234 F8 06            [12]  663 	ldhl	sp,	#6
      000236 36 00            [12]  664 	ld	(hl), #0x00
      000238                        665 00108$:
      000238 F8 02            [12]  666 	ldhl	sp,#2
      00023A 2A               [ 8]  667 	ld	a, (hl+)
      00023B 5F               [ 4]  668 	ld	e, a
      00023C 56               [ 8]  669 	ld	d, (hl)
      00023D 1A               [ 8]  670 	ld	a, (de)
      00023E F8 07            [12]  671 	ldhl	sp,	#7
      000240 32               [ 8]  672 	ld	(hl-), a
      000241 2A               [ 8]  673 	ld	a, (hl+)
      000242 96               [ 8]  674 	sub	a, (hl)
      000243 28 5B            [12]  675 	jr	Z, 00110$
                           000245   676 	C$Character.h$124$2_0$149	= .
                                    677 	.globl	C$Character.h$124$2_0$149
                                    678 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000245 F8 07            [12]  679 	ldhl	sp,	#7
      000247 36 00            [12]  680 	ld	(hl), #0x00
      000249                        681 00105$:
      000249 D1               [12]  682 	pop	de
      00024A D5               [16]  683 	push	de
      00024B 1A               [ 8]  684 	ld	a, (de)
      00024C F8 04            [12]  685 	ldhl	sp,	#4
      00024E 77               [ 8]  686 	ld	(hl), a
      00024F F8 07            [12]  687 	ldhl	sp,	#7
      000251 7E               [ 8]  688 	ld	a, (hl)
      000252 F8 04            [12]  689 	ldhl	sp,	#4
      000254 96               [ 8]  690 	sub	a, (hl)
      000255 28 44            [12]  691 	jr	Z, 00109$
                           000257   692 	C$Character.h$127$5_0$153	= .
                                    693 	.globl	C$Character.h$127$5_0$153
                                    694 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:127: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      000257 0A               [ 8]  695 	ld	a, (bc)
      000258 F8 07            [12]  696 	ldhl	sp,	#7
      00025A 86               [ 8]  697 	add	a, (hl)
      00025B 57               [ 4]  698 	ld	d, a
      00025C C5               [16]  699 	push	bc
      00025D D5               [16]  700 	push	de
      00025E F8 08            [12]  701 	ldhl	sp,	#8
      000260 2A               [ 8]  702 	ld	a, (hl+)
      000261 23               [ 8]  703 	inc	hl
      000262 5F               [ 4]  704 	ld	e, a
      000263 7E               [ 8]  705 	ld	a, (hl)
      000264 CDr00r00         [24]  706 	call	__muluchar
      000267 79               [ 4]  707 	ld	a, c
      000268 D1               [12]  708 	pop	de
      000269 C1               [12]  709 	pop	bc
      00026A 82               [ 4]  710 	add	a, d
      00026B 5F               [ 4]  711 	ld	e, a
                                    712 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:130: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      00026C F8 06            [12]  713 	ldhl	sp,	#6
      00026E 7E               [ 8]  714 	ld	a, (hl)
      00026F 87               [ 4]  715 	add	a, a
      000270 87               [ 4]  716 	add	a, a
      000271 87               [ 4]  717 	add	a, a
      000272 F8 0A            [12]  718 	ldhl	sp,	#10
      000274 56               [ 8]  719 	ld	d, (hl)
      000275 82               [ 4]  720 	add	a, d
      000276 57               [ 4]  721 	ld	d, a
      000277 F8 07            [12]  722 	ldhl	sp,	#7
      000279 3A               [ 8]  723 	ld	a, (hl-)
      00027A 2B               [ 8]  724 	dec	hl
      00027B 87               [ 4]  725 	add	a, a
      00027C 87               [ 4]  726 	add	a, a
      00027D 87               [ 4]  727 	add	a, a
      00027E 6E               [ 8]  728 	ld	l, (hl)
                                    729 ;	spillPairReg hl
                                    730 ;	spillPairReg hl
      00027F 85               [ 4]  731 	add	a, l
      000280 F8 04            [12]  732 	ldhl	sp,	#4
      000282 77               [ 8]  733 	ld	(hl), a
                                    734 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000283 26 00            [ 8]  735 	ld	h, #0x00
                                    736 ;	spillPairReg hl
                                    737 ;	spillPairReg hl
      000285 6B               [ 4]  738 	ld	l, e
      000286 29               [ 8]  739 	add	hl, hl
      000287 29               [ 8]  740 	add	hl, hl
      000288 D5               [16]  741 	push	de
      000289 11r00r00         [12]  742 	ld	de, #_shadow_OAM
      00028C 19               [ 8]  743 	add	hl, de
      00028D D1               [12]  744 	pop	de
                                    745 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00028E 7A               [ 4]  746 	ld	a, d
      00028F 22               [ 8]  747 	ld	(hl+), a
      000290 5D               [ 4]  748 	ld	e, l
      000291 54               [ 4]  749 	ld	d, h
      000292 F8 04            [12]  750 	ldhl	sp,	#4
      000294 7E               [ 8]  751 	ld	a, (hl)
      000295 12               [ 8]  752 	ld	(de), a
                           000296   753 	C$Character.h$124$4_0$152	= .
                                    754 	.globl	C$Character.h$124$4_0$152
                                    755 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000296 F8 07            [12]  756 	ldhl	sp,	#7
      000298 34               [12]  757 	inc	(hl)
      000299 18 AE            [12]  758 	jr	00105$
      00029B                        759 00109$:
                           00029B   760 	C$Character.h$122$2_0$150	= .
                                    761 	.globl	C$Character.h$122$2_0$150
                                    762 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      00029B F8 06            [12]  763 	ldhl	sp,	#6
      00029D 34               [12]  764 	inc	(hl)
      00029E 18 98            [12]  765 	jr	00108$
      0002A0                        766 00110$:
                           0002A0   767 	C$Character.h$133$2_0$149	= .
                                    768 	.globl	C$Character.h$133$2_0$149
                                    769 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: }
      0002A0 E8 08            [16]  770 	add	sp, #8
      0002A2 E1               [12]  771 	pop	hl
      0002A3 33               [ 8]  772 	inc	sp
      0002A4 E9               [ 4]  773 	jp	(hl)
                           0002A5   774 	G$ScrollCharacter$0$0	= .
                                    775 	.globl	G$ScrollCharacter$0$0
                           0002A5   776 	C$Character.h$135$2_0$158	= .
                                    777 	.globl	C$Character.h$135$2_0$158
                                    778 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    779 ;	---------------------------------
                                    780 ; Function ScrollCharacter
                                    781 ; ---------------------------------
      0002A5                        782 _ScrollCharacter::
      0002A5 D5               [16]  783 	push	de
      0002A6 4F               [ 4]  784 	ld	c, a
                           0002A7   785 	C$Character.h$137$1_0$158	= .
                                    786 	.globl	C$Character.h$137$1_0$158
                                    787 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:137: character->x += x;
      0002A7 D1               [12]  788 	pop	de
      0002A8 D5               [16]  789 	push	de
      0002A9 21 06 00         [12]  790 	ld	hl, #0x0006
      0002AC 19               [ 8]  791 	add	hl, de
      0002AD 5D               [ 4]  792 	ld	e, l
      0002AE 54               [ 4]  793 	ld	d, h
      0002AF 1A               [ 8]  794 	ld	a, (de)
      0002B0 81               [ 4]  795 	add	a, c
      0002B1 12               [ 8]  796 	ld	(de), a
                           0002B2   797 	C$Character.h$138$1_0$158	= .
                                    798 	.globl	C$Character.h$138$1_0$158
                                    799 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:138: character->y += y;
      0002B2 D5               [16]  800 	push	de
      0002B3 F8 02            [12]  801 	ldhl	sp,#2
      0002B5 2A               [ 8]  802 	ld	a, (hl+)
      0002B6 5F               [ 4]  803 	ld	e, a
      0002B7 56               [ 8]  804 	ld	d, (hl)
      0002B8 21 07 00         [12]  805 	ld	hl, #0x0007
      0002BB 19               [ 8]  806 	add	hl, de
      0002BC D1               [12]  807 	pop	de
      0002BD 4D               [ 4]  808 	ld	c, l
      0002BE 44               [ 4]  809 	ld	b, h
      0002BF 0A               [ 8]  810 	ld	a, (bc)
      0002C0 F8 04            [12]  811 	ldhl	sp,	#4
      0002C2 86               [ 8]  812 	add	a, (hl)
                           0002C3   813 	C$Character.h$140$1_0$158	= .
                                    814 	.globl	C$Character.h$140$1_0$158
                                    815 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:140: MoveCharacter(character, character->x, character->y);
      0002C3 02               [ 8]  816 	ld	(bc), a
      0002C4 47               [ 4]  817 	ld	b, a
      0002C5 1A               [ 8]  818 	ld	a, (de)
      0002C6 4F               [ 4]  819 	ld	c, a
      0002C7 C5               [16]  820 	push	bc
      0002C8 33               [ 8]  821 	inc	sp
      0002C9 79               [ 4]  822 	ld	a, c
      0002CA F8 01            [12]  823 	ldhl	sp,	#1
      0002CC 5E               [ 8]  824 	ld	e, (hl)
      0002CD 23               [ 8]  825 	inc	hl
      0002CE 56               [ 8]  826 	ld	d, (hl)
                           0002CF   827 	C$Character.h$141$1_0$158	= .
                                    828 	.globl	C$Character.h$141$1_0$158
                                    829 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:141: }
      0002CF CDr05r02         [24]  830 	call	_MoveCharacter
      0002D2 E1               [12]  831 	pop	hl
      0002D3 E1               [12]  832 	pop	hl
      0002D4 33               [ 8]  833 	inc	sp
      0002D5 E9               [ 4]  834 	jp	(hl)
                           0002D6   835 	G$MoveCharacterWithJoypad$0$0	= .
                                    836 	.globl	G$MoveCharacterWithJoypad$0$0
                           0002D6   837 	C$Character.h$143$1_0$160	= .
                                    838 	.globl	C$Character.h$143$1_0$160
                                    839 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:143: void MoveCharacterWithJoypad(Character *character)
                                    840 ;	---------------------------------
                                    841 ; Function MoveCharacterWithJoypad
                                    842 ; ---------------------------------
      0002D6                        843 _MoveCharacterWithJoypad::
      0002D6 E8 F8            [16]  844 	add	sp, #-8
      0002D8 4B               [ 4]  845 	ld	c, e
      0002D9 42               [ 4]  846 	ld	b, d
                           0002DA   847 	C$Character.h$146$1_0$160	= .
                                    848 	.globl	C$Character.h$146$1_0$160
                                    849 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:146: uint8_t buttons = joypad();
      0002DA CDr00r00         [24]  850 	call	_joypad
                           0002DD   851 	C$Character.h$148$1_0$160	= .
                                    852 	.globl	C$Character.h$148$1_0$160
                                    853 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:148: int8_t moveX = 0;
      0002DD F8 00            [12]  854 	ldhl	sp,	#0
      0002DF 36 00            [12]  855 	ld	(hl), #0x00
                           0002E1   856 	C$Character.h$149$1_0$160	= .
                                    857 	.globl	C$Character.h$149$1_0$160
                                    858 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: int8_t moveY = 0;
      0002E1 23               [ 8]  859 	inc	hl
      0002E2 36 00            [12]  860 	ld	(hl), #0x00
                           0002E4   861 	C$Character.h$151$1_0$160	= .
                                    862 	.globl	C$Character.h$151$1_0$160
                                    863 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:151: if (buttons & J_LEFT)
      0002E4 CB 4F            [ 8]  864 	bit	1, a
      0002E6 28 06            [12]  865 	jr	Z, 00104$
                           0002E8   866 	C$Character.h$153$2_0$161	= .
                                    867 	.globl	C$Character.h$153$2_0$161
                                    868 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: moveX = -1;
      0002E8 F8 00            [12]  869 	ldhl	sp,	#0
      0002EA 36 FF            [12]  870 	ld	(hl), #0xff
      0002EC 18 08            [12]  871 	jr	00108$
      0002EE                        872 00104$:
                           0002EE   873 	C$Character.h$155$1_0$160	= .
                                    874 	.globl	C$Character.h$155$1_0$160
                                    875 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: else if (buttons & J_RIGHT)
      0002EE CB 47            [ 8]  876 	bit	0, a
      0002F0 28 04            [12]  877 	jr	Z, 00108$
                           0002F2   878 	C$Character.h$157$2_0$162	= .
                                    879 	.globl	C$Character.h$157$2_0$162
                                    880 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:157: moveX = 1;
      0002F2 F8 00            [12]  881 	ldhl	sp,	#0
      0002F4 36 01            [12]  882 	ld	(hl), #0x01
                           0002F6   883 	C$Character.h$163$1_0$160	= .
                                    884 	.globl	C$Character.h$163$1_0$160
                                    885 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:163: else if (buttons & J_DOWN)
      0002F6                        886 00108$:
                           0002F6   887 	C$Character.h$168$1_0$160	= .
                                    888 	.globl	C$Character.h$168$1_0$160
                                    889 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      0002F6 E6 10            [ 8]  890 	and	a, #0x10
      0002F8 F8 02            [12]  891 	ldhl	sp,	#2
      0002FA 22               [ 8]  892 	ld	(hl+), a
      0002FB 36 00            [12]  893 	ld	(hl), #0x00
                           0002FD   894 	C$Character.h$171$1_0$160	= .
                                    895 	.globl	C$Character.h$171$1_0$160
                                    896 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:171: character->hasJumped = 1;
      0002FD 21 0F 00         [12]  897 	ld	hl, #0x000f
      000300 09               [ 8]  898 	add	hl, bc
      000301 E5               [16]  899 	push	hl
      000302 7D               [ 4]  900 	ld	a, l
      000303 F8 06            [12]  901 	ldhl	sp,	#6
      000305 77               [ 8]  902 	ld	(hl), a
      000306 E1               [12]  903 	pop	hl
      000307 7C               [ 4]  904 	ld	a, h
      000308 F8 05            [12]  905 	ldhl	sp,	#5
      00030A 77               [ 8]  906 	ld	(hl), a
                           00030B   907 	C$Character.h$172$1_0$160	= .
                                    908 	.globl	C$Character.h$172$1_0$160
                                    909 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:172: character->jumpedFrames = 0;
      00030B 21 10 00         [12]  910 	ld	hl, #0x0010
      00030E 09               [ 8]  911 	add	hl, bc
      00030F E5               [16]  912 	push	hl
      000310 7D               [ 4]  913 	ld	a, l
      000311 F8 08            [12]  914 	ldhl	sp,	#8
      000313 77               [ 8]  915 	ld	(hl), a
      000314 E1               [12]  916 	pop	hl
      000315 7C               [ 4]  917 	ld	a, h
      000316 F8 07            [12]  918 	ldhl	sp,	#7
      000318 77               [ 8]  919 	ld	(hl), a
                           000319   920 	C$Character.h$168$1_0$160	= .
                                    921 	.globl	C$Character.h$168$1_0$160
                                    922 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      000319 AF               [ 4]  923 	xor	a, a
      00031A F8 02            [12]  924 	ldhl	sp,	#2
      00031C B6               [ 8]  925 	or	a, (hl)
      00031D 28 0E            [12]  926 	jr	Z, 00110$
                           00031F   927 	C$Character.h$171$2_0$165	= .
                                    928 	.globl	C$Character.h$171$2_0$165
                                    929 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:171: character->hasJumped = 1;
      00031F 23               [ 8]  930 	inc	hl
      000320 23               [ 8]  931 	inc	hl
      000321 2A               [ 8]  932 	ld	a,	(hl+)
      000322 66               [ 8]  933 	ld	h, (hl)
      000323 6F               [ 4]  934 	ld	l, a
      000324 36 01            [12]  935 	ld	(hl), #0x01
                           000326   936 	C$Character.h$172$2_0$165	= .
                                    937 	.globl	C$Character.h$172$2_0$165
                                    938 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:172: character->jumpedFrames = 0;
      000326 F8 06            [12]  939 	ldhl	sp,	#6
      000328 2A               [ 8]  940 	ld	a,	(hl+)
      000329 66               [ 8]  941 	ld	h, (hl)
      00032A 6F               [ 4]  942 	ld	l, a
      00032B 36 00            [12]  943 	ld	(hl), #0x00
      00032D                        944 00110$:
                           00032D   945 	C$Character.h$176$1_0$160	= .
                                    946 	.globl	C$Character.h$176$1_0$160
                                    947 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:176: if (character->hasJumped && (buttons & J_A))
      00032D F8 04            [12]  948 	ldhl	sp,#4
      00032F 2A               [ 8]  949 	ld	a, (hl+)
      000330 5F               [ 4]  950 	ld	e, a
      000331 56               [ 8]  951 	ld	d, (hl)
      000332 1A               [ 8]  952 	ld	a, (de)
      000333 B7               [ 4]  953 	or	a, a
      000334 28 17            [12]  954 	jr	Z, 00112$
      000336 AF               [ 4]  955 	xor	a, a
      000337 F8 02            [12]  956 	ldhl	sp,	#2
      000339 B6               [ 8]  957 	or	a, (hl)
      00033A 28 11            [12]  958 	jr	Z, 00112$
                           00033C   959 	C$Character.h$179$2_0$166	= .
                                    960 	.globl	C$Character.h$179$2_0$166
                                    961 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:179: moveY = -1;
      00033C 2B               [ 8]  962 	dec	hl
      00033D 36 FF            [12]  963 	ld	(hl), #0xff
                           00033F   964 	C$Character.h$182$2_0$166	= .
                                    965 	.globl	C$Character.h$182$2_0$166
                                    966 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:182: character->jumpedFrames++;
      00033F F8 06            [12]  967 	ldhl	sp,#6
      000341 2A               [ 8]  968 	ld	a, (hl+)
      000342 5F               [ 4]  969 	ld	e, a
      000343 3A               [ 8]  970 	ld	a, (hl-)
      000344 57               [ 4]  971 	ld	d, a
      000345 1A               [ 8]  972 	ld	a, (de)
      000346 3C               [ 4]  973 	inc	a
      000347 F5               [16]  974 	push	af
      000348 2A               [ 8]  975 	ld	a,	(hl+)
      000349 66               [ 8]  976 	ld	h, (hl)
      00034A 6F               [ 4]  977 	ld	l, a
      00034B F1               [12]  978 	pop	af
      00034C 77               [ 8]  979 	ld	(hl), a
      00034D                        980 00112$:
                           00034D   981 	C$Character.h$186$1_0$160	= .
                                    982 	.globl	C$Character.h$186$1_0$160
                                    983 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:186: character->movementForceX = moveX;
      00034D 21 0C 00         [12]  984 	ld	hl, #0x000c
      000350 09               [ 8]  985 	add	hl, bc
      000351 5D               [ 4]  986 	ld	e, l
      000352 54               [ 4]  987 	ld	d, h
      000353 F8 00            [12]  988 	ldhl	sp,	#0
      000355 7E               [ 8]  989 	ld	a, (hl)
      000356 12               [ 8]  990 	ld	(de), a
                           000357   991 	C$Character.h$187$1_0$160	= .
                                    992 	.globl	C$Character.h$187$1_0$160
                                    993 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:187: character->movementForceY = moveY;
      000357 21 0D 00         [12]  994 	ld	hl, #0x000d
      00035A 09               [ 8]  995 	add	hl, bc
      00035B 4D               [ 4]  996 	ld	c, l
      00035C 44               [ 4]  997 	ld	b, h
      00035D F8 01            [12]  998 	ldhl	sp,	#1
      00035F 7E               [ 8]  999 	ld	a, (hl)
      000360 02               [ 8] 1000 	ld	(bc), a
                           000361  1001 	C$Character.h$188$1_0$160	= .
                                   1002 	.globl	C$Character.h$188$1_0$160
                                   1003 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:188: }
      000361 E8 08            [16] 1004 	add	sp, #8
                           000363  1005 	C$Character.h$188$1_0$160	= .
                                   1006 	.globl	C$Character.h$188$1_0$160
                           000363  1007 	XG$MoveCharacterWithJoypad$0$0	= .
                                   1008 	.globl	XG$MoveCharacterWithJoypad$0$0
      000363 C9               [16] 1009 	ret
                           000364  1010 	G$SetupCharacter$0$0	= .
                                   1011 	.globl	G$SetupCharacter$0$0
                           000364  1012 	C$Character.h$191$1_0$168	= .
                                   1013 	.globl	C$Character.h$191$1_0$168
                                   1014 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:191: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                   1015 ;	---------------------------------
                                   1016 ; Function SetupCharacter
                                   1017 ; ---------------------------------
      000364                       1018 _SetupCharacter::
      000364 3B               [ 8] 1019 	dec	sp
      000365 F8 00            [12] 1020 	ldhl	sp,	#0
      000367 77               [ 8] 1021 	ld	(hl), a
                           000368  1022 	C$Character.h$193$1_0$168	= .
                                   1023 	.globl	C$Character.h$193$1_0$168
                                   1024 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:193: character->tilemap = tilemap;
      000368 21 11 00         [12] 1025 	ld	hl, #0x0011
      00036B 19               [ 8] 1026 	add	hl, de
      00036C 4D               [ 4] 1027 	ld	c, l
      00036D 44               [ 4] 1028 	ld	b, h
      00036E F8 07            [12] 1029 	ldhl	sp,	#7
      000370 2A               [ 8] 1030 	ld	a, (hl+)
      000371 02               [ 8] 1031 	ld	(bc), a
      000372 03               [ 8] 1032 	inc	bc
      000373 7E               [ 8] 1033 	ld	a, (hl)
      000374 02               [ 8] 1034 	ld	(bc), a
                           000375  1035 	C$Character.h$194$1_0$168	= .
                                   1036 	.globl	C$Character.h$194$1_0$168
                                   1037 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:194: character->spriteId = spriteId;
      000375 F8 00            [12] 1038 	ldhl	sp,	#0
      000377 7E               [ 8] 1039 	ld	a, (hl)
      000378 12               [ 8] 1040 	ld	(de), a
                           000379  1041 	C$Character.h$195$1_0$168	= .
                                   1042 	.globl	C$Character.h$195$1_0$168
                                   1043 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:195: character->spriteTileWidth = tileWidth;
      000379 4B               [ 4] 1044 	ld	c, e
      00037A 42               [ 4] 1045 	ld	b, d
      00037B 03               [ 8] 1046 	inc	bc
      00037C F8 03            [12] 1047 	ldhl	sp,	#3
                           00037E  1048 	C$Character.h$196$1_0$168	= .
                                   1049 	.globl	C$Character.h$196$1_0$168
                                   1050 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:196: character->spriteTileHeight = tileHeight;
      00037E 2A               [ 8] 1051 	ld	a, (hl+)
      00037F 02               [ 8] 1052 	ld	(bc), a
      000380 4B               [ 4] 1053 	ld	c, e
      000381 42               [ 4] 1054 	ld	b, d
      000382 03               [ 8] 1055 	inc	bc
      000383 03               [ 8] 1056 	inc	bc
      000384 7E               [ 8] 1057 	ld	a, (hl)
      000385 02               [ 8] 1058 	ld	(bc), a
                           000386  1059 	C$Character.h$197$1_0$168	= .
                                   1060 	.globl	C$Character.h$197$1_0$168
                                   1061 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:197: character->tilesetStart = tilesetStart;
      000386 21 05 00         [12] 1062 	ld	hl, #0x0005
      000389 19               [ 8] 1063 	add	hl, de
      00038A 4D               [ 4] 1064 	ld	c, l
      00038B 44               [ 4] 1065 	ld	b, h
      00038C F8 05            [12] 1066 	ldhl	sp,	#5
                           00038E  1067 	C$Character.h$198$1_0$168	= .
                                   1068 	.globl	C$Character.h$198$1_0$168
                                   1069 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:198: character->spriteFrames = totalFrames;
      00038E 2A               [ 8] 1070 	ld	a, (hl+)
      00038F 02               [ 8] 1071 	ld	(bc), a
      000390 4B               [ 4] 1072 	ld	c, e
      000391 42               [ 4] 1073 	ld	b, d
      000392 03               [ 8] 1074 	inc	bc
      000393 03               [ 8] 1075 	inc	bc
      000394 03               [ 8] 1076 	inc	bc
      000395 7E               [ 8] 1077 	ld	a, (hl)
      000396 02               [ 8] 1078 	ld	(bc), a
                           000397  1079 	C$Character.h$199$1_0$168	= .
                                   1080 	.globl	C$Character.h$199$1_0$168
                                   1081 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:199: character->underfootState = 0;
      000397 21 0E 00         [12] 1082 	ld	hl, #0x000e
      00039A 19               [ 8] 1083 	add	hl, de
      00039B 36 00            [12] 1084 	ld	(hl), #0x00
                           00039D  1085 	C$Character.h$200$1_0$168	= .
                                   1086 	.globl	C$Character.h$200$1_0$168
                                   1087 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:200: character->jumpedFrames = 0;
      00039D 21 10 00         [12] 1088 	ld	hl, #0x0010
      0003A0 19               [ 8] 1089 	add	hl, de
      0003A1 36 00            [12] 1090 	ld	(hl), #0x00
                           0003A3  1091 	C$Character.h$201$1_0$168	= .
                                   1092 	.globl	C$Character.h$201$1_0$168
                                   1093 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:201: character->hasJumped = 0;
      0003A3 21 0F 00         [12] 1094 	ld	hl, #0x000f
      0003A6 19               [ 8] 1095 	add	hl, de
      0003A7 36 00            [12] 1096 	ld	(hl), #0x00
                           0003A9  1097 	C$Character.h$203$1_0$168	= .
                                   1098 	.globl	C$Character.h$203$1_0$168
                                   1099 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:203: LoadSpriteFrame(character, 0);
      0003A9 AF               [ 4] 1100 	xor	a, a
      0003AA CDr00r00         [24] 1101 	call	_LoadSpriteFrame
                           0003AD  1102 	C$Character.h$204$1_0$168	= .
                                   1103 	.globl	C$Character.h$204$1_0$168
                                   1104 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:204: }
      0003AD 33               [ 8] 1105 	inc	sp
      0003AE E1               [12] 1106 	pop	hl
      0003AF E8 06            [16] 1107 	add	sp, #6
      0003B1 E9               [ 4] 1108 	jp	(hl)
                           0003B2  1109 	G$ShowTitle$0$0	= .
                                   1110 	.globl	G$ShowTitle$0$0
                           0003B2  1111 	C$main.c$26$1_0$173	= .
                                   1112 	.globl	C$main.c$26$1_0$173
                                   1113 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:26: void ShowTitle(void)
                                   1114 ;	---------------------------------
                                   1115 ; Function ShowTitle
                                   1116 ; ---------------------------------
      0003B2                       1117 _ShowTitle::
                           0003B2  1118 	C$main.c$29$1_0$173	= .
                                   1119 	.globl	C$main.c$29$1_0$173
                                   1120 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:29: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0003B2 11r00r00         [12] 1121 	ld	de, #_SplashScreenSprite_tileset
      0003B5 D5               [16] 1122 	push	de
      0003B6 21 00 C8         [12] 1123 	ld	hl, #0xc800
      0003B9 E5               [16] 1124 	push	hl
      0003BA CDr00r00         [24] 1125 	call	_set_bkg_data
      0003BD E8 04            [16] 1126 	add	sp, #4
                           0003BF  1127 	C$main.c$32$1_0$173	= .
                                   1128 	.globl	C$main.c$32$1_0$173
                                   1129 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:32: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      0003BF 11r00r00         [12] 1130 	ld	de, #_SplashScreenSprite_tilemap
      0003C2 D5               [16] 1131 	push	de
      0003C3 21 14 12         [12] 1132 	ld	hl, #0x1214
      0003C6 E5               [16] 1133 	push	hl
      0003C7 AF               [ 4] 1134 	xor	a, a
      0003C8 0F               [ 4] 1135 	rrca
      0003C9 F5               [16] 1136 	push	af
      0003CA CDr00r00         [24] 1137 	call	_set_bkg_tiles
      0003CD E8 06            [16] 1138 	add	sp, #6
                           0003CF  1139 	C$main.c$33$1_0$173	= .
                                   1140 	.globl	C$main.c$33$1_0$173
                                   1141 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:33: }
                           0003CF  1142 	C$main.c$33$1_0$173	= .
                                   1143 	.globl	C$main.c$33$1_0$173
                           0003CF  1144 	XG$ShowTitle$0$0	= .
                                   1145 	.globl	XG$ShowTitle$0$0
      0003CF C9               [16] 1146 	ret
                           0003D0  1147 	G$SetupBackGround$0$0	= .
                                   1148 	.globl	G$SetupBackGround$0$0
                           0003D0  1149 	C$main.c$35$1_0$174	= .
                                   1150 	.globl	C$main.c$35$1_0$174
                                   1151 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:35: void SetupBackGround()
                                   1152 ;	---------------------------------
                                   1153 ; Function SetupBackGround
                                   1154 ; ---------------------------------
      0003D0                       1155 _SetupBackGround::
                           0003D0  1156 	C$main.c$38$1_0$174	= .
                                   1157 	.globl	C$main.c$38$1_0$174
                                   1158 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:38: set_bkg_data(0, BackGroundSprite_tileset_size, BackGroundSprite_tileset);
      0003D0 11r00r00         [12] 1159 	ld	de, #_BackGroundSprite_tileset
      0003D3 D5               [16] 1160 	push	de
      0003D4 21 00 35         [12] 1161 	ld	hl, #0x3500
      0003D7 E5               [16] 1162 	push	hl
      0003D8 CDr00r00         [24] 1163 	call	_set_bkg_data
      0003DB E8 04            [16] 1164 	add	sp, #4
                           0003DD  1165 	C$main.c$41$1_0$174	= .
                                   1166 	.globl	C$main.c$41$1_0$174
                                   1167 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:41: set_bkg_tiles(0, 0, 40, 18, BackGroundSprite_tilemap);
      0003DD 11r00r00         [12] 1168 	ld	de, #_BackGroundSprite_tilemap
      0003E0 D5               [16] 1169 	push	de
      0003E1 21 28 12         [12] 1170 	ld	hl, #0x1228
      0003E4 E5               [16] 1171 	push	hl
      0003E5 AF               [ 4] 1172 	xor	a, a
      0003E6 0F               [ 4] 1173 	rrca
      0003E7 F5               [16] 1174 	push	af
      0003E8 CDr00r00         [24] 1175 	call	_set_bkg_tiles
      0003EB E8 06            [16] 1176 	add	sp, #6
                           0003ED  1177 	C$main.c$42$1_0$174	= .
                                   1178 	.globl	C$main.c$42$1_0$174
                                   1179 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:42: }
                           0003ED  1180 	C$main.c$42$1_0$174	= .
                                   1181 	.globl	C$main.c$42$1_0$174
                           0003ED  1182 	XG$SetupBackGround$0$0	= .
                                   1183 	.globl	XG$SetupBackGround$0$0
      0003ED C9               [16] 1184 	ret
                           0003EE  1185 	G$DetectCollisions$0$0	= .
                                   1186 	.globl	G$DetectCollisions$0$0
                           0003EE  1187 	C$main.c$44$1_0$176	= .
                                   1188 	.globl	C$main.c$44$1_0$176
                                   1189 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:44: void DetectCollisions(Character *character, uint8_t *predictedX, uint8_t *predictedY)
                                   1190 ;	---------------------------------
                                   1191 ; Function DetectCollisions
                                   1192 ; ---------------------------------
      0003EE                       1193 _DetectCollisions::
                           0003EE  1194 	C$main.c$47$1_0$176	= .
                                   1195 	.globl	C$main.c$47$1_0$176
                                   1196 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: if (*predictedY >= GLOUND_LEVEL)
      0003EE F8 02            [12] 1197 	ldhl	sp,	#2
      0003F0 2A               [ 8] 1198 	ld	a, (hl+)
      0003F1 4F               [ 4] 1199 	ld	c, a
      0003F2 46               [ 8] 1200 	ld	b, (hl)
      0003F3 0A               [ 8] 1201 	ld	a, (bc)
      0003F4 6F               [ 4] 1202 	ld	l, a
                                   1203 ;	spillPairReg hl
                                   1204 ;	spillPairReg hl
                           0003F5  1205 	C$main.c$53$1_0$176	= .
                                   1206 	.globl	C$main.c$53$1_0$176
                                   1207 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:53: character->velocityY = 0;
      0003F5 7B               [ 4] 1208 	ld	a, e
      0003F6 C6 09            [ 8] 1209 	add	a, #0x09
      0003F8 5F               [ 4] 1210 	ld	e, a
      0003F9 30 01            [12] 1211 	jr	NC, 00122$
      0003FB 14               [ 4] 1212 	inc	d
      0003FC                       1213 00122$:
                           0003FC  1214 	C$main.c$47$1_0$176	= .
                                   1215 	.globl	C$main.c$47$1_0$176
                                   1216 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: if (*predictedY >= GLOUND_LEVEL)
      0003FC 7D               [ 4] 1217 	ld	a, l
      0003FD D6 82            [ 8] 1218 	sub	a, #0x82
      0003FF 38 07            [12] 1219 	jr	C, 00104$
                           000401  1220 	C$main.c$50$2_0$177	= .
                                   1221 	.globl	C$main.c$50$2_0$177
                                   1222 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:50: *predictedY = GLOUND_LEVEL; 
      000401 3E 82            [ 8] 1223 	ld	a, #0x82
      000403 02               [ 8] 1224 	ld	(bc), a
                           000404  1225 	C$main.c$53$2_0$177	= .
                                   1226 	.globl	C$main.c$53$2_0$177
                                   1227 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:53: character->velocityY = 0;
      000404 AF               [ 4] 1228 	xor	a, a
      000405 12               [ 8] 1229 	ld	(de), a
      000406 18 0A            [12] 1230 	jr	00106$
      000408                       1231 00104$:
                           000408  1232 	C$main.c$54$1_0$176	= .
                                   1233 	.globl	C$main.c$54$1_0$176
                                   1234 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:54: }else if(*predictedY < MAX_HEIGHT_LEVEL)
      000408 7D               [ 4] 1235 	ld	a, l
      000409 D6 14            [ 8] 1236 	sub	a, #0x14
      00040B 30 05            [12] 1237 	jr	NC, 00106$
                           00040D  1238 	C$main.c$57$2_0$178	= .
                                   1239 	.globl	C$main.c$57$2_0$178
                                   1240 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:57: *predictedY = MAX_HEIGHT_LEVEL; 
      00040D 3E 14            [ 8] 1241 	ld	a, #0x14
      00040F 02               [ 8] 1242 	ld	(bc), a
                           000410  1243 	C$main.c$60$2_0$178	= .
                                   1244 	.globl	C$main.c$60$2_0$178
                                   1245 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:60: character->velocityY = 0;
      000410 AF               [ 4] 1246 	xor	a, a
      000411 12               [ 8] 1247 	ld	(de), a
      000412                       1248 00106$:
                           000412  1249 	C$main.c$62$1_0$176	= .
                                   1250 	.globl	C$main.c$62$1_0$176
                                   1251 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:62: }
      000412 E1               [12] 1252 	pop	hl
      000413 F1               [12] 1253 	pop	af
      000414 E9               [ 4] 1254 	jp	(hl)
                           000415  1255 	G$MovementPhysics$0$0	= .
                                   1256 	.globl	G$MovementPhysics$0$0
                           000415  1257 	C$main.c$64$1_0$180	= .
                                   1258 	.globl	C$main.c$64$1_0$180
                                   1259 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:64: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                   1260 ;	---------------------------------
                                   1261 ; Function MovementPhysics
                                   1262 ; ---------------------------------
      000415                       1263 _MovementPhysics::
      000415 E8 F7            [16] 1264 	add	sp, #-9
      000417 F8 07            [12] 1265 	ldhl	sp,	#7
      000419 7B               [ 4] 1266 	ld	a, e
      00041A 22               [ 8] 1267 	ld	(hl+), a
                           00041B  1268 	C$main.c$67$1_1$180	= .
                                   1269 	.globl	C$main.c$67$1_1$180
                                   1270 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:67: if (character->movementForceY != 0)
      00041B 7A               [ 4] 1271 	ld	a, d
      00041C 32               [ 8] 1272 	ld	(hl-), a
      00041D 2A               [ 8] 1273 	ld	a, (hl+)
      00041E 5F               [ 4] 1274 	ld	e, a
      00041F 56               [ 8] 1275 	ld	d, (hl)
      000420 21 0D 00         [12] 1276 	ld	hl, #0x000d
      000423 19               [ 8] 1277 	add	hl, de
      000424 E5               [16] 1278 	push	hl
      000425 7D               [ 4] 1279 	ld	a, l
      000426 F8 04            [12] 1280 	ldhl	sp,	#4
      000428 77               [ 8] 1281 	ld	(hl), a
      000429 E1               [12] 1282 	pop	hl
      00042A 7C               [ 4] 1283 	ld	a, h
      00042B F8 03            [12] 1284 	ldhl	sp,	#3
      00042D 32               [ 8] 1285 	ld	(hl-), a
      00042E 2A               [ 8] 1286 	ld	a, (hl+)
      00042F 5F               [ 4] 1287 	ld	e, a
      000430 56               [ 8] 1288 	ld	d, (hl)
      000431 1A               [ 8] 1289 	ld	a, (de)
      000432 F8 06            [12] 1290 	ldhl	sp,	#6
                           000434  1291 	C$main.c$69$1_1$180	= .
                                   1292 	.globl	C$main.c$69$1_1$180
                                   1293 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:69: character->velocityY += character->movementForceY;
      000434 22               [ 8] 1294 	ld	(hl+), a
      000435 2A               [ 8] 1295 	ld	a, (hl+)
      000436 5F               [ 4] 1296 	ld	e, a
      000437 56               [ 8] 1297 	ld	d, (hl)
      000438 21 09 00         [12] 1298 	ld	hl, #0x0009
      00043B 19               [ 8] 1299 	add	hl, de
      00043C 33               [ 8] 1300 	inc	sp
      00043D 33               [ 8] 1301 	inc	sp
      00043E E5               [16] 1302 	push	hl
                           00043F  1303 	C$main.c$67$1_0$180	= .
                                   1304 	.globl	C$main.c$67$1_0$180
                                   1305 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:67: if (character->movementForceY != 0)
      00043F F8 06            [12] 1306 	ldhl	sp,	#6
      000441 7E               [ 8] 1307 	ld	a, (hl)
      000442 B7               [ 4] 1308 	or	a, a
      000443 28 0F            [12] 1309 	jr	Z, 00116$
                           000445  1310 	C$main.c$69$2_0$181	= .
                                   1311 	.globl	C$main.c$69$2_0$181
                                   1312 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:69: character->velocityY += character->movementForceY;
      000445 D1               [12] 1313 	pop	de
      000446 D5               [16] 1314 	push	de
      000447 1A               [ 8] 1315 	ld	a, (de)
      000448 86               [ 8] 1316 	add	a, (hl)
      000449 4F               [ 4] 1317 	ld	c, a
      00044A E1               [12] 1318 	pop	hl
      00044B E5               [16] 1319 	push	hl
      00044C 71               [ 8] 1320 	ld	(hl), c
                           00044D  1321 	C$main.c$70$2_0$181	= .
                                   1322 	.globl	C$main.c$70$2_0$181
                                   1323 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:70: jumpFrameCount = 0;
      00044D 21r02r00         [12] 1324 	ld	hl, #_jumpFrameCount
      000450 36 00            [12] 1325 	ld	(hl), #0x00
      000452 18 57            [12] 1326 	jr	00117$
      000454                       1327 00116$:
                           000454  1328 	C$main.c$74$1_0$180	= .
                                   1329 	.globl	C$main.c$74$1_0$180
                                   1330 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:74: else if (character->underfootState & FOOT_IN_AIR)
      000454 F8 07            [12] 1331 	ldhl	sp,#7
      000456 2A               [ 8] 1332 	ld	a, (hl+)
      000457 5F               [ 4] 1333 	ld	e, a
      000458 56               [ 8] 1334 	ld	d, (hl)
      000459 21 0E 00         [12] 1335 	ld	hl, #0x000e
      00045C 19               [ 8] 1336 	add	hl, de
      00045D 4D               [ 4] 1337 	ld	c, l
      00045E 44               [ 4] 1338 	ld	b, h
      00045F 0A               [ 8] 1339 	ld	a, (bc)
      000460 CB 4F            [ 8] 1340 	bit	1, a
      000462 28 47            [12] 1341 	jr	Z, 00117$
                           000464  1342 	C$main.c$77$2_0$182	= .
                                   1343 	.globl	C$main.c$77$2_0$182
                                   1344 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:77: jumpFrameCount = (jumpFrameCount + 1) % 120;
      000464 21r02r00         [12] 1345 	ld	hl, #_jumpFrameCount
      000467 5E               [ 8] 1346 	ld	e, (hl)
      000468 16 00            [ 8] 1347 	ld	d, #0x00
      00046A 13               [ 8] 1348 	inc	de
      00046B 01 78 00         [12] 1349 	ld	bc, #0x0078
      00046E CDr00r00         [24] 1350 	call	__modsint
      000471 21r02r00         [12] 1351 	ld	hl, #_jumpFrameCount
      000474 71               [ 8] 1352 	ld	(hl), c
                           000475  1353 	C$main.c$80$2_0$182	= .
                                   1354 	.globl	C$main.c$80$2_0$182
                                   1355 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:80: if (jumpFrameCount < 3)
      000475 7E               [ 8] 1356 	ld	a, (hl)
      000476 D6 03            [ 8] 1357 	sub	a, #0x03
      000478 30 06            [12] 1358 	jr	NC, 00111$
                           00047A  1359 	C$main.c$81$2_0$182	= .
                                   1360 	.globl	C$main.c$81$2_0$182
                                   1361 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:81: character->velocityY = -2;
      00047A E1               [12] 1362 	pop	hl
      00047B 36 FE            [12] 1363 	ld	(hl), #0xfe
      00047D E5               [16] 1364 	push	hl
      00047E 18 2B            [12] 1365 	jr	00117$
      000480                       1366 00111$:
                           000480  1367 	C$main.c$82$2_0$182	= .
                                   1368 	.globl	C$main.c$82$2_0$182
                                   1369 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:82: else if (jumpFrameCount < 10)
      000480 FAr02r00         [16] 1370 	ld	a, (#_jumpFrameCount)
      000483 D6 0A            [ 8] 1371 	sub	a, #0x0a
      000485 30 06            [12] 1372 	jr	NC, 00108$
                           000487  1373 	C$main.c$83$2_0$182	= .
                                   1374 	.globl	C$main.c$83$2_0$182
                                   1375 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:83: character->velocityY = -1;
      000487 E1               [12] 1376 	pop	hl
      000488 36 FF            [12] 1377 	ld	(hl), #0xff
      00048A E5               [16] 1378 	push	hl
      00048B 18 1E            [12] 1379 	jr	00117$
      00048D                       1380 00108$:
                           00048D  1381 	C$main.c$84$2_0$182	= .
                                   1382 	.globl	C$main.c$84$2_0$182
                                   1383 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:84: else if (jumpFrameCount < 14)
      00048D FAr02r00         [16] 1384 	ld	a, (#_jumpFrameCount)
      000490 D6 0E            [ 8] 1385 	sub	a, #0x0e
      000492 30 06            [12] 1386 	jr	NC, 00105$
                           000494  1387 	C$main.c$85$2_0$182	= .
                                   1388 	.globl	C$main.c$85$2_0$182
                                   1389 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:85: character->velocityY = 0;
      000494 E1               [12] 1390 	pop	hl
      000495 36 00            [12] 1391 	ld	(hl), #0x00
      000497 E5               [16] 1392 	push	hl
      000498 18 11            [12] 1393 	jr	00117$
      00049A                       1394 00105$:
                           00049A  1395 	C$main.c$86$2_0$182	= .
                                   1396 	.globl	C$main.c$86$2_0$182
                                   1397 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:86: else if (jumpFrameCount < 20)
      00049A FAr02r00         [16] 1398 	ld	a, (#_jumpFrameCount)
      00049D D6 14            [ 8] 1399 	sub	a, #0x14
      00049F 30 06            [12] 1400 	jr	NC, 00102$
                           0004A1  1401 	C$main.c$87$2_0$182	= .
                                   1402 	.globl	C$main.c$87$2_0$182
                                   1403 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:87: character->velocityY = 1;
      0004A1 E1               [12] 1404 	pop	hl
      0004A2 36 01            [12] 1405 	ld	(hl), #0x01
      0004A4 E5               [16] 1406 	push	hl
      0004A5 18 04            [12] 1407 	jr	00117$
      0004A7                       1408 00102$:
                           0004A7  1409 	C$main.c$89$2_0$182	= .
                                   1410 	.globl	C$main.c$89$2_0$182
                                   1411 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:89: character->velocityY = 2;
      0004A7 E1               [12] 1412 	pop	hl
      0004A8 36 02            [12] 1413 	ld	(hl), #0x02
      0004AA E5               [16] 1414 	push	hl
      0004AB                       1415 00117$:
                           0004AB  1416 	C$main.c$93$1_0$180	= .
                                   1417 	.globl	C$main.c$93$1_0$180
                                   1418 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:93: if (character->velocityY != 0 && character->velocityY < -3)
      0004AB D1               [12] 1419 	pop	de
      0004AC D5               [16] 1420 	push	de
      0004AD 1A               [ 8] 1421 	ld	a, (de)
      0004AE B7               [ 4] 1422 	or	a,a
      0004AF 28 0A            [12] 1423 	jr	Z, 00119$
      0004B1 EE 80            [ 8] 1424 	xor	a, #0x80
      0004B3 D6 7D            [ 8] 1425 	sub	a, #0x7d
      0004B5 30 04            [12] 1426 	jr	NC, 00119$
                           0004B7  1427 	C$main.c$94$1_0$180	= .
                                   1428 	.globl	C$main.c$94$1_0$180
                                   1429 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:94: character->velocityY = -3;
      0004B7 E1               [12] 1430 	pop	hl
      0004B8 36 FD            [12] 1431 	ld	(hl), #0xfd
      0004BA E5               [16] 1432 	push	hl
      0004BB                       1433 00119$:
                           0004BB  1434 	C$main.c$93$1_1$180	= .
                                   1435 	.globl	C$main.c$93$1_1$180
                                   1436 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:93: if (character->velocityY != 0 && character->velocityY < -3)
      0004BB D1               [12] 1437 	pop	de
      0004BC D5               [16] 1438 	push	de
      0004BD 1A               [ 8] 1439 	ld	a, (de)
                           0004BE  1440 	C$main.c$95$1_0$180	= .
                                   1441 	.globl	C$main.c$95$1_0$180
                                   1442 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:95: if (character->velocityY != 0 && character->velocityY > 3)
      0004BE 4F               [ 4] 1443 	ld	c, a
      0004BF B7               [ 4] 1444 	or	a, a
      0004C0 28 1B            [12] 1445 	jr	Z, 00122$
      0004C2 59               [ 4] 1446 	ld	e, c
      0004C3 3E 03            [ 8] 1447 	ld	a,#0x03
      0004C5 57               [ 4] 1448 	ld	d,a
      0004C6 91               [ 4] 1449 	sub	a, c
      0004C7 CB 7B            [ 8] 1450 	bit	7, e
      0004C9 28 07            [12] 1451 	jr	Z, 00197$
      0004CB CB 7A            [ 8] 1452 	bit	7, d
      0004CD 20 08            [12] 1453 	jr	NZ, 00198$
      0004CF BF               [ 4] 1454 	cp	a, a
      0004D0 18 05            [12] 1455 	jr	00198$
      0004D2                       1456 00197$:
      0004D2 CB 7A            [ 8] 1457 	bit	7, d
      0004D4 28 01            [12] 1458 	jr	Z, 00198$
      0004D6 37               [ 4] 1459 	scf
      0004D7                       1460 00198$:
      0004D7 30 04            [12] 1461 	jr	NC, 00122$
                           0004D9  1462 	C$main.c$96$1_0$180	= .
                                   1463 	.globl	C$main.c$96$1_0$180
                                   1464 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:96: character->velocityY = 3;
      0004D9 E1               [12] 1465 	pop	hl
      0004DA 36 03            [12] 1466 	ld	(hl), #0x03
      0004DC E5               [16] 1467 	push	hl
      0004DD                       1468 00122$:
                           0004DD  1469 	C$main.c$99$1_1$183	= .
                                   1470 	.globl	C$main.c$99$1_1$183
                                   1471 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:99: uint8_t predictedY = character->y + character->velocityY;
      0004DD F8 07            [12] 1472 	ldhl	sp,#7
      0004DF 2A               [ 8] 1473 	ld	a, (hl+)
      0004E0 5F               [ 4] 1474 	ld	e, a
      0004E1 56               [ 8] 1475 	ld	d, (hl)
      0004E2 21 07 00         [12] 1476 	ld	hl, #0x0007
      0004E5 19               [ 8] 1477 	add	hl, de
      0004E6 4D               [ 4] 1478 	ld	c, l
      0004E7 44               [ 4] 1479 	ld	b, h
      0004E8 0A               [ 8] 1480 	ld	a, (bc)
      0004E9 F8 06            [12] 1481 	ldhl	sp,	#6
      0004EB 32               [ 8] 1482 	ld	(hl-), a
      0004EC 2B               [ 8] 1483 	dec	hl
      0004ED D1               [12] 1484 	pop	de
      0004EE D5               [16] 1485 	push	de
      0004EF 1A               [ 8] 1486 	ld	a, (de)
      0004F0 22               [ 8] 1487 	ld	(hl+), a
      0004F1 23               [ 8] 1488 	inc	hl
      0004F2 3A               [ 8] 1489 	ld	a, (hl-)
      0004F3 2B               [ 8] 1490 	dec	hl
      0004F4 86               [ 8] 1491 	add	a, (hl)
      0004F5 23               [ 8] 1492 	inc	hl
      0004F6 23               [ 8] 1493 	inc	hl
      0004F7 77               [ 8] 1494 	ld	(hl), a
      0004F8 3A               [ 8] 1495 	ld	a, (hl-)
      0004F9 77               [ 8] 1496 	ld	(hl), a
                           0004FA  1497 	C$main.c$102$1_1$183	= .
                                   1498 	.globl	C$main.c$102$1_1$183
                                   1499 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:102: DetectCollisions(character, &character->x, &predictedY);
      0004FA F8 05            [12] 1500 	ldhl	sp,	#5
      0004FC 4D               [ 4] 1501 	ld	c, l
      0004FD 44               [ 4] 1502 	ld	b, h
      0004FE F8 07            [12] 1503 	ldhl	sp,#7
      000500 2A               [ 8] 1504 	ld	a, (hl+)
      000501 5F               [ 4] 1505 	ld	e, a
      000502 56               [ 8] 1506 	ld	d, (hl)
      000503 21 06 00         [12] 1507 	ld	hl, #0x0006
      000506 19               [ 8] 1508 	add	hl, de
      000507 5D               [ 4] 1509 	ld	e, l
      000508 54               [ 4] 1510 	ld	d, h
      000509 D5               [16] 1511 	push	de
      00050A C5               [16] 1512 	push	bc
      00050B 4B               [ 4] 1513 	ld	c, e
      00050C 42               [ 4] 1514 	ld	b, d
      00050D F8 0B            [12] 1515 	ldhl	sp,	#11
      00050F 2A               [ 8] 1516 	ld	a, (hl+)
      000510 5F               [ 4] 1517 	ld	e, a
      000511 56               [ 8] 1518 	ld	d, (hl)
      000512 CDrEEr03         [24] 1519 	call	_DetectCollisions
      000515 D1               [12] 1520 	pop	de
                           000516  1521 	C$main.c$105$1_1$183	= .
                                   1522 	.globl	C$main.c$105$1_1$183
                                   1523 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:105: MoveCharacter(character, character->x, predictedY);
      000516 1A               [ 8] 1524 	ld	a, (de)
      000517 4F               [ 4] 1525 	ld	c, a
      000518 F8 05            [12] 1526 	ldhl	sp,	#5
      00051A 2A               [ 8] 1527 	ld	a, (hl+)
      00051B 23               [ 8] 1528 	inc	hl
      00051C F5               [16] 1529 	push	af
      00051D 33               [ 8] 1530 	inc	sp
      00051E 79               [ 4] 1531 	ld	a, c
      00051F 5E               [ 8] 1532 	ld	e, (hl)
      000520 23               [ 8] 1533 	inc	hl
      000521 56               [ 8] 1534 	ld	d, (hl)
      000522 CDr05r02         [24] 1535 	call	_MoveCharacter
                           000525  1536 	C$main.c$108$1_1$183	= .
                                   1537 	.globl	C$main.c$108$1_1$183
                                   1538 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:108: lastMovementY = character->movementForceY;
      000525 F8 02            [12] 1539 	ldhl	sp,#2
      000527 2A               [ 8] 1540 	ld	a, (hl+)
      000528 5F               [ 4] 1541 	ld	e, a
      000529 56               [ 8] 1542 	ld	d, (hl)
      00052A 1A               [ 8] 1543 	ld	a, (de)
      00052B EAr04r00         [16] 1544 	ld	(#_lastMovementY),a
                           00052E  1545 	C$main.c$109$1_1$180	= .
                                   1546 	.globl	C$main.c$109$1_1$180
                                   1547 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:109: }
      00052E E8 09            [16] 1548 	add	sp, #9
                           000530  1549 	C$main.c$109$1_1$180	= .
                                   1550 	.globl	C$main.c$109$1_1$180
                           000530  1551 	XG$MovementPhysics$0$0	= .
                                   1552 	.globl	XG$MovementPhysics$0$0
      000530 C9               [16] 1553 	ret
                           000531  1554 	G$Hit$0$0	= .
                                   1555 	.globl	G$Hit$0$0
                           000531  1556 	C$main.c$111$1_1$185	= .
                                   1557 	.globl	C$main.c$111$1_1$185
                                   1558 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:111: BOOLEAN Hit(uint8_t playerX, uint8_t playerY, uint8_t objX, uint8_t objY)
                                   1559 ;	---------------------------------
                                   1560 ; Function Hit
                                   1561 ; ---------------------------------
      000531                       1562 _Hit::
      000531 E8 FB            [16] 1563 	add	sp, #-5
      000533 4F               [ 4] 1564 	ld	c, a
      000534 F8 04            [12] 1565 	ldhl	sp,	#4
      000536 73               [ 8] 1566 	ld	(hl), e
                           000537  1567 	C$main.c$113$1_0$185	= .
                                   1568 	.globl	C$main.c$113$1_0$185
                                   1569 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:113: return (playerX < objX + 8 && objX < playerX + 8) && (playerY < objY + 8 && objY < playerY + 8) ;
      000537 F8 07            [12] 1570 	ldhl	sp,	#7
      000539 7E               [ 8] 1571 	ld	a, (hl)
      00053A F8 00            [12] 1572 	ldhl	sp,	#0
      00053C 22               [ 8] 1573 	ld	(hl+), a
      00053D 36 00            [12] 1574 	ld	(hl), #0x00
      00053F D1               [12] 1575 	pop	de
      000540 D5               [16] 1576 	push	de
      000541 21 08 00         [12] 1577 	ld	hl, #0x0008
      000544 19               [ 8] 1578 	add	hl, de
      000545 E5               [16] 1579 	push	hl
      000546 7D               [ 4] 1580 	ld	a, l
      000547 F8 04            [12] 1581 	ldhl	sp,	#4
      000549 77               [ 8] 1582 	ld	(hl), a
      00054A E1               [12] 1583 	pop	hl
      00054B 7C               [ 4] 1584 	ld	a, h
      00054C F8 03            [12] 1585 	ldhl	sp,	#3
      00054E 32               [ 8] 1586 	ld	(hl-), a
      00054F 06 00            [ 8] 1587 	ld	b, #0x00
      000551 79               [ 4] 1588 	ld	a, c
      000552 96               [ 8] 1589 	sub	a, (hl)
      000553 23               [ 8] 1590 	inc	hl
      000554 78               [ 4] 1591 	ld	a, b
      000555 9E               [ 8] 1592 	sbc	a, (hl)
      000556 78               [ 4] 1593 	ld	a, b
      000557 57               [ 4] 1594 	ld	d, a
      000558 5E               [ 8] 1595 	ld	e, (hl)
      000559 CB 7B            [ 8] 1596 	bit	7, e
      00055B 28 07            [12] 1597 	jr	Z, 00132$
      00055D CB 7A            [ 8] 1598 	bit	7, d
      00055F 20 08            [12] 1599 	jr	NZ, 00133$
      000561 BF               [ 4] 1600 	cp	a, a
      000562 18 05            [12] 1601 	jr	00133$
      000564                       1602 00132$:
      000564 CB 7A            [ 8] 1603 	bit	7, d
      000566 28 01            [12] 1604 	jr	Z, 00133$
      000568 37               [ 4] 1605 	scf
      000569                       1606 00133$:
      000569 30 79            [12] 1607 	jr	NC, 00103$
      00056B 21 08 00         [12] 1608 	ld	hl, #0x0008
      00056E 09               [ 8] 1609 	add	hl, bc
      00056F 4D               [ 4] 1610 	ld	c, l
      000570 44               [ 4] 1611 	ld	b, h
      000571 F8 00            [12] 1612 	ldhl	sp,	#0
      000573 2A               [ 8] 1613 	ld	a, (hl+)
      000574 91               [ 4] 1614 	sub	a, c
      000575 7E               [ 8] 1615 	ld	a, (hl)
      000576 98               [ 4] 1616 	sbc	a, b
      000577 56               [ 8] 1617 	ld	d, (hl)
      000578 78               [ 4] 1618 	ld	a, b
      000579 5F               [ 4] 1619 	ld	e, a
      00057A CB 7B            [ 8] 1620 	bit	7, e
      00057C 28 07            [12] 1621 	jr	Z, 00134$
      00057E CB 7A            [ 8] 1622 	bit	7, d
      000580 20 08            [12] 1623 	jr	NZ, 00135$
      000582 BF               [ 4] 1624 	cp	a, a
      000583 18 05            [12] 1625 	jr	00135$
      000585                       1626 00134$:
      000585 CB 7A            [ 8] 1627 	bit	7, d
      000587 28 01            [12] 1628 	jr	Z, 00135$
      000589 37               [ 4] 1629 	scf
      00058A                       1630 00135$:
      00058A 30 58            [12] 1631 	jr	NC, 00103$
      00058C F8 08            [12] 1632 	ldhl	sp,	#8
      00058E 7E               [ 8] 1633 	ld	a, (hl)
      00058F F8 00            [12] 1634 	ldhl	sp,	#0
      000591 22               [ 8] 1635 	ld	(hl+), a
      000592 36 00            [12] 1636 	ld	(hl), #0x00
      000594 D1               [12] 1637 	pop	de
      000595 D5               [16] 1638 	push	de
      000596 21 08 00         [12] 1639 	ld	hl, #0x0008
      000599 19               [ 8] 1640 	add	hl, de
      00059A E5               [16] 1641 	push	hl
      00059B 7D               [ 4] 1642 	ld	a, l
      00059C F8 04            [12] 1643 	ldhl	sp,	#4
      00059E 77               [ 8] 1644 	ld	(hl), a
      00059F E1               [12] 1645 	pop	hl
      0005A0 7C               [ 4] 1646 	ld	a, h
      0005A1 F8 03            [12] 1647 	ldhl	sp,	#3
      0005A3 22               [ 8] 1648 	ld	(hl+), a
      0005A4 3A               [ 8] 1649 	ld	a, (hl-)
      0005A5 2B               [ 8] 1650 	dec	hl
      0005A6 4F               [ 4] 1651 	ld	c, a
      0005A7 06 00            [ 8] 1652 	ld	b, #0x00
      0005A9 79               [ 4] 1653 	ld	a, c
      0005AA 96               [ 8] 1654 	sub	a, (hl)
      0005AB 23               [ 8] 1655 	inc	hl
      0005AC 78               [ 4] 1656 	ld	a, b
      0005AD 9E               [ 8] 1657 	sbc	a, (hl)
      0005AE 78               [ 4] 1658 	ld	a, b
      0005AF 57               [ 4] 1659 	ld	d, a
      0005B0 5E               [ 8] 1660 	ld	e, (hl)
      0005B1 CB 7B            [ 8] 1661 	bit	7, e
      0005B3 28 07            [12] 1662 	jr	Z, 00136$
      0005B5 CB 7A            [ 8] 1663 	bit	7, d
      0005B7 20 08            [12] 1664 	jr	NZ, 00137$
      0005B9 BF               [ 4] 1665 	cp	a, a
      0005BA 18 05            [12] 1666 	jr	00137$
      0005BC                       1667 00136$:
      0005BC CB 7A            [ 8] 1668 	bit	7, d
      0005BE 28 01            [12] 1669 	jr	Z, 00137$
      0005C0 37               [ 4] 1670 	scf
      0005C1                       1671 00137$:
      0005C1 30 21            [12] 1672 	jr	NC, 00103$
      0005C3 21 08 00         [12] 1673 	ld	hl, #0x0008
      0005C6 09               [ 8] 1674 	add	hl, bc
      0005C7 4D               [ 4] 1675 	ld	c, l
      0005C8 44               [ 4] 1676 	ld	b, h
      0005C9 F8 00            [12] 1677 	ldhl	sp,	#0
      0005CB 2A               [ 8] 1678 	ld	a, (hl+)
      0005CC 91               [ 4] 1679 	sub	a, c
      0005CD 7E               [ 8] 1680 	ld	a, (hl)
      0005CE 98               [ 4] 1681 	sbc	a, b
      0005CF 56               [ 8] 1682 	ld	d, (hl)
      0005D0 78               [ 4] 1683 	ld	a, b
      0005D1 5F               [ 4] 1684 	ld	e, a
      0005D2 CB 7B            [ 8] 1685 	bit	7, e
      0005D4 28 07            [12] 1686 	jr	Z, 00138$
      0005D6 CB 7A            [ 8] 1687 	bit	7, d
      0005D8 20 08            [12] 1688 	jr	NZ, 00139$
      0005DA BF               [ 4] 1689 	cp	a, a
      0005DB 18 05            [12] 1690 	jr	00139$
      0005DD                       1691 00138$:
      0005DD CB 7A            [ 8] 1692 	bit	7, d
      0005DF 28 01            [12] 1693 	jr	Z, 00139$
      0005E1 37               [ 4] 1694 	scf
      0005E2                       1695 00139$:
      0005E2 38 03            [12] 1696 	jr	C, 00104$
      0005E4                       1697 00103$:
      0005E4 AF               [ 4] 1698 	xor	a, a
      0005E5 18 02            [12] 1699 	jr	00105$
      0005E7                       1700 00104$:
      0005E7 3E 01            [ 8] 1701 	ld	a, #0x01
      0005E9                       1702 00105$:
                           0005E9  1703 	C$main.c$114$1_0$185	= .
                                   1704 	.globl	C$main.c$114$1_0$185
                                   1705 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:114: }
      0005E9 E8 05            [16] 1706 	add	sp, #5
      0005EB E1               [12] 1707 	pop	hl
      0005EC C1               [12] 1708 	pop	bc
      0005ED E9               [ 4] 1709 	jp	(hl)
                           0005EE  1710 	G$SetupBlock$0$0	= .
                                   1711 	.globl	G$SetupBlock$0$0
                           0005EE  1712 	C$main.c$116$1_0$186	= .
                                   1713 	.globl	C$main.c$116$1_0$186
                                   1714 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:116: void SetupBlock()
                                   1715 ;	---------------------------------
                                   1716 ; Function SetupBlock
                                   1717 ; ---------------------------------
      0005EE                       1718 _SetupBlock::
      0005EE 3B               [ 8] 1719 	dec	sp
      0005EF 3B               [ 8] 1720 	dec	sp
                           0005F0  1721 	C$main.c$119$1_0$186	= .
                                   1722 	.globl	C$main.c$119$1_0$186
                                   1723 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:119: set_sprite_data(BirdSprite_tileset_size + 1, 4, blocksprite_tileset);
      0005F0 11r00r00         [12] 1724 	ld	de, #_blocksprite_tileset
      0005F3 D5               [16] 1725 	push	de
      0005F4 21 27 04         [12] 1726 	ld	hl, #0x427
      0005F7 E5               [16] 1727 	push	hl
      0005F8 CDr00r00         [24] 1728 	call	_set_sprite_data
      0005FB E8 04            [16] 1729 	add	sp, #4
                           0005FD  1730 	C$main.c$121$2_0$186	= .
                                   1731 	.globl	C$main.c$121$2_0$186
                                   1732 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0005FD 06 00            [ 8] 1733 	ld	b, #0x00
      0005FF                       1734 00111$:
                                   1735 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:123: set_sprite_tile(i * blockOffset + 4, 39); 
      0005FF 78               [ 4] 1736 	ld	a,b
      000600 FE 04            [ 8] 1737 	cp	a,#0x04
      000602 D2r9Fr06         [16] 1738 	jp	NC,00113$
      000605 87               [ 4] 1739 	add	a, a
      000606 87               [ 4] 1740 	add	a, a
      000607 4F               [ 4] 1741 	ld	c, a
      000608 59               [ 4] 1742 	ld	e, c
      000609 1C               [ 4] 1743 	inc	e
      00060A 1C               [ 4] 1744 	inc	e
      00060B 1C               [ 4] 1745 	inc	e
      00060C 1C               [ 4] 1746 	inc	e
                                   1747 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00060D 6B               [ 4] 1748 	ld	l, e
                                   1749 ;	spillPairReg hl
                                   1750 ;	spillPairReg hl
      00060E 26 00            [ 8] 1751 	ld	h, #0x00
                                   1752 ;	spillPairReg hl
                                   1753 ;	spillPairReg hl
      000610 29               [ 8] 1754 	add	hl, hl
      000611 29               [ 8] 1755 	add	hl, hl
      000612 3Er00            [ 8] 1756 	ld	a, #<(_shadow_OAM)
      000614 85               [ 4] 1757 	add	a, l
      000615 6F               [ 4] 1758 	ld	l, a
                                   1759 ;	spillPairReg hl
                                   1760 ;	spillPairReg hl
      000616 3Es00            [ 8] 1761 	ld	a, #>(_shadow_OAM)
      000618 8C               [ 4] 1762 	adc	a, h
      000619 67               [ 4] 1763 	ld	h, a
                                   1764 ;	spillPairReg hl
                                   1765 ;	spillPairReg hl
      00061A 23               [ 8] 1766 	inc	hl
      00061B 23               [ 8] 1767 	inc	hl
      00061C 36 27            [12] 1768 	ld	(hl), #0x27
                                   1769 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:124: set_sprite_tile(i * blockOffset + 5, 40); 
      00061E 79               [ 4] 1770 	ld	a, c
      00061F C6 05            [ 8] 1771 	add	a, #0x05
      000621 F8 00            [12] 1772 	ldhl	sp,	#0
      000623 77               [ 8] 1773 	ld	(hl), a
                                   1774 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000624 6E               [ 8] 1775 	ld	l, (hl)
                                   1776 ;	spillPairReg hl
                                   1777 ;	spillPairReg hl
      000625 26 00            [ 8] 1778 	ld	h, #0x00
                                   1779 ;	spillPairReg hl
                                   1780 ;	spillPairReg hl
      000627 29               [ 8] 1781 	add	hl, hl
      000628 29               [ 8] 1782 	add	hl, hl
      000629 3Er00            [ 8] 1783 	ld	a, #<(_shadow_OAM)
      00062B 85               [ 4] 1784 	add	a, l
      00062C 6F               [ 4] 1785 	ld	l, a
                                   1786 ;	spillPairReg hl
                                   1787 ;	spillPairReg hl
      00062D 3Es00            [ 8] 1788 	ld	a, #>(_shadow_OAM)
      00062F 8C               [ 4] 1789 	adc	a, h
      000630 67               [ 4] 1790 	ld	h, a
                                   1791 ;	spillPairReg hl
                                   1792 ;	spillPairReg hl
      000631 23               [ 8] 1793 	inc	hl
      000632 23               [ 8] 1794 	inc	hl
      000633 36 28            [12] 1795 	ld	(hl), #0x28
                                   1796 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:125: set_sprite_tile(i * blockOffset + 6, 41); 
      000635 79               [ 4] 1797 	ld	a, c
      000636 C6 06            [ 8] 1798 	add	a, #0x06
      000638 F8 01            [12] 1799 	ldhl	sp,	#1
      00063A 77               [ 8] 1800 	ld	(hl), a
      00063B 56               [ 8] 1801 	ld	d, (hl)
                                   1802 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00063C 6A               [ 4] 1803 	ld	l, d
                                   1804 ;	spillPairReg hl
                                   1805 ;	spillPairReg hl
      00063D 26 00            [ 8] 1806 	ld	h, #0x00
                                   1807 ;	spillPairReg hl
                                   1808 ;	spillPairReg hl
      00063F 29               [ 8] 1809 	add	hl, hl
      000640 29               [ 8] 1810 	add	hl, hl
      000641 D5               [16] 1811 	push	de
      000642 11r00r00         [12] 1812 	ld	de, #_shadow_OAM
      000645 19               [ 8] 1813 	add	hl, de
      000646 23               [ 8] 1814 	inc	hl
      000647 23               [ 8] 1815 	inc	hl
      000648 D1               [12] 1816 	pop	de
      000649 36 29            [12] 1817 	ld	(hl), #0x29
                                   1818 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:126: set_sprite_tile(i * blockOffset + 7, 42); 
      00064B 79               [ 4] 1819 	ld	a, c
      00064C C6 07            [ 8] 1820 	add	a, #0x07
      00064E 4F               [ 4] 1821 	ld	c, a
      00064F 51               [ 4] 1822 	ld	d, c
                                   1823 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000650 6A               [ 4] 1824 	ld	l, d
                                   1825 ;	spillPairReg hl
                                   1826 ;	spillPairReg hl
      000651 26 00            [ 8] 1827 	ld	h, #0x00
                                   1828 ;	spillPairReg hl
                                   1829 ;	spillPairReg hl
      000653 29               [ 8] 1830 	add	hl, hl
      000654 29               [ 8] 1831 	add	hl, hl
      000655 D5               [16] 1832 	push	de
      000656 11r00r00         [12] 1833 	ld	de, #_shadow_OAM
      000659 19               [ 8] 1834 	add	hl, de
      00065A 23               [ 8] 1835 	inc	hl
      00065B 23               [ 8] 1836 	inc	hl
      00065C D1               [12] 1837 	pop	de
      00065D 36 2A            [12] 1838 	ld	(hl), #0x2a
                                   1839 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:128: move_sprite(i * blockOffset +4, 30, 30);
                                   1840 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00065F 6B               [ 4] 1841 	ld	l, e
                                   1842 ;	spillPairReg hl
                                   1843 ;	spillPairReg hl
      000660 26 00            [ 8] 1844 	ld	h, #0x00
                                   1845 ;	spillPairReg hl
                                   1846 ;	spillPairReg hl
      000662 29               [ 8] 1847 	add	hl, hl
      000663 29               [ 8] 1848 	add	hl, hl
      000664 11r00r00         [12] 1849 	ld	de, #_shadow_OAM
      000667 19               [ 8] 1850 	add	hl, de
                                   1851 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000668 3E 1E            [ 8] 1852 	ld	a, #0x1e
      00066A 22               [ 8] 1853 	ld	(hl+), a
      00066B 36 1E            [12] 1854 	ld	(hl), #0x1e
                                   1855 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:129: move_sprite(i * blockOffset +5, 30, 38);
      00066D F8 00            [12] 1856 	ldhl	sp,	#0
                                   1857 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00066F 6E               [ 8] 1858 	ld	l, (hl)
                                   1859 ;	spillPairReg hl
                                   1860 ;	spillPairReg hl
      000670 26 00            [ 8] 1861 	ld	h, #0x00
                                   1862 ;	spillPairReg hl
                                   1863 ;	spillPairReg hl
      000672 29               [ 8] 1864 	add	hl, hl
      000673 29               [ 8] 1865 	add	hl, hl
      000674 11r00r00         [12] 1866 	ld	de, #_shadow_OAM
      000677 19               [ 8] 1867 	add	hl, de
                                   1868 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000678 3E 26            [ 8] 1869 	ld	a, #0x26
      00067A 22               [ 8] 1870 	ld	(hl+), a
      00067B 36 1E            [12] 1871 	ld	(hl), #0x1e
                                   1872 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:130: move_sprite(i * blockOffset +6, 38, 30);
      00067D F8 01            [12] 1873 	ldhl	sp,	#1
                                   1874 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00067F 6E               [ 8] 1875 	ld	l, (hl)
                                   1876 ;	spillPairReg hl
                                   1877 ;	spillPairReg hl
      000680 26 00            [ 8] 1878 	ld	h, #0x00
                                   1879 ;	spillPairReg hl
                                   1880 ;	spillPairReg hl
      000682 29               [ 8] 1881 	add	hl, hl
      000683 29               [ 8] 1882 	add	hl, hl
      000684 11r00r00         [12] 1883 	ld	de, #_shadow_OAM
      000687 19               [ 8] 1884 	add	hl, de
                                   1885 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000688 3E 1E            [ 8] 1886 	ld	a, #0x1e
      00068A 22               [ 8] 1887 	ld	(hl+), a
      00068B 36 26            [12] 1888 	ld	(hl), #0x26
                                   1889 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:131: move_sprite(i * blockOffset +7, 38, 38);
                                   1890 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00068D 69               [ 4] 1891 	ld	l, c
                                   1892 ;	spillPairReg hl
                                   1893 ;	spillPairReg hl
      00068E 26 00            [ 8] 1894 	ld	h, #0x00
                                   1895 ;	spillPairReg hl
                                   1896 ;	spillPairReg hl
      000690 29               [ 8] 1897 	add	hl, hl
      000691 29               [ 8] 1898 	add	hl, hl
      000692 11r00r00         [12] 1899 	ld	de, #_shadow_OAM
      000695 19               [ 8] 1900 	add	hl, de
                                   1901 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000696 3E 26            [ 8] 1902 	ld	a, #0x26
      000698 22               [ 8] 1903 	ld	(hl+), a
      000699 36 26            [12] 1904 	ld	(hl), #0x26
                           00069B  1905 	C$main.c$121$2_0$187	= .
                                   1906 	.globl	C$main.c$121$2_0$187
                                   1907 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      00069B 04               [ 4] 1908 	inc	b
      00069C C3rFFr05         [16] 1909 	jp	00111$
      00069F                       1910 00113$:
                           00069F  1911 	C$main.c$133$2_0$186	= .
                                   1912 	.globl	C$main.c$133$2_0$186
                                   1913 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:133: }
      00069F 33               [ 8] 1914 	inc	sp
      0006A0 33               [ 8] 1915 	inc	sp
                           0006A1  1916 	C$main.c$133$2_0$186	= .
                                   1917 	.globl	C$main.c$133$2_0$186
                           0006A1  1918 	XG$SetupBlock$0$0	= .
                                   1919 	.globl	XG$SetupBlock$0$0
      0006A1 C9               [16] 1920 	ret
                           0006A2  1921 	G$main$0$0	= .
                                   1922 	.globl	G$main$0$0
                           0006A2  1923 	C$main.c$135$2_0$214	= .
                                   1924 	.globl	C$main.c$135$2_0$214
                                   1925 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:135: void main(void)
                                   1926 ;	---------------------------------
                                   1927 ; Function main
                                   1928 ; ---------------------------------
      0006A2                       1929 _main::
      0006A2 3B               [ 8] 1930 	dec	sp
                           0006A3  1931 	C$main.c$137$1_0$214	= .
                                   1932 	.globl	C$main.c$137$1_0$214
                                   1933 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:137: SetupBackGround();
      0006A3 CDrD0r03         [24] 1934 	call	_SetupBackGround
                           0006A6  1935 	C$main.c$139$1_0$214	= .
                                   1936 	.globl	C$main.c$139$1_0$214
                                   1937 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:139: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      0006A6 11r00r00         [12] 1938 	ld	de, #_BirdSprite_tileset
      0006A9 D5               [16] 1939 	push	de
      0006AA 21 00 26         [12] 1940 	ld	hl, #0x2600
      0006AD E5               [16] 1941 	push	hl
      0006AE CDr00r00         [24] 1942 	call	_set_sprite_data
      0006B1 E8 04            [16] 1943 	add	sp, #4
                           0006B3  1944 	C$main.c$141$1_0$214	= .
                                   1945 	.globl	C$main.c$141$1_0$214
                                   1946 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:141: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      0006B3 11r00r00         [12] 1947 	ld	de, #_BirdSprite_tilemap
      0006B6 D5               [16] 1948 	push	de
      0006B7 3E 08            [ 8] 1949 	ld	a, #0x08
      0006B9 F5               [16] 1950 	push	af
      0006BA 33               [ 8] 1951 	inc	sp
      0006BB AF               [ 4] 1952 	xor	a, a
      0006BC 67               [ 4] 1953 	ld	h, a
      0006BD 2E 02            [ 8] 1954 	ld	l, #0x02
      0006BF E5               [16] 1955 	push	hl
      0006C0 3E 02            [ 8] 1956 	ld	a, #0x02
      0006C2 F5               [16] 1957 	push	af
      0006C3 33               [ 8] 1958 	inc	sp
      0006C4 AF               [ 4] 1959 	xor	a, a
      0006C5 11r00r00         [12] 1960 	ld	de, #_player
      0006C8 CDr64r03         [24] 1961 	call	_SetupCharacter
                           0006CB  1962 	C$main.c$143$1_0$214	= .
                                   1963 	.globl	C$main.c$143$1_0$214
                                   1964 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:143: MoveCharacter(&player, 16, 56);
      0006CB 3E 38            [ 8] 1965 	ld	a, #0x38
      0006CD F5               [16] 1966 	push	af
      0006CE 33               [ 8] 1967 	inc	sp
      0006CF 3E 10            [ 8] 1968 	ld	a, #0x10
      0006D1 11r00r00         [12] 1969 	ld	de, #_player
      0006D4 CDr05r02         [24] 1970 	call	_MoveCharacter
                           0006D7  1971 	C$main.c$145$1_0$214	= .
                                   1972 	.globl	C$main.c$145$1_0$214
                                   1973 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:145: SetupBlock();
      0006D7 CDrEEr05         [24] 1974 	call	_SetupBlock
                           0006DA  1975 	C$main.c$147$1_0$214	= .
                                   1976 	.globl	C$main.c$147$1_0$214
                                   1977 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:147: SHOW_BKG;
      0006DA F0r00            [12] 1978 	ldh	a, (_LCDC_REG + 0)
      0006DC F6 01            [ 8] 1979 	or	a, #0x01
      0006DE E0r00            [12] 1980 	ldh	(_LCDC_REG + 0), a
                           0006E0  1981 	C$main.c$148$1_0$214	= .
                                   1982 	.globl	C$main.c$148$1_0$214
                                   1983 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:148: SHOW_SPRITES;
      0006E0 F0r00            [12] 1984 	ldh	a, (_LCDC_REG + 0)
      0006E2 F6 02            [ 8] 1985 	or	a, #0x02
      0006E4 E0r00            [12] 1986 	ldh	(_LCDC_REG + 0), a
                           0006E6  1987 	C$main.c$149$1_0$214	= .
                                   1988 	.globl	C$main.c$149$1_0$214
                                   1989 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:149: DISPLAY_ON;
      0006E6 F0r00            [12] 1990 	ldh	a, (_LCDC_REG + 0)
      0006E8 F6 80            [ 8] 1991 	or	a, #0x80
      0006EA E0r00            [12] 1992 	ldh	(_LCDC_REG + 0), a
                           0006EC  1993 	C$main.c$151$2_0$215	= .
                                   1994 	.globl	C$main.c$151$2_0$215
                                   1995 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:151: BOOLEAN gameLoop = 1;
      0006EC F8 00            [12] 1996 	ldhl	sp,	#0
      0006EE 36 01            [12] 1997 	ld	(hl), #0x01
                           0006F0  1998 	C$main.c$153$2_1$216	= .
                                   1999 	.globl	C$main.c$153$2_1$216
                                   2000 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:153: while(gameLoop)
      0006F0                       2001 00103$:
      0006F0 F8 00            [12] 2002 	ldhl	sp,	#0
      0006F2 7E               [ 8] 2003 	ld	a, (hl)
      0006F3 B7               [ 4] 2004 	or	a, a
      0006F4 28 45            [12] 2005 	jr	Z, 00105$
                           0006F6  2006 	C$main.c$155$2_1$216	= .
                                   2007 	.globl	C$main.c$155$2_1$216
                                   2008 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:155: player.underfootState = player.y >= GLOUND_LEVEL ? FOOT_ON_LAND : FOOT_IN_AIR;
      0006F6 FAr07r00         [16] 2009 	ld	a, (#(_player + 7) + 0)
      0006F9 D6 82            [ 8] 2010 	sub	a, #0x82
      0006FB 38 04            [12] 2011 	jr	C, 00109$
      0006FD 3E 01            [ 8] 2012 	ld	a, #0x01
      0006FF 18 02            [12] 2013 	jr	00110$
      000701                       2014 00109$:
      000701 3E 02            [ 8] 2015 	ld	a, #0x02
      000703                       2016 00110$:
      000703 EAr0Er00         [16] 2017 	ld	(#(_player + 14)),a
                           000706  2018 	C$main.c$156$2_1$216	= .
                                   2019 	.globl	C$main.c$156$2_1$216
                                   2020 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:156: MoveCharacterWithJoypad(&player);
      000706 11r00r00         [12] 2021 	ld	de, #_player
      000709 CDrD6r02         [24] 2022 	call	_MoveCharacterWithJoypad
                           00070C  2023 	C$main.c$157$2_1$216	= .
                                   2024 	.globl	C$main.c$157$2_1$216
                                   2025 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:157: MovementPhysics(&player, 3);
      00070C 3E 03            [ 8] 2026 	ld	a, #0x03
      00070E 11r00r00         [12] 2027 	ld	de, #_player
      000711 CDr15r04         [24] 2028 	call	_MovementPhysics
                           000714  2029 	C$main.c$158$2_1$216	= .
                                   2030 	.globl	C$main.c$158$2_1$216
                                   2031 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:158: LoadNextSpriteFrame(&player);
      000714 11r00r00         [12] 2032 	ld	de, #_player
      000717 CDrB3r01         [24] 2033 	call	_LoadNextSpriteFrame
                                   2034 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1392: SCX_REG+=x, SCY_REG+=y;
      00071A F0r00            [12] 2035 	ldh	a, (_SCX_REG + 0)
      00071C 3C               [ 4] 2036 	inc	a
      00071D E0r00            [12] 2037 	ldh	(_SCX_REG + 0), a
                           00071F  2038 	C$main.c$162$2_1$216	= .
                                   2039 	.globl	C$main.c$162$2_1$216
                                   2040 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:162: if(Hit(player.x, player.y, 0, 0))
      00071F 21r07r00         [12] 2041 	ld	hl, #(_player + 7)
      000722 4E               [ 8] 2042 	ld	c, (hl)
      000723 21r06r00         [12] 2043 	ld	hl, #(_player + 6)
      000726 46               [ 8] 2044 	ld	b, (hl)
      000727 AF               [ 4] 2045 	xor	a, a
      000728 0F               [ 4] 2046 	rrca
      000729 F5               [16] 2047 	push	af
      00072A 59               [ 4] 2048 	ld	e, c
      00072B 78               [ 4] 2049 	ld	a, b
      00072C CDr31r05         [24] 2050 	call	_Hit
      00072F B7               [ 4] 2051 	or	a, a
      000730 28 04            [12] 2052 	jr	Z, 00102$
                           000732  2053 	C$main.c$164$3_1$217	= .
                                   2054 	.globl	C$main.c$164$3_1$217
                                   2055 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:164: gameLoop= 0;
      000732 F8 00            [12] 2056 	ldhl	sp,	#0
      000734 36 00            [12] 2057 	ld	(hl), #0x00
      000736                       2058 00102$:
                           000736  2059 	C$main.c$166$2_1$216	= .
                                   2060 	.globl	C$main.c$166$2_1$216
                                   2061 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:166: wait_vbl_done();
      000736 CDr00r00         [24] 2062 	call	_wait_vbl_done
      000739 18 B5            [12] 2063 	jr	00103$
      00073B                       2064 00105$:
                           00073B  2065 	C$main.c$168$1_1$215	= .
                                   2066 	.globl	C$main.c$168$1_1$215
                                   2067 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:168: printf("GameOver");
      00073B 11r45r07         [12] 2068 	ld	de, #___str_0
      00073E D5               [16] 2069 	push	de
      00073F CDr00r00         [24] 2070 	call	_printf
      000742 E1               [12] 2071 	pop	hl
                           000743  2072 	C$main.c$169$1_1$214	= .
                                   2073 	.globl	C$main.c$169$1_1$214
                                   2074 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:169: }
      000743 33               [ 8] 2075 	inc	sp
                           000744  2076 	C$main.c$169$1_1$214	= .
                                   2077 	.globl	C$main.c$169$1_1$214
                           000744  2078 	XG$main$0$0	= .
                                   2079 	.globl	XG$main$0$0
      000744 C9               [16] 2080 	ret
                           000745  2081 Fmain$__str_0$0_0$0 == .
      000745                       2082 ___str_0:
      000745 47 61 6D 65 4F 76 65  2083 	.ascii "GameOver"
             72
      00074D 00                    2084 	.db 0x00
                                   2085 	.area _CODE
                                   2086 	.area _INITIALIZER
                           000000  2087 Fmain$__xinit_movementFrameCount$0_0$0 == .
      000000                       2088 __xinit__movementFrameCount:
      000000 00                    2089 	.db #0x00	; 0
                           000001  2090 Fmain$__xinit_animationFrameCount$0_0$0 == .
      000001                       2091 __xinit__animationFrameCount:
      000001 00                    2092 	.db #0x00	; 0
                           000002  2093 Fmain$__xinit_jumpFrameCount$0_0$0 == .
      000002                       2094 __xinit__jumpFrameCount:
      000002 00                    2095 	.db #0x00	; 0
                           000003  2096 Fmain$__xinit_lastMovementX$0_0$0 == .
      000003                       2097 __xinit__lastMovementX:
      000003 00                    2098 	.db #0x00	;  0
                           000004  2099 Fmain$__xinit_lastMovementY$0_0$0 == .
      000004                       2100 __xinit__lastMovementY:
      000004 00                    2101 	.db #0x00	;  0
                           000005  2102 Fmain$__xinit_slowingX$0_0$0 == .
      000005                       2103 __xinit__slowingX:
      000005 00                    2104 	.db #0x00	;  0
                                   2105 	.area _CABS (ABS)
