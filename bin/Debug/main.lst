                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _set_bkg_data
                                     15 	.globl _wait_vbl_done
                                     16 	.globl _joypad
                                     17 	.globl _showTitle
                                     18 ;--------------------------------------------------------
                                     19 ; special function registers
                                     20 ;--------------------------------------------------------
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _DATA
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _INITIALIZED
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                           000000    49 	G$showTitle$0$0	= .
                                     50 	.globl	G$showTitle$0$0
                           000000    51 	C$main.c$7$0_0$131	= .
                                     52 	.globl	C$main.c$7$0_0$131
                                     53 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:7: void showTitle(void)
                                     54 ;	---------------------------------
                                     55 ; Function showTitle
                                     56 ; ---------------------------------
      000000                         57 _showTitle::
                           000000    58 	C$main.c$10$1_0$131	= .
                                     59 	.globl	C$main.c$10$1_0$131
                                     60 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:10: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      000000 11r00r00         [12]   61 	ld	de, #_SplashScreenSprite_tileset
      000003 D5               [16]   62 	push	de
      000004 21 00 C8         [12]   63 	ld	hl, #0xc800
      000007 E5               [16]   64 	push	hl
      000008 CDr00r00         [24]   65 	call	_set_bkg_data
      00000B E8 04            [16]   66 	add	sp, #4
                           00000D    67 	C$main.c$13$1_0$131	= .
                                     68 	.globl	C$main.c$13$1_0$131
                                     69 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:13: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      00000D 11r00r00         [12]   70 	ld	de, #_SplashScreenSprite_tilemap
      000010 D5               [16]   71 	push	de
      000011 21 14 12         [12]   72 	ld	hl, #0x1214
      000014 E5               [16]   73 	push	hl
      000015 AF               [ 4]   74 	xor	a, a
      000016 0F               [ 4]   75 	rrca
      000017 F5               [16]   76 	push	af
      000018 CDr00r00         [24]   77 	call	_set_bkg_tiles
      00001B E8 06            [16]   78 	add	sp, #6
                           00001D    79 	C$main.c$16$1_0$131	= .
                                     80 	.globl	C$main.c$16$1_0$131
                                     81 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:16: SHOW_BKG;
      00001D F0r00            [12]   82 	ldh	a, (_LCDC_REG + 0)
      00001F F6 01            [ 8]   83 	or	a, #0x01
      000021 E0r00            [12]   84 	ldh	(_LCDC_REG + 0), a
                           000023    85 	C$main.c$17$1_0$131	= .
                                     86 	.globl	C$main.c$17$1_0$131
                                     87 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:17: DISPLAY_ON;
      000023 F0r00            [12]   88 	ldh	a, (_LCDC_REG + 0)
      000025 F6 80            [ 8]   89 	or	a, #0x80
      000027 E0r00            [12]   90 	ldh	(_LCDC_REG + 0), a
                           000029    91 	C$main.c$18$1_0$131	= .
                                     92 	.globl	C$main.c$18$1_0$131
                                     93 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:18: }
                           000029    94 	C$main.c$18$1_0$131	= .
                                     95 	.globl	C$main.c$18$1_0$131
                           000029    96 	XG$showTitle$0$0	= .
                                     97 	.globl	XG$showTitle$0$0
      000029 C9               [16]   98 	ret
                           00002A    99 	G$main$0$0	= .
                                    100 	.globl	G$main$0$0
                           00002A   101 	C$main.c$20$1_0$133	= .
                                    102 	.globl	C$main.c$20$1_0$133
                                    103 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:20: void main(void)
                                    104 ;	---------------------------------
                                    105 ; Function main
                                    106 ; ---------------------------------
      00002A                        107 _main::
                           00002A   108 	C$main.c$22$1_0$133	= .
                                    109 	.globl	C$main.c$22$1_0$133
                                    110 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:22: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      00002A 11r00r00         [12]  111 	ld	de, #_BirdSprite_tileset
      00002D D5               [16]  112 	push	de
      00002E 21 00 26         [12]  113 	ld	hl, #0x2600
      000031 E5               [16]  114 	push	hl
      000032 CDr00r00         [24]  115 	call	_set_sprite_data
      000035 E8 04            [16]  116 	add	sp, #4
                                    117 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:23: for(uint8_t i = 0; i < 16; i++)
      000037 0E 00            [ 8]  118 	ld	c, #0x00
      000039                        119 00125$:
      000039 79               [ 4]  120 	ld	a, c
      00003A D6 10            [ 8]  121 	sub	a, #0x10
      00003C 30 19            [12]  122 	jr	NC, 00101$
                                    123 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:25: set_sprite_tile(i, BirdSprite_tilemap[i]);
      00003E 21r00r00         [12]  124 	ld	hl, #_BirdSprite_tilemap
      000041 06 00            [ 8]  125 	ld	b, #0x00
      000043 09               [ 8]  126 	add	hl, bc
      000044 46               [ 8]  127 	ld	b, (hl)
                                    128 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000045 11r00r00         [12]  129 	ld	de, #_shadow_OAM+0
      000048 69               [ 4]  130 	ld	l, c
                                    131 ;	spillPairReg hl
                                    132 ;	spillPairReg hl
      000049 26 00            [ 8]  133 	ld	h, #0x00
                                    134 ;	spillPairReg hl
                                    135 ;	spillPairReg hl
      00004B 29               [ 8]  136 	add	hl, hl
      00004C 29               [ 8]  137 	add	hl, hl
      00004D 19               [ 8]  138 	add	hl, de
      00004E 23               [ 8]  139 	inc	hl
      00004F 23               [ 8]  140 	inc	hl
      000050 5D               [ 4]  141 	ld	e, l
      000051 54               [ 4]  142 	ld	d, h
      000052 78               [ 4]  143 	ld	a, b
      000053 12               [ 8]  144 	ld	(de), a
                           000054   145 	C$main.c$23$2_0$134	= .
                                    146 	.globl	C$main.c$23$2_0$134
                                    147 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:23: for(uint8_t i = 0; i < 16; i++)
      000054 0C               [ 4]  148 	inc	c
      000055 18 E2            [12]  149 	jr	00125$
      000057                        150 00101$:
                                    151 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000057 21r00r00         [12]  152 	ld	hl, #_shadow_OAM
                                    153 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00005A 3E 10            [ 8]  154 	ld	a, #0x10
      00005C 22               [ 8]  155 	ld	(hl+), a
      00005D 36 08            [12]  156 	ld	(hl), #0x08
                                    157 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00005F 21r04r00         [12]  158 	ld	hl, #(_shadow_OAM + 4)
                                    159 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000062 3E 10            [ 8]  160 	ld	a, #0x10
      000064 22               [ 8]  161 	ld	(hl+), a
      000065 36 10            [12]  162 	ld	(hl), #0x10
                                    163 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000067 21r10r00         [12]  164 	ld	hl, #(_shadow_OAM + 16)
                                    165 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00006A 3E 18            [ 8]  166 	ld	a, #0x18
      00006C 22               [ 8]  167 	ld	(hl+), a
      00006D 36 08            [12]  168 	ld	(hl), #0x08
                                    169 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00006F 21r14r00         [12]  170 	ld	hl, #(_shadow_OAM + 20)
                                    171 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000072 3E 18            [ 8]  172 	ld	a, #0x18
      000074 22               [ 8]  173 	ld	(hl+), a
      000075 36 10            [12]  174 	ld	(hl), #0x10
                           000077   175 	C$main.c$33$1_0$133	= .
                                    176 	.globl	C$main.c$33$1_0$133
                                    177 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:33: SHOW_BKG;
      000077 F0r00            [12]  178 	ldh	a, (_LCDC_REG + 0)
      000079 F6 01            [ 8]  179 	or	a, #0x01
      00007B E0r00            [12]  180 	ldh	(_LCDC_REG + 0), a
                           00007D   181 	C$main.c$34$1_0$133	= .
                                    182 	.globl	C$main.c$34$1_0$133
                                    183 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:34: SHOW_SPRITES;
      00007D F0r00            [12]  184 	ldh	a, (_LCDC_REG + 0)
      00007F F6 02            [ 8]  185 	or	a, #0x02
      000081 E0r00            [12]  186 	ldh	(_LCDC_REG + 0), a
                           000083   187 	C$main.c$35$1_0$133	= .
                                    188 	.globl	C$main.c$35$1_0$133
                                    189 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:35: DISPLAY_ON;
      000083 F0r00            [12]  190 	ldh	a, (_LCDC_REG + 0)
      000085 F6 80            [ 8]  191 	or	a, #0x80
      000087 E0r00            [12]  192 	ldh	(_LCDC_REG + 0), a
                           000089   193 	C$main.c$37$1_0$133	= .
                                    194 	.globl	C$main.c$37$1_0$133
                                    195 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:37: while(1)
      000089                        196 00113$:
                           000089   197 	C$main.c$39$2_0$136	= .
                                    198 	.globl	C$main.c$39$2_0$136
                                    199 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:39: uint8_t buttons = joypad();
      000089 CDr00r00         [24]  200 	call	_joypad
                           00008C   201 	C$main.c$40$2_0$136	= .
                                    202 	.globl	C$main.c$40$2_0$136
                                    203 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:40: uint8_t moveX = 0;
                           00008C   204 	C$main.c$41$2_0$136	= .
                                    205 	.globl	C$main.c$41$2_0$136
                                    206 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:41: uint8_t moveY = 0;
      00008C 0E 00            [ 8]  207 	ld	c, #0x00
      00008E 59               [ 4]  208 	ld	e, c
                           00008F   209 	C$main.c$43$2_0$136	= .
                                    210 	.globl	C$main.c$43$2_0$136
                                    211 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:43: if(buttons & J_LEFT)
      00008F CB 4F            [ 8]  212 	bit	1, a
      000091 28 04            [12]  213 	jr	Z, 00105$
                           000093   214 	C$main.c$45$3_0$137	= .
                                    215 	.globl	C$main.c$45$3_0$137
                                    216 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:45: moveX = -1;
      000093 0E FF            [ 8]  217 	ld	c, #0xff
      000095 18 06            [12]  218 	jr	00106$
      000097                        219 00105$:
                           000097   220 	C$main.c$47$2_0$136	= .
                                    221 	.globl	C$main.c$47$2_0$136
                                    222 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: else if(buttons & J_RIGHT)
      000097 CB 47            [ 8]  223 	bit	0, a
      000099 28 02            [12]  224 	jr	Z, 00106$
                           00009B   225 	C$main.c$49$3_0$138	= .
                                    226 	.globl	C$main.c$49$3_0$138
                                    227 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: moveX = 1;
      00009B 0E 01            [ 8]  228 	ld	c, #0x01
      00009D                        229 00106$:
                           00009D   230 	C$main.c$52$2_0$136	= .
                                    231 	.globl	C$main.c$52$2_0$136
                                    232 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:52: if(buttons & J_UP)
      00009D CB 57            [ 8]  233 	bit	2, a
      00009F 28 04            [12]  234 	jr	Z, 00110$
                           0000A1   235 	C$main.c$54$3_0$139	= .
                                    236 	.globl	C$main.c$54$3_0$139
                                    237 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:54: moveY = -1;
      0000A1 1E FF            [ 8]  238 	ld	e, #0xff
      0000A3 18 06            [12]  239 	jr	00111$
      0000A5                        240 00110$:
                           0000A5   241 	C$main.c$56$2_0$136	= .
                                    242 	.globl	C$main.c$56$2_0$136
                                    243 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:56: else if(buttons & J_DOWN)
      0000A5 CB 5F            [ 8]  244 	bit	3, a
      0000A7 28 02            [12]  245 	jr	Z, 00111$
                           0000A9   246 	C$main.c$58$3_0$140	= .
                                    247 	.globl	C$main.c$58$3_0$140
                                    248 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:58: moveY = 1;
      0000A9 1E 01            [ 8]  249 	ld	e, #0x01
      0000AB                        250 00111$:
                                    251 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0000AB 21r00r00         [12]  252 	ld	hl, #_shadow_OAM
                                    253 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0000AE 7E               [ 8]  254 	ld	a, (hl)
      0000AF 83               [ 4]  255 	add	a, e
      0000B0 22               [ 8]  256 	ld	(hl+), a
      0000B1 7E               [ 8]  257 	ld	a, (hl)
      0000B2 81               [ 4]  258 	add	a, c
      0000B3 77               [ 8]  259 	ld	(hl), a
                                    260 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0000B4 21r04r00         [12]  261 	ld	hl, #(_shadow_OAM + 4)
                                    262 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0000B7 7E               [ 8]  263 	ld	a, (hl)
      0000B8 83               [ 4]  264 	add	a, e
      0000B9 22               [ 8]  265 	ld	(hl+), a
      0000BA 7E               [ 8]  266 	ld	a, (hl)
      0000BB 81               [ 4]  267 	add	a, c
      0000BC 77               [ 8]  268 	ld	(hl), a
                                    269 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0000BD 21r10r00         [12]  270 	ld	hl, #(_shadow_OAM + 16)
                                    271 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0000C0 7E               [ 8]  272 	ld	a, (hl)
      0000C1 83               [ 4]  273 	add	a, e
      0000C2 22               [ 8]  274 	ld	(hl+), a
      0000C3 7E               [ 8]  275 	ld	a, (hl)
      0000C4 81               [ 4]  276 	add	a, c
      0000C5 77               [ 8]  277 	ld	(hl), a
                                    278 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      0000C6 21r14r00         [12]  279 	ld	hl, #(_shadow_OAM + 20)
                                    280 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      0000C9 7E               [ 8]  281 	ld	a, (hl)
      0000CA 83               [ 4]  282 	add	a, e
      0000CB 22               [ 8]  283 	ld	(hl+), a
      0000CC 7E               [ 8]  284 	ld	a, (hl)
      0000CD 81               [ 4]  285 	add	a, c
      0000CE 77               [ 8]  286 	ld	(hl), a
                           0000CF   287 	C$main.c$65$2_0$136	= .
                                    288 	.globl	C$main.c$65$2_0$136
                                    289 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:65: wait_vbl_done();
      0000CF CDr00r00         [24]  290 	call	_wait_vbl_done
                           0000D2   291 	C$main.c$67$1_0$133	= .
                                    292 	.globl	C$main.c$67$1_0$133
                                    293 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:67: }
                           0000D2   294 	C$main.c$67$1_0$133	= .
                                    295 	.globl	C$main.c$67$1_0$133
                           0000D2   296 	XG$main$0$0	= .
                                    297 	.globl	XG$main$0$0
      0000D2 18 B5            [12]  298 	jr	00113$
                                    299 	.area _CODE
                                    300 	.area _INITIALIZER
                                    301 	.area _CABS (ABS)
