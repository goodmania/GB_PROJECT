                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _MovementPhysics
                                     13 	.globl _DetectCollisions
                                     14 	.globl _SetupCharacter
                                     15 	.globl _MoveCharacterWithJoypad
                                     16 	.globl _ScrollCharacter
                                     17 	.globl _MoveCharacter
                                     18 	.globl _SetSpriteFlip
                                     19 	.globl _LoadNextSpriteFrame
                                     20 	.globl _RefreshSprite
                                     21 	.globl _LoadSpriteFrame
                                     22 	.globl _set_sprite_data
                                     23 	.globl _set_bkg_tiles
                                     24 	.globl _set_bkg_data
                                     25 	.globl _wait_vbl_done
                                     26 	.globl _joypad
                                     27 	.globl _slowingX
                                     28 	.globl _lastMovementY
                                     29 	.globl _lastMovementX
                                     30 	.globl _jumpFrameCount
                                     31 	.globl _animationFrameCount
                                     32 	.globl _movementFrameCount
                                     33 	.globl _player
                                     34 	.globl _showTitle
                                     35 	.globl _SetupBackGround
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DATA
                           000000    43 G$player$0_0$0==.
      000000                         44 _player::
      000000                         45 	.ds 19
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _INITIALIZED
                           000000    50 G$movementFrameCount$0_0$0==.
      000000                         51 _movementFrameCount::
      000000                         52 	.ds 1
                           000001    53 G$animationFrameCount$0_0$0==.
      000001                         54 _animationFrameCount::
      000001                         55 	.ds 1
                           000002    56 G$jumpFrameCount$0_0$0==.
      000002                         57 _jumpFrameCount::
      000002                         58 	.ds 1
                           000003    59 G$lastMovementX$0_0$0==.
      000003                         60 _lastMovementX::
      000003                         61 	.ds 1
                           000004    62 G$lastMovementY$0_0$0==.
      000004                         63 _lastMovementY::
      000004                         64 	.ds 1
                           000005    65 G$slowingX$0_0$0==.
      000005                         66 _slowingX::
      000005                         67 	.ds 1
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area _DABS (ABS)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area _HOME
                                     76 	.area _GSINIT
                                     77 	.area _GSFINAL
                                     78 	.area _GSINIT
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area _HOME
                                     83 	.area _HOME
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area _CODE
                           000000    88 	G$LoadSpriteFrame$0$0	= .
                                     89 	.globl	G$LoadSpriteFrame$0$0
                           000000    90 	C$Character.h$68$0_0$130	= .
                                     91 	.globl	C$Character.h$68$0_0$130
                                     92 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:68: void LoadSpriteFrame(Character* character, uint8_t frame)
                                     93 ;	---------------------------------
                                     94 ; Function LoadSpriteFrame
                                     95 ; ---------------------------------
      000000                         96 _LoadSpriteFrame::
      000000 E8 E9            [16]   97 	add	sp, #-23
      000002 F8 13            [12]   98 	ldhl	sp,	#19
      000004 73               [ 8]   99 	ld	(hl), e
      000005 23               [ 8]  100 	inc	hl
      000006 72               [ 8]  101 	ld	(hl), d
                           000007   102 	C$Character.h$70$1_0$130	= .
                                    103 	.globl	C$Character.h$70$1_0$130
                                    104 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:70: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]  105 	dec	hl
      000008 47               [ 4]  106 	ld	b, a
      000009 2A               [ 8]  107 	ld	a, (hl+)
      00000A 5F               [ 4]  108 	ld	e, a
      00000B 56               [ 8]  109 	ld	d, (hl)
      00000C 21 04 00         [12]  110 	ld	hl, #0x0004
      00000F 19               [ 8]  111 	add	hl, de
      000010 5D               [ 4]  112 	ld	e, l
      000011 54               [ 4]  113 	ld	d, h
      000012 78               [ 4]  114 	ld	a, b
      000013 12               [ 8]  115 	ld	(de), a
                           000014   116 	C$Character.h$72$1_1$131	= .
                                    117 	.globl	C$Character.h$72$1_1$131
                                    118 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  119 	ldhl	sp,#19
      000016 2A               [ 8]  120 	ld	a, (hl+)
      000017 5F               [ 4]  121 	ld	e, a
      000018 56               [ 8]  122 	ld	d, (hl)
      000019 6B               [ 4]  123 	ld	l, e
      00001A 62               [ 4]  124 	ld	h, d
      00001B 23               [ 8]  125 	inc	hl
      00001C 33               [ 8]  126 	inc	sp
      00001D 33               [ 8]  127 	inc	sp
      00001E 5D               [ 4]  128 	ld	e, l
      00001F 54               [ 4]  129 	ld	d, h
      000020 D5               [16]  130 	push	de
      000021 1A               [ 8]  131 	ld	a, (de)
      000022 4F               [ 4]  132 	ld	c, a
      000023 F8 13            [12]  133 	ldhl	sp,#19
      000025 2A               [ 8]  134 	ld	a, (hl+)
      000026 5F               [ 4]  135 	ld	e, a
      000027 56               [ 8]  136 	ld	d, (hl)
      000028 21 02 00         [12]  137 	ld	hl, #0x0002
      00002B 19               [ 8]  138 	add	hl, de
      00002C E5               [16]  139 	push	hl
      00002D 7D               [ 4]  140 	ld	a, l
      00002E F8 04            [12]  141 	ldhl	sp,	#4
      000030 77               [ 8]  142 	ld	(hl), a
      000031 E1               [12]  143 	pop	hl
      000032 7C               [ 4]  144 	ld	a, h
      000033 F8 03            [12]  145 	ldhl	sp,	#3
      000035 32               [ 8]  146 	ld	(hl-), a
      000036 2A               [ 8]  147 	ld	a, (hl+)
      000037 5F               [ 4]  148 	ld	e, a
      000038 56               [ 8]  149 	ld	d, (hl)
      000039 1A               [ 8]  150 	ld	a, (de)
      00003A 6F               [ 4]  151 	ld	l, a
                                    152 ;	spillPairReg hl
                                    153 ;	spillPairReg hl
      00003B C5               [16]  154 	push	bc
      00003C 5D               [ 4]  155 	ld	e, l
      00003D 79               [ 4]  156 	ld	a, c
                           00003E   157 	C$Character.h$75$2_1$130	= .
                                    158 	.globl	C$Character.h$75$2_1$130
                                    159 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:75: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  160 	call	__muluchar
      000041 F1               [12]  161 	pop	af
      000042 47               [ 4]  162 	ld	b, a
      000043 F8 13            [12]  163 	ldhl	sp,#19
      000045 2A               [ 8]  164 	ld	a, (hl+)
      000046 5F               [ 4]  165 	ld	e, a
      000047 56               [ 8]  166 	ld	d, (hl)
      000048 21 0A 00         [12]  167 	ld	hl, #0x000a
      00004B 19               [ 8]  168 	add	hl, de
      00004C E5               [16]  169 	push	hl
      00004D 7D               [ 4]  170 	ld	a, l
      00004E F8 06            [12]  171 	ldhl	sp,	#6
      000050 77               [ 8]  172 	ld	(hl), a
      000051 E1               [12]  173 	pop	hl
      000052 7C               [ 4]  174 	ld	a, h
      000053 F8 05            [12]  175 	ldhl	sp,	#5
      000055 77               [ 8]  176 	ld	(hl), a
      000056 F8 13            [12]  177 	ldhl	sp,#19
      000058 2A               [ 8]  178 	ld	a, (hl+)
      000059 5F               [ 4]  179 	ld	e, a
      00005A 56               [ 8]  180 	ld	d, (hl)
      00005B 21 0B 00         [12]  181 	ld	hl, #0x000b
      00005E 19               [ 8]  182 	add	hl, de
      00005F E5               [16]  183 	push	hl
      000060 7D               [ 4]  184 	ld	a, l
      000061 F8 08            [12]  185 	ldhl	sp,	#8
      000063 77               [ 8]  186 	ld	(hl), a
      000064 E1               [12]  187 	pop	hl
      000065 7C               [ 4]  188 	ld	a, h
      000066 F8 07            [12]  189 	ldhl	sp,	#7
      000068 77               [ 8]  190 	ld	(hl), a
      000069 F8 13            [12]  191 	ldhl	sp,#19
      00006B 2A               [ 8]  192 	ld	a, (hl+)
      00006C 5F               [ 4]  193 	ld	e, a
      00006D 56               [ 8]  194 	ld	d, (hl)
      00006E 21 11 00         [12]  195 	ld	hl, #0x0011
      000071 19               [ 8]  196 	add	hl, de
      000072 E5               [16]  197 	push	hl
      000073 7D               [ 4]  198 	ld	a, l
      000074 F8 0A            [12]  199 	ldhl	sp,	#10
      000076 77               [ 8]  200 	ld	(hl), a
      000077 E1               [12]  201 	pop	hl
      000078 7C               [ 4]  202 	ld	a, h
      000079 F8 09            [12]  203 	ldhl	sp,	#9
      00007B 77               [ 8]  204 	ld	(hl), a
      00007C 59               [ 4]  205 	ld	e, c
      00007D 78               [ 4]  206 	ld	a, b
      00007E CDr00r00         [24]  207 	call	__muluchar
      000081 F8 0A            [12]  208 	ldhl	sp,	#10
      000083 79               [ 4]  209 	ld	a, c
      000084 22               [ 8]  210 	ld	(hl+), a
      000085 70               [ 8]  211 	ld	(hl), b
      000086 F8 13            [12]  212 	ldhl	sp,#19
      000088 2A               [ 8]  213 	ld	a, (hl+)
      000089 5F               [ 4]  214 	ld	e, a
      00008A 56               [ 8]  215 	ld	d, (hl)
      00008B 21 05 00         [12]  216 	ld	hl, #0x0005
      00008E 19               [ 8]  217 	add	hl, de
      00008F E5               [16]  218 	push	hl
      000090 7D               [ 4]  219 	ld	a, l
      000091 F8 0E            [12]  220 	ldhl	sp,	#14
      000093 77               [ 8]  221 	ld	(hl), a
      000094 E1               [12]  222 	pop	hl
      000095 7C               [ 4]  223 	ld	a, h
      000096 F8 0D            [12]  224 	ldhl	sp,	#13
      000098 77               [ 8]  225 	ld	(hl), a
      000099 F8 15            [12]  226 	ldhl	sp,	#21
      00009B 36 00            [12]  227 	ld	(hl), #0x00
      00009D                        228 00109$:
      00009D F8 02            [12]  229 	ldhl	sp,#2
      00009F 2A               [ 8]  230 	ld	a, (hl+)
      0000A0 5F               [ 4]  231 	ld	e, a
      0000A1 56               [ 8]  232 	ld	d, (hl)
      0000A2 1A               [ 8]  233 	ld	a, (de)
      0000A3 47               [ 4]  234 	ld	b, a
      0000A4 F8 15            [12]  235 	ldhl	sp,	#21
      0000A6 7E               [ 8]  236 	ld	a, (hl)
      0000A7 90               [ 4]  237 	sub	a, b
      0000A8 CArA7r01         [16]  238 	jp	Z,00111$
                           0000AB   239 	C$Character.h$76$2_1$130	= .
                                    240 	.globl	C$Character.h$76$2_1$130
                                    241 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  242 	ldhl	sp,	#22
      0000AD 36 00            [12]  243 	ld	(hl), #0x00
      0000AF                        244 00106$:
                           0000AF   245 	C$Character.h$72$2_1$130	= .
                                    246 	.globl	C$Character.h$72$2_1$130
                                    247 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  248 	pop	de
      0000B0 D5               [16]  249 	push	de
      0000B1 1A               [ 8]  250 	ld	a, (de)
      0000B2 F8 10            [12]  251 	ldhl	sp,	#16
      0000B4 77               [ 8]  252 	ld	(hl), a
                           0000B5   253 	C$Character.h$76$3_1$133	= .
                                    254 	.globl	C$Character.h$76$3_1$133
                                    255 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  256 	ldhl	sp,	#22
      0000B7 7E               [ 8]  257 	ld	a, (hl)
      0000B8 F8 10            [12]  258 	ldhl	sp,	#16
      0000BA 96               [ 8]  259 	sub	a, (hl)
      0000BB CArA1r01         [16]  260 	jp	Z,00110$
                           0000BE   261 	C$Character.h$79$2_1$130	= .
                                    262 	.globl	C$Character.h$79$2_1$130
                                    263 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  264 	ldhl	sp,#4
      0000C0 2A               [ 8]  265 	ld	a, (hl+)
      0000C1 5F               [ 4]  266 	ld	e, a
      0000C2 56               [ 8]  267 	ld	d, (hl)
      0000C3 1A               [ 8]  268 	ld	a, (de)
      0000C4 F8 11            [12]  269 	ldhl	sp,	#17
      0000C6 77               [ 8]  270 	ld	(hl), a
      0000C7 7E               [ 8]  271 	ld	a, (hl)
      0000C8 B7               [ 4]  272 	or	a, a
      0000C9 28 09            [12]  273 	jr	Z, 00113$
      0000CB 2B               [ 8]  274 	dec	hl
      0000CC 7E               [ 8]  275 	ld	a, (hl)
      0000CD 3D               [ 4]  276 	dec	a
      0000CE F8 16            [12]  277 	ldhl	sp,	#22
      0000D0 4E               [ 8]  278 	ld	c, (hl)
      0000D1 91               [ 4]  279 	sub	a, c
      0000D2 18 03            [12]  280 	jr	00114$
      0000D4                        281 00113$:
      0000D4 F8 16            [12]  282 	ldhl	sp,	#22
      0000D6 7E               [ 8]  283 	ld	a, (hl)
      0000D7                        284 00114$:
      0000D7 4F               [ 4]  285 	ld	c, a
                           0000D8   286 	C$Character.h$80$2_1$130	= .
                                    287 	.globl	C$Character.h$80$2_1$130
                                    288 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:80: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  289 	ldhl	sp,#6
      0000DA 2A               [ 8]  290 	ld	a, (hl+)
      0000DB 5F               [ 4]  291 	ld	e, a
      0000DC 56               [ 8]  292 	ld	d, (hl)
      0000DD 1A               [ 8]  293 	ld	a, (de)
      0000DE F8 12            [12]  294 	ldhl	sp,	#18
      0000E0 77               [ 8]  295 	ld	(hl), a
      0000E1 7E               [ 8]  296 	ld	a, (hl)
      0000E2 B7               [ 4]  297 	or	a, a
      0000E3 28 0D            [12]  298 	jr	Z, 00115$
      0000E5 F8 02            [12]  299 	ldhl	sp,#2
      0000E7 2A               [ 8]  300 	ld	a, (hl+)
      0000E8 5F               [ 4]  301 	ld	e, a
      0000E9 56               [ 8]  302 	ld	d, (hl)
      0000EA 1A               [ 8]  303 	ld	a, (de)
      0000EB 3D               [ 4]  304 	dec	a
      0000EC F8 15            [12]  305 	ldhl	sp,	#21
      0000EE 46               [ 8]  306 	ld	b, (hl)
      0000EF 90               [ 4]  307 	sub	a, b
      0000F0 18 03            [12]  308 	jr	00116$
      0000F2                        309 00115$:
      0000F2 F8 15            [12]  310 	ldhl	sp,	#21
      0000F4 7E               [ 8]  311 	ld	a, (hl)
      0000F5                        312 00116$:
      0000F5 47               [ 4]  313 	ld	b, a
                           0000F6   314 	C$Character.h$83$4_1$134	= .
                                    315 	.globl	C$Character.h$83$4_1$134
                                    316 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:83: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  317 	ldhl	sp,#19
      0000F8 2A               [ 8]  318 	ld	a, (hl+)
      0000F9 5F               [ 4]  319 	ld	e, a
      0000FA 56               [ 8]  320 	ld	d, (hl)
      0000FB 1A               [ 8]  321 	ld	a, (de)
      0000FC 81               [ 4]  322 	add	a, c
      0000FD 4F               [ 4]  323 	ld	c, a
      0000FE C5               [16]  324 	push	bc
      0000FF F8 12            [12]  325 	ldhl	sp,	#18
      000101 5E               [ 8]  326 	ld	e, (hl)
      000102 78               [ 4]  327 	ld	a, b
      000103 CDr00r00         [24]  328 	call	__muluchar
      000106 79               [ 4]  329 	ld	a, c
      000107 C1               [12]  330 	pop	bc
      000108 81               [ 4]  331 	add	a, c
      000109 F8 0E            [12]  332 	ldhl	sp,	#14
      00010B 77               [ 8]  333 	ld	(hl), a
                                    334 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:86: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  335 	ldhl	sp,	#17
      00010E 7E               [ 8]  336 	ld	a, (hl)
      00010F B7               [ 4]  337 	or	a, a
      000110 28 09            [12]  338 	jr	Z, 00117$
      000112 2B               [ 8]  339 	dec	hl
      000113 2B               [ 8]  340 	dec	hl
      000114 3E 20            [ 8]  341 	ld	a, #0x20
      000116 22               [ 8]  342 	ld	(hl+), a
      000117 AF               [ 4]  343 	xor	a, a
      000118 77               [ 8]  344 	ld	(hl), a
      000119 18 05            [12]  345 	jr	00118$
      00011B                        346 00117$:
      00011B AF               [ 4]  347 	xor	a, a
      00011C F8 0F            [12]  348 	ldhl	sp,	#15
      00011E 22               [ 8]  349 	ld	(hl+), a
      00011F 77               [ 8]  350 	ld	(hl), a
      000120                        351 00118$:
      000120 F8 12            [12]  352 	ldhl	sp,	#18
      000122 7E               [ 8]  353 	ld	a, (hl)
      000123 B7               [ 4]  354 	or	a, a
      000124 28 08            [12]  355 	jr	Z, 00119$
      000126 2B               [ 8]  356 	dec	hl
      000127 3E 40            [ 8]  357 	ld	a, #0x40
      000129 22               [ 8]  358 	ld	(hl+), a
      00012A AF               [ 4]  359 	xor	a, a
      00012B 77               [ 8]  360 	ld	(hl), a
      00012C 18 05            [12]  361 	jr	00120$
      00012E                        362 00119$:
      00012E AF               [ 4]  363 	xor	a, a
      00012F F8 11            [12]  364 	ldhl	sp,	#17
      000131 22               [ 8]  365 	ld	(hl+), a
      000132 77               [ 8]  366 	ld	(hl), a
      000133                        367 00120$:
      000133 F8 0F            [12]  368 	ldhl	sp,	#15
      000135 2A               [ 8]  369 	ld	a, (hl+)
      000136 23               [ 8]  370 	inc	hl
      000137 4E               [ 8]  371 	ld	c, (hl)
      000138 B1               [ 4]  372 	or	a, c
      000139 5F               [ 4]  373 	ld	e, a
                                    374 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  375 	ldhl	sp,	#14
      00013C 4E               [ 8]  376 	ld	c, (hl)
      00013D 06 00            [ 8]  377 	ld	b, #0x00
      00013F CB 21            [ 8]  378 	sla	c
      000141 CB 10            [ 8]  379 	rl	b
      000143 CB 21            [ 8]  380 	sla	c
      000145 CB 10            [ 8]  381 	rl	b
      000147 21r01r00         [12]  382 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  383 	add	hl,bc
      00014B 23               [ 8]  384 	inc	hl
      00014C 23               [ 8]  385 	inc	hl
      00014D 73               [ 8]  386 	ld	(hl), e
                                    387 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  388 	ldhl	sp,#8
      000150 2A               [ 8]  389 	ld	a, (hl+)
      000151 5F               [ 4]  390 	ld	e, a
      000152 56               [ 8]  391 	ld	d, (hl)
      000153 1A               [ 8]  392 	ld	a, (de)
      000154 F8 0F            [12]  393 	ldhl	sp,	#15
      000156 22               [ 8]  394 	ld	(hl+), a
      000157 13               [ 8]  395 	inc	de
      000158 1A               [ 8]  396 	ld	a, (de)
      000159 77               [ 8]  397 	ld	(hl), a
      00015A F8 16            [12]  398 	ldhl	sp,	#22
      00015C 7E               [ 8]  399 	ld	a, (hl)
      00015D F8 11            [12]  400 	ldhl	sp,	#17
      00015F 22               [ 8]  401 	ld	(hl+), a
      000160 36 00            [12]  402 	ld	(hl), #0x00
      000162 D1               [12]  403 	pop	de
      000163 D5               [16]  404 	push	de
      000164 1A               [ 8]  405 	ld	a, (de)
      000165 6F               [ 4]  406 	ld	l, a
                                    407 ;	spillPairReg hl
                                    408 ;	spillPairReg hl
      000166 C5               [16]  409 	push	bc
      000167 5D               [ 4]  410 	ld	e, l
      000168 F8 17            [12]  411 	ldhl	sp,	#23
      00016A 7E               [ 8]  412 	ld	a, (hl)
      00016B CDr00r00         [24]  413 	call	__muluchar
      00016E 59               [ 4]  414 	ld	e, c
      00016F 50               [ 4]  415 	ld	d, b
      000170 C1               [12]  416 	pop	bc
      000171 F8 11            [12]  417 	ldhl	sp,	#17
      000173 2A               [ 8]  418 	ld	a,	(hl+)
      000174 66               [ 8]  419 	ld	h, (hl)
      000175 6F               [ 4]  420 	ld	l, a
      000176 19               [ 8]  421 	add	hl, de
      000177 5D               [ 4]  422 	ld	e, l
      000178 54               [ 4]  423 	ld	d, h
      000179 F8 0A            [12]  424 	ldhl	sp,	#10
      00017B 2A               [ 8]  425 	ld	a,	(hl+)
      00017C 66               [ 8]  426 	ld	h, (hl)
      00017D 6F               [ 4]  427 	ld	l, a
      00017E 19               [ 8]  428 	add	hl, de
      00017F 5D               [ 4]  429 	ld	e, l
      000180 54               [ 4]  430 	ld	d, h
      000181 F8 0F            [12]  431 	ldhl	sp,	#15
      000183 2A               [ 8]  432 	ld	a,	(hl+)
      000184 66               [ 8]  433 	ld	h, (hl)
      000185 6F               [ 4]  434 	ld	l, a
      000186 19               [ 8]  435 	add	hl, de
      000187 5D               [ 4]  436 	ld	e, l
      000188 54               [ 4]  437 	ld	d, h
      000189 1A               [ 8]  438 	ld	a, (de)
      00018A F8 0C            [12]  439 	ldhl	sp,#12
      00018C 5E               [ 8]  440 	ld	e, (hl)
      00018D 23               [ 8]  441 	inc	hl
      00018E 56               [ 8]  442 	ld	d, (hl)
      00018F F5               [16]  443 	push	af
      000190 1A               [ 8]  444 	ld	a, (de)
      000191 6F               [ 4]  445 	ld	l, a
                                    446 ;	spillPairReg hl
                                    447 ;	spillPairReg hl
      000192 F1               [12]  448 	pop	af
      000193 85               [ 4]  449 	add	a, l
      000194 5F               [ 4]  450 	ld	e, a
                                    451 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  452 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  453 	add	hl,bc
      000199 23               [ 8]  454 	inc	hl
      00019A 73               [ 8]  455 	ld	(hl), e
                           00019B   456 	C$Character.h$76$3_1$133	= .
                                    457 	.globl	C$Character.h$76$3_1$133
                                    458 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  459 	ldhl	sp,	#22
      00019D 34               [12]  460 	inc	(hl)
      00019E C3rAFr00         [16]  461 	jp	00106$
      0001A1                        462 00110$:
                           0001A1   463 	C$Character.h$75$2_1$132	= .
                                    464 	.globl	C$Character.h$75$2_1$132
                                    465 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:75: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  466 	ldhl	sp,	#21
      0001A3 34               [12]  467 	inc	(hl)
      0001A4 C3r9Dr00         [16]  468 	jp	00109$
      0001A7                        469 00111$:
                           0001A7   470 	C$Character.h$91$2_1$130	= .
                                    471 	.globl	C$Character.h$91$2_1$130
                                    472 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:91: }
      0001A7 E8 17            [16]  473 	add	sp, #23
                           0001A9   474 	C$Character.h$91$2_1$130	= .
                                    475 	.globl	C$Character.h$91$2_1$130
                           0001A9   476 	XG$LoadSpriteFrame$0$0	= .
                                    477 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  478 	ret
                           0001AA   479 	G$RefreshSprite$0$0	= .
                                    480 	.globl	G$RefreshSprite$0$0
                           0001AA   481 	C$Character.h$93$2_1$142	= .
                                    482 	.globl	C$Character.h$93$2_1$142
                                    483 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: void RefreshSprite(Character *character)
                                    484 ;	---------------------------------
                                    485 ; Function RefreshSprite
                                    486 ; ---------------------------------
      0001AA                        487 _RefreshSprite::
                           0001AA   488 	C$Character.h$95$1_0$142	= .
                                    489 	.globl	C$Character.h$95$1_0$142
                                    490 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: LoadSpriteFrame(character, character->spriteCurrentFrame);
      0001AA 21 04 00         [12]  491 	ld	hl, #0x0004
      0001AD 19               [ 8]  492 	add	hl, de
      0001AE 4E               [ 8]  493 	ld	c, (hl)
      0001AF 79               [ 4]  494 	ld	a, c
                           0001B0   495 	C$Character.h$96$1_0$142	= .
                                    496 	.globl	C$Character.h$96$1_0$142
                                    497 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:96: }
                           0001B0   498 	C$Character.h$96$1_0$142	= .
                                    499 	.globl	C$Character.h$96$1_0$142
                           0001B0   500 	XG$RefreshSprite$0$0	= .
                                    501 	.globl	XG$RefreshSprite$0$0
      0001B0 C3r00r00         [16]  502 	jp	_LoadSpriteFrame
                           0001B3   503 	G$LoadNextSpriteFrame$0$0	= .
                                    504 	.globl	G$LoadNextSpriteFrame$0$0
                           0001B3   505 	C$Character.h$98$1_0$144	= .
                                    506 	.globl	C$Character.h$98$1_0$144
                                    507 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:98: void LoadNextSpriteFrame(Character *character)
                                    508 ;	---------------------------------
                                    509 ; Function LoadNextSpriteFrame
                                    510 ; ---------------------------------
      0001B3                        511 _LoadNextSpriteFrame::
      0001B3 E8 FC            [16]  512 	add	sp, #-4
      0001B5 F8 02            [12]  513 	ldhl	sp,	#2
      0001B7 7B               [ 4]  514 	ld	a, e
      0001B8 22               [ 8]  515 	ld	(hl+), a
                           0001B9   516 	C$Character.h$101$1_0$144	= .
                                    517 	.globl	C$Character.h$101$1_0$144
                                    518 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:101: character->spriteCurrentFrame = (character->spriteCurrentFrame + 1) % character->spriteFrames;
      0001B9 7A               [ 4]  519 	ld	a, d
      0001BA 32               [ 8]  520 	ld	(hl-), a
      0001BB 2A               [ 8]  521 	ld	a, (hl+)
      0001BC 5F               [ 4]  522 	ld	e, a
      0001BD 56               [ 8]  523 	ld	d, (hl)
      0001BE 21 04 00         [12]  524 	ld	hl, #0x0004
      0001C1 19               [ 8]  525 	add	hl, de
      0001C2 5D               [ 4]  526 	ld	e, l
      0001C3 54               [ 4]  527 	ld	d, h
      0001C4 1A               [ 8]  528 	ld	a, (de)
      0001C5 4F               [ 4]  529 	ld	c, a
      0001C6 06 00            [ 8]  530 	ld	b, #0x00
      0001C8 03               [ 8]  531 	inc	bc
      0001C9 33               [ 8]  532 	inc	sp
      0001CA 33               [ 8]  533 	inc	sp
      0001CB C5               [16]  534 	push	bc
      0001CC F8 02            [12]  535 	ldhl	sp,	#2
      0001CE 2A               [ 8]  536 	ld	a, (hl+)
      0001CF 4F               [ 4]  537 	ld	c, a
      0001D0 46               [ 8]  538 	ld	b, (hl)
      0001D1 03               [ 8]  539 	inc	bc
      0001D2 03               [ 8]  540 	inc	bc
      0001D3 03               [ 8]  541 	inc	bc
      0001D4 0A               [ 8]  542 	ld	a, (bc)
      0001D5 4F               [ 4]  543 	ld	c, a
      0001D6 06 00            [ 8]  544 	ld	b, #0x00
      0001D8 D5               [16]  545 	push	de
      0001D9 F8 02            [12]  546 	ldhl	sp,	#2
      0001DB 2A               [ 8]  547 	ld	a, (hl+)
      0001DC 5F               [ 4]  548 	ld	e, a
      0001DD 56               [ 8]  549 	ld	d, (hl)
      0001DE CDr00r00         [24]  550 	call	__modsint
      0001E1 D1               [12]  551 	pop	de
      0001E2 79               [ 4]  552 	ld	a, c
      0001E3 12               [ 8]  553 	ld	(de), a
                           0001E4   554 	C$Character.h$103$1_0$144	= .
                                    555 	.globl	C$Character.h$103$1_0$144
                                    556 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: RefreshSprite(character);
      0001E4 F8 02            [12]  557 	ldhl	sp,	#2
      0001E6 2A               [ 8]  558 	ld	a, (hl+)
      0001E7 5F               [ 4]  559 	ld	e, a
      0001E8 56               [ 8]  560 	ld	d, (hl)
      0001E9 CDrAAr01         [24]  561 	call	_RefreshSprite
                           0001EC   562 	C$Character.h$104$1_0$144	= .
                                    563 	.globl	C$Character.h$104$1_0$144
                                    564 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:104: }
      0001EC E8 04            [16]  565 	add	sp, #4
                           0001EE   566 	C$Character.h$104$1_0$144	= .
                                    567 	.globl	C$Character.h$104$1_0$144
                           0001EE   568 	XG$LoadNextSpriteFrame$0$0	= .
                                    569 	.globl	XG$LoadNextSpriteFrame$0$0
      0001EE C9               [16]  570 	ret
                           0001EF   571 	G$SetSpriteFlip$0$0	= .
                                    572 	.globl	G$SetSpriteFlip$0$0
                           0001EF   573 	C$Character.h$106$1_0$146	= .
                                    574 	.globl	C$Character.h$106$1_0$146
                                    575 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: void SetSpriteFlip(Character *character, uint8_t flipX, uint8_t flipY)
                                    576 ;	---------------------------------
                                    577 ; Function SetSpriteFlip
                                    578 ; ---------------------------------
      0001EF                        579 _SetSpriteFlip::
      0001EF 4F               [ 4]  580 	ld	c, a
                           0001F0   581 	C$Character.h$108$1_0$146	= .
                                    582 	.globl	C$Character.h$108$1_0$146
                                    583 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: character->spriteFlippedX = flipX;
      0001F0 21 0A 00         [12]  584 	ld	hl, #0x000a
      0001F3 19               [ 8]  585 	add	hl, de
      0001F4 71               [ 8]  586 	ld	(hl), c
                           0001F5   587 	C$Character.h$109$1_0$146	= .
                                    588 	.globl	C$Character.h$109$1_0$146
                                    589 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:109: character->spriteFlippedY = flipY;
      0001F5 21 0B 00         [12]  590 	ld	hl, #0x000b
      0001F8 19               [ 8]  591 	add	hl, de
      0001F9 4D               [ 4]  592 	ld	c, l
      0001FA 44               [ 4]  593 	ld	b, h
      0001FB F8 02            [12]  594 	ldhl	sp,	#2
      0001FD 7E               [ 8]  595 	ld	a, (hl)
      0001FE 02               [ 8]  596 	ld	(bc), a
                           0001FF   597 	C$Character.h$111$1_0$146	= .
                                    598 	.globl	C$Character.h$111$1_0$146
                                    599 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: RefreshSprite(character);
      0001FF CDrAAr01         [24]  600 	call	_RefreshSprite
                           000202   601 	C$Character.h$112$1_0$146	= .
                                    602 	.globl	C$Character.h$112$1_0$146
                                    603 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:112: }
      000202 E1               [12]  604 	pop	hl
      000203 33               [ 8]  605 	inc	sp
      000204 E9               [ 4]  606 	jp	(hl)
                           000205   607 	G$MoveCharacter$0$0	= .
                                    608 	.globl	G$MoveCharacter$0$0
                           000205   609 	C$Character.h$114$1_0$148	= .
                                    610 	.globl	C$Character.h$114$1_0$148
                                    611 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    612 ;	---------------------------------
                                    613 ; Function MoveCharacter
                                    614 ; ---------------------------------
      000205                        615 _MoveCharacter::
      000205 E8 F8            [16]  616 	add	sp, #-8
      000207 4B               [ 4]  617 	ld	c, e
      000208 42               [ 4]  618 	ld	b, d
      000209 F8 05            [12]  619 	ldhl	sp,	#5
      00020B 77               [ 8]  620 	ld	(hl), a
                           00020C   621 	C$Character.h$117$1_0$148	= .
                                    622 	.globl	C$Character.h$117$1_0$148
                                    623 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:117: character->x = x;
      00020C 21 06 00         [12]  624 	ld	hl, #0x0006
      00020F 09               [ 8]  625 	add	hl, bc
      000210 5D               [ 4]  626 	ld	e, l
      000211 54               [ 4]  627 	ld	d, h
      000212 F8 05            [12]  628 	ldhl	sp,	#5
      000214 7E               [ 8]  629 	ld	a, (hl)
      000215 12               [ 8]  630 	ld	(de), a
                           000216   631 	C$Character.h$118$1_0$148	= .
                                    632 	.globl	C$Character.h$118$1_0$148
                                    633 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:118: character->y = y;
      000216 21 07 00         [12]  634 	ld	hl, #0x0007
      000219 09               [ 8]  635 	add	hl, bc
      00021A 5D               [ 4]  636 	ld	e, l
      00021B 54               [ 4]  637 	ld	d, h
      00021C F8 0A            [12]  638 	ldhl	sp,	#10
      00021E 7E               [ 8]  639 	ld	a, (hl)
      00021F 12               [ 8]  640 	ld	(de), a
                           000220   641 	C$Character.h$120$4_0$151	= .
                                    642 	.globl	C$Character.h$120$4_0$151
                                    643 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000220 69               [ 4]  644 	ld	l, c
      000221 60               [ 4]  645 	ld	h, b
      000222 23               [ 8]  646 	inc	hl
      000223 33               [ 8]  647 	inc	sp
      000224 33               [ 8]  648 	inc	sp
      000225 E5               [16]  649 	push	hl
      000226 21 02 00         [12]  650 	ld	hl, #0x0002
      000229 09               [ 8]  651 	add	hl, bc
      00022A E5               [16]  652 	push	hl
      00022B 7D               [ 4]  653 	ld	a, l
      00022C F8 04            [12]  654 	ldhl	sp,	#4
      00022E 77               [ 8]  655 	ld	(hl), a
      00022F E1               [12]  656 	pop	hl
      000230 7C               [ 4]  657 	ld	a, h
      000231 F8 03            [12]  658 	ldhl	sp,	#3
      000233 77               [ 8]  659 	ld	(hl), a
      000234 F8 06            [12]  660 	ldhl	sp,	#6
      000236 36 00            [12]  661 	ld	(hl), #0x00
      000238                        662 00108$:
      000238 F8 02            [12]  663 	ldhl	sp,#2
      00023A 2A               [ 8]  664 	ld	a, (hl+)
      00023B 5F               [ 4]  665 	ld	e, a
      00023C 56               [ 8]  666 	ld	d, (hl)
      00023D 1A               [ 8]  667 	ld	a, (de)
      00023E F8 07            [12]  668 	ldhl	sp,	#7
      000240 32               [ 8]  669 	ld	(hl-), a
      000241 2A               [ 8]  670 	ld	a, (hl+)
      000242 96               [ 8]  671 	sub	a, (hl)
      000243 28 5B            [12]  672 	jr	Z, 00110$
                           000245   673 	C$Character.h$122$2_0$148	= .
                                    674 	.globl	C$Character.h$122$2_0$148
                                    675 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000245 F8 07            [12]  676 	ldhl	sp,	#7
      000247 36 00            [12]  677 	ld	(hl), #0x00
      000249                        678 00105$:
      000249 D1               [12]  679 	pop	de
      00024A D5               [16]  680 	push	de
      00024B 1A               [ 8]  681 	ld	a, (de)
      00024C F8 04            [12]  682 	ldhl	sp,	#4
      00024E 77               [ 8]  683 	ld	(hl), a
      00024F F8 07            [12]  684 	ldhl	sp,	#7
      000251 7E               [ 8]  685 	ld	a, (hl)
      000252 F8 04            [12]  686 	ldhl	sp,	#4
      000254 96               [ 8]  687 	sub	a, (hl)
      000255 28 44            [12]  688 	jr	Z, 00109$
                           000257   689 	C$Character.h$125$5_0$152	= .
                                    690 	.globl	C$Character.h$125$5_0$152
                                    691 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:125: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      000257 0A               [ 8]  692 	ld	a, (bc)
      000258 F8 07            [12]  693 	ldhl	sp,	#7
      00025A 86               [ 8]  694 	add	a, (hl)
      00025B 57               [ 4]  695 	ld	d, a
      00025C C5               [16]  696 	push	bc
      00025D D5               [16]  697 	push	de
      00025E F8 08            [12]  698 	ldhl	sp,	#8
      000260 2A               [ 8]  699 	ld	a, (hl+)
      000261 23               [ 8]  700 	inc	hl
      000262 5F               [ 4]  701 	ld	e, a
      000263 7E               [ 8]  702 	ld	a, (hl)
      000264 CDr00r00         [24]  703 	call	__muluchar
      000267 79               [ 4]  704 	ld	a, c
      000268 D1               [12]  705 	pop	de
      000269 C1               [12]  706 	pop	bc
      00026A 82               [ 4]  707 	add	a, d
      00026B 5F               [ 4]  708 	ld	e, a
                                    709 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:128: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      00026C F8 06            [12]  710 	ldhl	sp,	#6
      00026E 7E               [ 8]  711 	ld	a, (hl)
      00026F 87               [ 4]  712 	add	a, a
      000270 87               [ 4]  713 	add	a, a
      000271 87               [ 4]  714 	add	a, a
      000272 F8 0A            [12]  715 	ldhl	sp,	#10
      000274 56               [ 8]  716 	ld	d, (hl)
      000275 82               [ 4]  717 	add	a, d
      000276 57               [ 4]  718 	ld	d, a
      000277 F8 07            [12]  719 	ldhl	sp,	#7
      000279 3A               [ 8]  720 	ld	a, (hl-)
      00027A 2B               [ 8]  721 	dec	hl
      00027B 87               [ 4]  722 	add	a, a
      00027C 87               [ 4]  723 	add	a, a
      00027D 87               [ 4]  724 	add	a, a
      00027E 6E               [ 8]  725 	ld	l, (hl)
                                    726 ;	spillPairReg hl
                                    727 ;	spillPairReg hl
      00027F 85               [ 4]  728 	add	a, l
      000280 F8 04            [12]  729 	ldhl	sp,	#4
      000282 77               [ 8]  730 	ld	(hl), a
                                    731 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000283 26 00            [ 8]  732 	ld	h, #0x00
                                    733 ;	spillPairReg hl
                                    734 ;	spillPairReg hl
      000285 6B               [ 4]  735 	ld	l, e
      000286 29               [ 8]  736 	add	hl, hl
      000287 29               [ 8]  737 	add	hl, hl
      000288 D5               [16]  738 	push	de
      000289 11r00r00         [12]  739 	ld	de, #_shadow_OAM
      00028C 19               [ 8]  740 	add	hl, de
      00028D D1               [12]  741 	pop	de
                                    742 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00028E 7A               [ 4]  743 	ld	a, d
      00028F 22               [ 8]  744 	ld	(hl+), a
      000290 5D               [ 4]  745 	ld	e, l
      000291 54               [ 4]  746 	ld	d, h
      000292 F8 04            [12]  747 	ldhl	sp,	#4
      000294 7E               [ 8]  748 	ld	a, (hl)
      000295 12               [ 8]  749 	ld	(de), a
                           000296   750 	C$Character.h$122$4_0$151	= .
                                    751 	.globl	C$Character.h$122$4_0$151
                                    752 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000296 F8 07            [12]  753 	ldhl	sp,	#7
      000298 34               [12]  754 	inc	(hl)
      000299 18 AE            [12]  755 	jr	00105$
      00029B                        756 00109$:
                           00029B   757 	C$Character.h$120$2_0$149	= .
                                    758 	.globl	C$Character.h$120$2_0$149
                                    759 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      00029B F8 06            [12]  760 	ldhl	sp,	#6
      00029D 34               [12]  761 	inc	(hl)
      00029E 18 98            [12]  762 	jr	00108$
      0002A0                        763 00110$:
                           0002A0   764 	C$Character.h$131$2_0$148	= .
                                    765 	.globl	C$Character.h$131$2_0$148
                                    766 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:131: }
      0002A0 E8 08            [16]  767 	add	sp, #8
      0002A2 E1               [12]  768 	pop	hl
      0002A3 33               [ 8]  769 	inc	sp
      0002A4 E9               [ 4]  770 	jp	(hl)
                           0002A5   771 	G$ScrollCharacter$0$0	= .
                                    772 	.globl	G$ScrollCharacter$0$0
                           0002A5   773 	C$Character.h$133$2_0$157	= .
                                    774 	.globl	C$Character.h$133$2_0$157
                                    775 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    776 ;	---------------------------------
                                    777 ; Function ScrollCharacter
                                    778 ; ---------------------------------
      0002A5                        779 _ScrollCharacter::
      0002A5 D5               [16]  780 	push	de
      0002A6 4F               [ 4]  781 	ld	c, a
                           0002A7   782 	C$Character.h$135$1_0$157	= .
                                    783 	.globl	C$Character.h$135$1_0$157
                                    784 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: character->x += x;
      0002A7 D1               [12]  785 	pop	de
      0002A8 D5               [16]  786 	push	de
      0002A9 21 06 00         [12]  787 	ld	hl, #0x0006
      0002AC 19               [ 8]  788 	add	hl, de
      0002AD 5D               [ 4]  789 	ld	e, l
      0002AE 54               [ 4]  790 	ld	d, h
      0002AF 1A               [ 8]  791 	ld	a, (de)
      0002B0 81               [ 4]  792 	add	a, c
      0002B1 12               [ 8]  793 	ld	(de), a
                           0002B2   794 	C$Character.h$136$1_0$157	= .
                                    795 	.globl	C$Character.h$136$1_0$157
                                    796 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:136: character->y += y;
      0002B2 D5               [16]  797 	push	de
      0002B3 F8 02            [12]  798 	ldhl	sp,#2
      0002B5 2A               [ 8]  799 	ld	a, (hl+)
      0002B6 5F               [ 4]  800 	ld	e, a
      0002B7 56               [ 8]  801 	ld	d, (hl)
      0002B8 21 07 00         [12]  802 	ld	hl, #0x0007
      0002BB 19               [ 8]  803 	add	hl, de
      0002BC D1               [12]  804 	pop	de
      0002BD 4D               [ 4]  805 	ld	c, l
      0002BE 44               [ 4]  806 	ld	b, h
      0002BF 0A               [ 8]  807 	ld	a, (bc)
      0002C0 F8 04            [12]  808 	ldhl	sp,	#4
      0002C2 86               [ 8]  809 	add	a, (hl)
                           0002C3   810 	C$Character.h$138$1_0$157	= .
                                    811 	.globl	C$Character.h$138$1_0$157
                                    812 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:138: MoveCharacter(character, character->x, character->y);
      0002C3 02               [ 8]  813 	ld	(bc), a
      0002C4 47               [ 4]  814 	ld	b, a
      0002C5 1A               [ 8]  815 	ld	a, (de)
      0002C6 4F               [ 4]  816 	ld	c, a
      0002C7 C5               [16]  817 	push	bc
      0002C8 33               [ 8]  818 	inc	sp
      0002C9 79               [ 4]  819 	ld	a, c
      0002CA F8 01            [12]  820 	ldhl	sp,	#1
      0002CC 5E               [ 8]  821 	ld	e, (hl)
      0002CD 23               [ 8]  822 	inc	hl
      0002CE 56               [ 8]  823 	ld	d, (hl)
                           0002CF   824 	C$Character.h$139$1_0$157	= .
                                    825 	.globl	C$Character.h$139$1_0$157
                                    826 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:139: }
      0002CF CDr05r02         [24]  827 	call	_MoveCharacter
      0002D2 E1               [12]  828 	pop	hl
      0002D3 E1               [12]  829 	pop	hl
      0002D4 33               [ 8]  830 	inc	sp
      0002D5 E9               [ 4]  831 	jp	(hl)
                           0002D6   832 	G$MoveCharacterWithJoypad$0$0	= .
                                    833 	.globl	G$MoveCharacterWithJoypad$0$0
                           0002D6   834 	C$Character.h$141$1_0$159	= .
                                    835 	.globl	C$Character.h$141$1_0$159
                                    836 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:141: void MoveCharacterWithJoypad(Character *character)
                                    837 ;	---------------------------------
                                    838 ; Function MoveCharacterWithJoypad
                                    839 ; ---------------------------------
      0002D6                        840 _MoveCharacterWithJoypad::
      0002D6 E8 F8            [16]  841 	add	sp, #-8
      0002D8 4B               [ 4]  842 	ld	c, e
      0002D9 42               [ 4]  843 	ld	b, d
                           0002DA   844 	C$Character.h$144$1_0$159	= .
                                    845 	.globl	C$Character.h$144$1_0$159
                                    846 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:144: uint8_t buttons = joypad();
      0002DA CDr00r00         [24]  847 	call	_joypad
                           0002DD   848 	C$Character.h$146$1_0$159	= .
                                    849 	.globl	C$Character.h$146$1_0$159
                                    850 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:146: int8_t moveX = 0;
      0002DD F8 00            [12]  851 	ldhl	sp,	#0
      0002DF 36 00            [12]  852 	ld	(hl), #0x00
                           0002E1   853 	C$Character.h$147$1_0$159	= .
                                    854 	.globl	C$Character.h$147$1_0$159
                                    855 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:147: int8_t moveY = 0;
      0002E1 23               [ 8]  856 	inc	hl
      0002E2 36 00            [12]  857 	ld	(hl), #0x00
                           0002E4   858 	C$Character.h$149$1_0$159	= .
                                    859 	.globl	C$Character.h$149$1_0$159
                                    860 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: if (buttons & J_LEFT)
      0002E4 CB 4F            [ 8]  861 	bit	1, a
      0002E6 28 06            [12]  862 	jr	Z, 00104$
                           0002E8   863 	C$Character.h$151$2_0$160	= .
                                    864 	.globl	C$Character.h$151$2_0$160
                                    865 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:151: moveX = -1;
      0002E8 F8 00            [12]  866 	ldhl	sp,	#0
      0002EA 36 FF            [12]  867 	ld	(hl), #0xff
      0002EC 18 08            [12]  868 	jr	00108$
      0002EE                        869 00104$:
                           0002EE   870 	C$Character.h$153$1_0$159	= .
                                    871 	.globl	C$Character.h$153$1_0$159
                                    872 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: else if (buttons & J_RIGHT)
      0002EE CB 47            [ 8]  873 	bit	0, a
      0002F0 28 04            [12]  874 	jr	Z, 00108$
                           0002F2   875 	C$Character.h$155$2_0$161	= .
                                    876 	.globl	C$Character.h$155$2_0$161
                                    877 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: moveX = 1;
      0002F2 F8 00            [12]  878 	ldhl	sp,	#0
      0002F4 36 01            [12]  879 	ld	(hl), #0x01
                           0002F6   880 	C$Character.h$161$1_0$159	= .
                                    881 	.globl	C$Character.h$161$1_0$159
                                    882 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:161: else if (buttons & J_DOWN)
      0002F6                        883 00108$:
                           0002F6   884 	C$Character.h$166$1_0$159	= .
                                    885 	.globl	C$Character.h$166$1_0$159
                                    886 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:166: if ((buttons & J_A))
      0002F6 E6 10            [ 8]  887 	and	a, #0x10
      0002F8 F8 02            [12]  888 	ldhl	sp,	#2
      0002FA 22               [ 8]  889 	ld	(hl+), a
      0002FB 36 00            [12]  890 	ld	(hl), #0x00
                           0002FD   891 	C$Character.h$169$1_0$159	= .
                                    892 	.globl	C$Character.h$169$1_0$159
                                    893 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:169: character->hasJumped = 1;
      0002FD 21 0F 00         [12]  894 	ld	hl, #0x000f
      000300 09               [ 8]  895 	add	hl, bc
      000301 E5               [16]  896 	push	hl
      000302 7D               [ 4]  897 	ld	a, l
      000303 F8 06            [12]  898 	ldhl	sp,	#6
      000305 77               [ 8]  899 	ld	(hl), a
      000306 E1               [12]  900 	pop	hl
      000307 7C               [ 4]  901 	ld	a, h
      000308 F8 05            [12]  902 	ldhl	sp,	#5
      00030A 77               [ 8]  903 	ld	(hl), a
                           00030B   904 	C$Character.h$170$1_0$159	= .
                                    905 	.globl	C$Character.h$170$1_0$159
                                    906 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:170: character->jumpedFrames = 0;
      00030B 21 10 00         [12]  907 	ld	hl, #0x0010
      00030E 09               [ 8]  908 	add	hl, bc
      00030F E5               [16]  909 	push	hl
      000310 7D               [ 4]  910 	ld	a, l
      000311 F8 08            [12]  911 	ldhl	sp,	#8
      000313 77               [ 8]  912 	ld	(hl), a
      000314 E1               [12]  913 	pop	hl
      000315 7C               [ 4]  914 	ld	a, h
      000316 F8 07            [12]  915 	ldhl	sp,	#7
      000318 77               [ 8]  916 	ld	(hl), a
                           000319   917 	C$Character.h$166$1_0$159	= .
                                    918 	.globl	C$Character.h$166$1_0$159
                                    919 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:166: if ((buttons & J_A))
      000319 AF               [ 4]  920 	xor	a, a
      00031A F8 02            [12]  921 	ldhl	sp,	#2
      00031C B6               [ 8]  922 	or	a, (hl)
      00031D 28 0E            [12]  923 	jr	Z, 00110$
                           00031F   924 	C$Character.h$169$2_0$164	= .
                                    925 	.globl	C$Character.h$169$2_0$164
                                    926 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:169: character->hasJumped = 1;
      00031F 23               [ 8]  927 	inc	hl
      000320 23               [ 8]  928 	inc	hl
      000321 2A               [ 8]  929 	ld	a,	(hl+)
      000322 66               [ 8]  930 	ld	h, (hl)
      000323 6F               [ 4]  931 	ld	l, a
      000324 36 01            [12]  932 	ld	(hl), #0x01
                           000326   933 	C$Character.h$170$2_0$164	= .
                                    934 	.globl	C$Character.h$170$2_0$164
                                    935 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:170: character->jumpedFrames = 0;
      000326 F8 06            [12]  936 	ldhl	sp,	#6
      000328 2A               [ 8]  937 	ld	a,	(hl+)
      000329 66               [ 8]  938 	ld	h, (hl)
      00032A 6F               [ 4]  939 	ld	l, a
      00032B 36 00            [12]  940 	ld	(hl), #0x00
      00032D                        941 00110$:
                           00032D   942 	C$Character.h$174$1_0$159	= .
                                    943 	.globl	C$Character.h$174$1_0$159
                                    944 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:174: if (character->hasJumped && (buttons & J_A))
      00032D F8 04            [12]  945 	ldhl	sp,#4
      00032F 2A               [ 8]  946 	ld	a, (hl+)
      000330 5F               [ 4]  947 	ld	e, a
      000331 56               [ 8]  948 	ld	d, (hl)
      000332 1A               [ 8]  949 	ld	a, (de)
      000333 B7               [ 4]  950 	or	a, a
      000334 28 17            [12]  951 	jr	Z, 00112$
      000336 AF               [ 4]  952 	xor	a, a
      000337 F8 02            [12]  953 	ldhl	sp,	#2
      000339 B6               [ 8]  954 	or	a, (hl)
      00033A 28 11            [12]  955 	jr	Z, 00112$
                           00033C   956 	C$Character.h$177$2_0$165	= .
                                    957 	.globl	C$Character.h$177$2_0$165
                                    958 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:177: moveY = -1;
      00033C 2B               [ 8]  959 	dec	hl
      00033D 36 FF            [12]  960 	ld	(hl), #0xff
                           00033F   961 	C$Character.h$180$2_0$165	= .
                                    962 	.globl	C$Character.h$180$2_0$165
                                    963 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:180: character->jumpedFrames++;
      00033F F8 06            [12]  964 	ldhl	sp,#6
      000341 2A               [ 8]  965 	ld	a, (hl+)
      000342 5F               [ 4]  966 	ld	e, a
      000343 3A               [ 8]  967 	ld	a, (hl-)
      000344 57               [ 4]  968 	ld	d, a
      000345 1A               [ 8]  969 	ld	a, (de)
      000346 3C               [ 4]  970 	inc	a
      000347 F5               [16]  971 	push	af
      000348 2A               [ 8]  972 	ld	a,	(hl+)
      000349 66               [ 8]  973 	ld	h, (hl)
      00034A 6F               [ 4]  974 	ld	l, a
      00034B F1               [12]  975 	pop	af
      00034C 77               [ 8]  976 	ld	(hl), a
      00034D                        977 00112$:
                           00034D   978 	C$Character.h$184$1_0$159	= .
                                    979 	.globl	C$Character.h$184$1_0$159
                                    980 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:184: character->movementForceX = moveX;
      00034D 21 0C 00         [12]  981 	ld	hl, #0x000c
      000350 09               [ 8]  982 	add	hl, bc
      000351 5D               [ 4]  983 	ld	e, l
      000352 54               [ 4]  984 	ld	d, h
      000353 F8 00            [12]  985 	ldhl	sp,	#0
      000355 7E               [ 8]  986 	ld	a, (hl)
      000356 12               [ 8]  987 	ld	(de), a
                           000357   988 	C$Character.h$185$1_0$159	= .
                                    989 	.globl	C$Character.h$185$1_0$159
                                    990 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:185: character->movementForceY = moveY;
      000357 21 0D 00         [12]  991 	ld	hl, #0x000d
      00035A 09               [ 8]  992 	add	hl, bc
      00035B 4D               [ 4]  993 	ld	c, l
      00035C 44               [ 4]  994 	ld	b, h
      00035D F8 01            [12]  995 	ldhl	sp,	#1
      00035F 7E               [ 8]  996 	ld	a, (hl)
      000360 02               [ 8]  997 	ld	(bc), a
                           000361   998 	C$Character.h$186$1_0$159	= .
                                    999 	.globl	C$Character.h$186$1_0$159
                                   1000 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:186: }
      000361 E8 08            [16] 1001 	add	sp, #8
                           000363  1002 	C$Character.h$186$1_0$159	= .
                                   1003 	.globl	C$Character.h$186$1_0$159
                           000363  1004 	XG$MoveCharacterWithJoypad$0$0	= .
                                   1005 	.globl	XG$MoveCharacterWithJoypad$0$0
      000363 C9               [16] 1006 	ret
                           000364  1007 	G$SetupCharacter$0$0	= .
                                   1008 	.globl	G$SetupCharacter$0$0
                           000364  1009 	C$Character.h$189$1_0$167	= .
                                   1010 	.globl	C$Character.h$189$1_0$167
                                   1011 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:189: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                   1012 ;	---------------------------------
                                   1013 ; Function SetupCharacter
                                   1014 ; ---------------------------------
      000364                       1015 _SetupCharacter::
      000364 3B               [ 8] 1016 	dec	sp
      000365 F8 00            [12] 1017 	ldhl	sp,	#0
      000367 77               [ 8] 1018 	ld	(hl), a
                           000368  1019 	C$Character.h$191$1_0$167	= .
                                   1020 	.globl	C$Character.h$191$1_0$167
                                   1021 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:191: character->tilemap = tilemap;
      000368 21 11 00         [12] 1022 	ld	hl, #0x0011
      00036B 19               [ 8] 1023 	add	hl, de
      00036C 4D               [ 4] 1024 	ld	c, l
      00036D 44               [ 4] 1025 	ld	b, h
      00036E F8 07            [12] 1026 	ldhl	sp,	#7
      000370 2A               [ 8] 1027 	ld	a, (hl+)
      000371 02               [ 8] 1028 	ld	(bc), a
      000372 03               [ 8] 1029 	inc	bc
      000373 7E               [ 8] 1030 	ld	a, (hl)
      000374 02               [ 8] 1031 	ld	(bc), a
                           000375  1032 	C$Character.h$192$1_0$167	= .
                                   1033 	.globl	C$Character.h$192$1_0$167
                                   1034 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:192: character->spriteId = spriteId;
      000375 F8 00            [12] 1035 	ldhl	sp,	#0
      000377 7E               [ 8] 1036 	ld	a, (hl)
      000378 12               [ 8] 1037 	ld	(de), a
                           000379  1038 	C$Character.h$193$1_0$167	= .
                                   1039 	.globl	C$Character.h$193$1_0$167
                                   1040 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:193: character->spriteTileWidth = tileWidth;
      000379 4B               [ 4] 1041 	ld	c, e
      00037A 42               [ 4] 1042 	ld	b, d
      00037B 03               [ 8] 1043 	inc	bc
      00037C F8 03            [12] 1044 	ldhl	sp,	#3
                           00037E  1045 	C$Character.h$194$1_0$167	= .
                                   1046 	.globl	C$Character.h$194$1_0$167
                                   1047 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:194: character->spriteTileHeight = tileHeight;
      00037E 2A               [ 8] 1048 	ld	a, (hl+)
      00037F 02               [ 8] 1049 	ld	(bc), a
      000380 4B               [ 4] 1050 	ld	c, e
      000381 42               [ 4] 1051 	ld	b, d
      000382 03               [ 8] 1052 	inc	bc
      000383 03               [ 8] 1053 	inc	bc
      000384 7E               [ 8] 1054 	ld	a, (hl)
      000385 02               [ 8] 1055 	ld	(bc), a
                           000386  1056 	C$Character.h$195$1_0$167	= .
                                   1057 	.globl	C$Character.h$195$1_0$167
                                   1058 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:195: character->tilesetStart = tilesetStart;
      000386 21 05 00         [12] 1059 	ld	hl, #0x0005
      000389 19               [ 8] 1060 	add	hl, de
      00038A 4D               [ 4] 1061 	ld	c, l
      00038B 44               [ 4] 1062 	ld	b, h
      00038C F8 05            [12] 1063 	ldhl	sp,	#5
                           00038E  1064 	C$Character.h$196$1_0$167	= .
                                   1065 	.globl	C$Character.h$196$1_0$167
                                   1066 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:196: character->spriteFrames = totalFrames;
      00038E 2A               [ 8] 1067 	ld	a, (hl+)
      00038F 02               [ 8] 1068 	ld	(bc), a
      000390 4B               [ 4] 1069 	ld	c, e
      000391 42               [ 4] 1070 	ld	b, d
      000392 03               [ 8] 1071 	inc	bc
      000393 03               [ 8] 1072 	inc	bc
      000394 03               [ 8] 1073 	inc	bc
      000395 7E               [ 8] 1074 	ld	a, (hl)
      000396 02               [ 8] 1075 	ld	(bc), a
                           000397  1076 	C$Character.h$197$1_0$167	= .
                                   1077 	.globl	C$Character.h$197$1_0$167
                                   1078 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:197: character->underfootState = 0;
      000397 21 0E 00         [12] 1079 	ld	hl, #0x000e
      00039A 19               [ 8] 1080 	add	hl, de
      00039B 36 00            [12] 1081 	ld	(hl), #0x00
                           00039D  1082 	C$Character.h$198$1_0$167	= .
                                   1083 	.globl	C$Character.h$198$1_0$167
                                   1084 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:198: character->jumpedFrames = 0;
      00039D 21 10 00         [12] 1085 	ld	hl, #0x0010
      0003A0 19               [ 8] 1086 	add	hl, de
      0003A1 36 00            [12] 1087 	ld	(hl), #0x00
                           0003A3  1088 	C$Character.h$199$1_0$167	= .
                                   1089 	.globl	C$Character.h$199$1_0$167
                                   1090 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:199: character->hasJumped = 0;
      0003A3 21 0F 00         [12] 1091 	ld	hl, #0x000f
      0003A6 19               [ 8] 1092 	add	hl, de
      0003A7 36 00            [12] 1093 	ld	(hl), #0x00
                           0003A9  1094 	C$Character.h$201$1_0$167	= .
                                   1095 	.globl	C$Character.h$201$1_0$167
                                   1096 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:201: LoadSpriteFrame(character, 0);
      0003A9 AF               [ 4] 1097 	xor	a, a
      0003AA CDr00r00         [24] 1098 	call	_LoadSpriteFrame
                           0003AD  1099 	C$Character.h$202$1_0$167	= .
                                   1100 	.globl	C$Character.h$202$1_0$167
                                   1101 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:202: }
      0003AD 33               [ 8] 1102 	inc	sp
      0003AE E1               [12] 1103 	pop	hl
      0003AF E8 06            [16] 1104 	add	sp, #6
      0003B1 E9               [ 4] 1105 	jp	(hl)
                           0003B2  1106 	G$showTitle$0$0	= .
                                   1107 	.globl	G$showTitle$0$0
                           0003B2  1108 	C$main.c$22$1_0$171	= .
                                   1109 	.globl	C$main.c$22$1_0$171
                                   1110 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:22: void showTitle(void)
                                   1111 ;	---------------------------------
                                   1112 ; Function showTitle
                                   1113 ; ---------------------------------
      0003B2                       1114 _showTitle::
                           0003B2  1115 	C$main.c$25$1_0$171	= .
                                   1116 	.globl	C$main.c$25$1_0$171
                                   1117 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:25: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0003B2 11r00r00         [12] 1118 	ld	de, #_SplashScreenSprite_tileset
      0003B5 D5               [16] 1119 	push	de
      0003B6 21 00 C8         [12] 1120 	ld	hl, #0xc800
      0003B9 E5               [16] 1121 	push	hl
      0003BA CDr00r00         [24] 1122 	call	_set_bkg_data
      0003BD E8 04            [16] 1123 	add	sp, #4
                           0003BF  1124 	C$main.c$28$1_0$171	= .
                                   1125 	.globl	C$main.c$28$1_0$171
                                   1126 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:28: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      0003BF 11r00r00         [12] 1127 	ld	de, #_SplashScreenSprite_tilemap
      0003C2 D5               [16] 1128 	push	de
      0003C3 21 14 12         [12] 1129 	ld	hl, #0x1214
      0003C6 E5               [16] 1130 	push	hl
      0003C7 AF               [ 4] 1131 	xor	a, a
      0003C8 0F               [ 4] 1132 	rrca
      0003C9 F5               [16] 1133 	push	af
      0003CA CDr00r00         [24] 1134 	call	_set_bkg_tiles
      0003CD E8 06            [16] 1135 	add	sp, #6
                           0003CF  1136 	C$main.c$29$1_0$171	= .
                                   1137 	.globl	C$main.c$29$1_0$171
                                   1138 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:29: }
                           0003CF  1139 	C$main.c$29$1_0$171	= .
                                   1140 	.globl	C$main.c$29$1_0$171
                           0003CF  1141 	XG$showTitle$0$0	= .
                                   1142 	.globl	XG$showTitle$0$0
      0003CF C9               [16] 1143 	ret
                           0003D0  1144 	G$SetupBackGround$0$0	= .
                                   1145 	.globl	G$SetupBackGround$0$0
                           0003D0  1146 	C$main.c$31$1_0$172	= .
                                   1147 	.globl	C$main.c$31$1_0$172
                                   1148 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:31: void SetupBackGround()
                                   1149 ;	---------------------------------
                                   1150 ; Function SetupBackGround
                                   1151 ; ---------------------------------
      0003D0                       1152 _SetupBackGround::
                           0003D0  1153 	C$main.c$34$1_0$172	= .
                                   1154 	.globl	C$main.c$34$1_0$172
                                   1155 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:34: set_bkg_data(0, BackGroundSprite_tileset_size, BackGroundSprite_tileset);
      0003D0 11r00r00         [12] 1156 	ld	de, #_BackGroundSprite_tileset
      0003D3 D5               [16] 1157 	push	de
      0003D4 21 00 35         [12] 1158 	ld	hl, #0x3500
      0003D7 E5               [16] 1159 	push	hl
      0003D8 CDr00r00         [24] 1160 	call	_set_bkg_data
      0003DB E8 04            [16] 1161 	add	sp, #4
                           0003DD  1162 	C$main.c$37$1_0$172	= .
                                   1163 	.globl	C$main.c$37$1_0$172
                                   1164 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:37: set_bkg_tiles(0, 0, 40, 18, BackGroundSprite_tilemap);
      0003DD 11r00r00         [12] 1165 	ld	de, #_BackGroundSprite_tilemap
      0003E0 D5               [16] 1166 	push	de
      0003E1 21 28 12         [12] 1167 	ld	hl, #0x1228
      0003E4 E5               [16] 1168 	push	hl
      0003E5 AF               [ 4] 1169 	xor	a, a
      0003E6 0F               [ 4] 1170 	rrca
      0003E7 F5               [16] 1171 	push	af
      0003E8 CDr00r00         [24] 1172 	call	_set_bkg_tiles
      0003EB E8 06            [16] 1173 	add	sp, #6
                           0003ED  1174 	C$main.c$38$1_0$172	= .
                                   1175 	.globl	C$main.c$38$1_0$172
                                   1176 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:38: }
                           0003ED  1177 	C$main.c$38$1_0$172	= .
                                   1178 	.globl	C$main.c$38$1_0$172
                           0003ED  1179 	XG$SetupBackGround$0$0	= .
                                   1180 	.globl	XG$SetupBackGround$0$0
      0003ED C9               [16] 1181 	ret
                           0003EE  1182 	G$DetectCollisions$0$0	= .
                                   1183 	.globl	G$DetectCollisions$0$0
                           0003EE  1184 	C$main.c$40$1_0$174	= .
                                   1185 	.globl	C$main.c$40$1_0$174
                                   1186 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:40: void DetectCollisions(Character *character, uint8_t *predictedX, uint8_t *predictedY)
                                   1187 ;	---------------------------------
                                   1188 ; Function DetectCollisions
                                   1189 ; ---------------------------------
      0003EE                       1190 _DetectCollisions::
                           0003EE  1191 	C$main.c$43$1_0$174	= .
                                   1192 	.globl	C$main.c$43$1_0$174
                                   1193 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:43: if (*predictedY >= GLOUND_LEVEL)
      0003EE F8 02            [12] 1194 	ldhl	sp,	#2
      0003F0 2A               [ 8] 1195 	ld	a, (hl+)
      0003F1 4F               [ 4] 1196 	ld	c, a
      0003F2 46               [ 8] 1197 	ld	b, (hl)
      0003F3 0A               [ 8] 1198 	ld	a, (bc)
      0003F4 6F               [ 4] 1199 	ld	l, a
                                   1200 ;	spillPairReg hl
                                   1201 ;	spillPairReg hl
                           0003F5  1202 	C$main.c$49$1_0$174	= .
                                   1203 	.globl	C$main.c$49$1_0$174
                                   1204 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: character->velocityY = 0;
      0003F5 7B               [ 4] 1205 	ld	a, e
      0003F6 C6 09            [ 8] 1206 	add	a, #0x09
      0003F8 5F               [ 4] 1207 	ld	e, a
      0003F9 30 01            [12] 1208 	jr	NC, 00122$
      0003FB 14               [ 4] 1209 	inc	d
      0003FC                       1210 00122$:
                           0003FC  1211 	C$main.c$43$1_0$174	= .
                                   1212 	.globl	C$main.c$43$1_0$174
                                   1213 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:43: if (*predictedY >= GLOUND_LEVEL)
      0003FC 7D               [ 4] 1214 	ld	a, l
      0003FD D6 82            [ 8] 1215 	sub	a, #0x82
      0003FF 38 07            [12] 1216 	jr	C, 00104$
                           000401  1217 	C$main.c$46$2_0$175	= .
                                   1218 	.globl	C$main.c$46$2_0$175
                                   1219 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:46: *predictedY = GLOUND_LEVEL; 
      000401 3E 82            [ 8] 1220 	ld	a, #0x82
      000403 02               [ 8] 1221 	ld	(bc), a
                           000404  1222 	C$main.c$49$2_0$175	= .
                                   1223 	.globl	C$main.c$49$2_0$175
                                   1224 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: character->velocityY = 0;
      000404 AF               [ 4] 1225 	xor	a, a
      000405 12               [ 8] 1226 	ld	(de), a
      000406 18 0A            [12] 1227 	jr	00106$
      000408                       1228 00104$:
                           000408  1229 	C$main.c$50$1_0$174	= .
                                   1230 	.globl	C$main.c$50$1_0$174
                                   1231 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:50: }else if(*predictedY < 8)
      000408 7D               [ 4] 1232 	ld	a, l
      000409 D6 08            [ 8] 1233 	sub	a, #0x08
      00040B 30 05            [12] 1234 	jr	NC, 00106$
                           00040D  1235 	C$main.c$53$2_0$176	= .
                                   1236 	.globl	C$main.c$53$2_0$176
                                   1237 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:53: *predictedY = 8; 
      00040D 3E 08            [ 8] 1238 	ld	a, #0x08
      00040F 02               [ 8] 1239 	ld	(bc), a
                           000410  1240 	C$main.c$56$2_0$176	= .
                                   1241 	.globl	C$main.c$56$2_0$176
                                   1242 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:56: character->velocityY = 0;
      000410 AF               [ 4] 1243 	xor	a, a
      000411 12               [ 8] 1244 	ld	(de), a
      000412                       1245 00106$:
                           000412  1246 	C$main.c$58$1_0$174	= .
                                   1247 	.globl	C$main.c$58$1_0$174
                                   1248 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:58: }
      000412 E1               [12] 1249 	pop	hl
      000413 F1               [12] 1250 	pop	af
      000414 E9               [ 4] 1251 	jp	(hl)
                           000415  1252 	G$MovementPhysics$0$0	= .
                                   1253 	.globl	G$MovementPhysics$0$0
                           000415  1254 	C$main.c$60$1_0$178	= .
                                   1255 	.globl	C$main.c$60$1_0$178
                                   1256 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:60: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                   1257 ;	---------------------------------
                                   1258 ; Function MovementPhysics
                                   1259 ; ---------------------------------
      000415                       1260 _MovementPhysics::
      000415 E8 F7            [16] 1261 	add	sp, #-9
      000417 F8 07            [12] 1262 	ldhl	sp,	#7
      000419 7B               [ 4] 1263 	ld	a, e
      00041A 22               [ 8] 1264 	ld	(hl+), a
                           00041B  1265 	C$main.c$63$1_1$178	= .
                                   1266 	.globl	C$main.c$63$1_1$178
                                   1267 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: if (character->movementForceY != 0)
      00041B 7A               [ 4] 1268 	ld	a, d
      00041C 32               [ 8] 1269 	ld	(hl-), a
      00041D 2A               [ 8] 1270 	ld	a, (hl+)
      00041E 5F               [ 4] 1271 	ld	e, a
      00041F 56               [ 8] 1272 	ld	d, (hl)
      000420 21 0D 00         [12] 1273 	ld	hl, #0x000d
      000423 19               [ 8] 1274 	add	hl, de
      000424 E5               [16] 1275 	push	hl
      000425 7D               [ 4] 1276 	ld	a, l
      000426 F8 04            [12] 1277 	ldhl	sp,	#4
      000428 77               [ 8] 1278 	ld	(hl), a
      000429 E1               [12] 1279 	pop	hl
      00042A 7C               [ 4] 1280 	ld	a, h
      00042B F8 03            [12] 1281 	ldhl	sp,	#3
      00042D 32               [ 8] 1282 	ld	(hl-), a
      00042E 2A               [ 8] 1283 	ld	a, (hl+)
      00042F 5F               [ 4] 1284 	ld	e, a
      000430 56               [ 8] 1285 	ld	d, (hl)
      000431 1A               [ 8] 1286 	ld	a, (de)
      000432 F8 06            [12] 1287 	ldhl	sp,	#6
                           000434  1288 	C$main.c$65$1_1$178	= .
                                   1289 	.globl	C$main.c$65$1_1$178
                                   1290 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:65: character->velocityY += character->movementForceY;
      000434 22               [ 8] 1291 	ld	(hl+), a
      000435 2A               [ 8] 1292 	ld	a, (hl+)
      000436 5F               [ 4] 1293 	ld	e, a
      000437 56               [ 8] 1294 	ld	d, (hl)
      000438 21 09 00         [12] 1295 	ld	hl, #0x0009
      00043B 19               [ 8] 1296 	add	hl, de
      00043C 33               [ 8] 1297 	inc	sp
      00043D 33               [ 8] 1298 	inc	sp
      00043E E5               [16] 1299 	push	hl
                           00043F  1300 	C$main.c$63$1_0$178	= .
                                   1301 	.globl	C$main.c$63$1_0$178
                                   1302 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: if (character->movementForceY != 0)
      00043F F8 06            [12] 1303 	ldhl	sp,	#6
      000441 7E               [ 8] 1304 	ld	a, (hl)
      000442 B7               [ 4] 1305 	or	a, a
      000443 28 0F            [12] 1306 	jr	Z, 00116$
                           000445  1307 	C$main.c$65$2_0$179	= .
                                   1308 	.globl	C$main.c$65$2_0$179
                                   1309 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:65: character->velocityY += character->movementForceY;
      000445 D1               [12] 1310 	pop	de
      000446 D5               [16] 1311 	push	de
      000447 1A               [ 8] 1312 	ld	a, (de)
      000448 86               [ 8] 1313 	add	a, (hl)
      000449 4F               [ 4] 1314 	ld	c, a
      00044A E1               [12] 1315 	pop	hl
      00044B E5               [16] 1316 	push	hl
      00044C 71               [ 8] 1317 	ld	(hl), c
                           00044D  1318 	C$main.c$66$2_0$179	= .
                                   1319 	.globl	C$main.c$66$2_0$179
                                   1320 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:66: jumpFrameCount = 0;
      00044D 21r02r00         [12] 1321 	ld	hl, #_jumpFrameCount
      000450 36 00            [12] 1322 	ld	(hl), #0x00
      000452 18 57            [12] 1323 	jr	00117$
      000454                       1324 00116$:
                           000454  1325 	C$main.c$70$1_0$178	= .
                                   1326 	.globl	C$main.c$70$1_0$178
                                   1327 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:70: else if (character->underfootState & FOOT_IN_AIR)
      000454 F8 07            [12] 1328 	ldhl	sp,#7
      000456 2A               [ 8] 1329 	ld	a, (hl+)
      000457 5F               [ 4] 1330 	ld	e, a
      000458 56               [ 8] 1331 	ld	d, (hl)
      000459 21 0E 00         [12] 1332 	ld	hl, #0x000e
      00045C 19               [ 8] 1333 	add	hl, de
      00045D 4D               [ 4] 1334 	ld	c, l
      00045E 44               [ 4] 1335 	ld	b, h
      00045F 0A               [ 8] 1336 	ld	a, (bc)
      000460 CB 4F            [ 8] 1337 	bit	1, a
      000462 28 47            [12] 1338 	jr	Z, 00117$
                           000464  1339 	C$main.c$73$2_0$180	= .
                                   1340 	.globl	C$main.c$73$2_0$180
                                   1341 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:73: jumpFrameCount = (jumpFrameCount + 1) % 120;
      000464 21r02r00         [12] 1342 	ld	hl, #_jumpFrameCount
      000467 5E               [ 8] 1343 	ld	e, (hl)
      000468 16 00            [ 8] 1344 	ld	d, #0x00
      00046A 13               [ 8] 1345 	inc	de
      00046B 01 78 00         [12] 1346 	ld	bc, #0x0078
      00046E CDr00r00         [24] 1347 	call	__modsint
      000471 21r02r00         [12] 1348 	ld	hl, #_jumpFrameCount
      000474 71               [ 8] 1349 	ld	(hl), c
                           000475  1350 	C$main.c$76$2_0$180	= .
                                   1351 	.globl	C$main.c$76$2_0$180
                                   1352 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:76: if (jumpFrameCount < 3)
      000475 7E               [ 8] 1353 	ld	a, (hl)
      000476 D6 03            [ 8] 1354 	sub	a, #0x03
      000478 30 06            [12] 1355 	jr	NC, 00111$
                           00047A  1356 	C$main.c$77$2_0$180	= .
                                   1357 	.globl	C$main.c$77$2_0$180
                                   1358 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:77: character->velocityY = -2;
      00047A E1               [12] 1359 	pop	hl
      00047B 36 FE            [12] 1360 	ld	(hl), #0xfe
      00047D E5               [16] 1361 	push	hl
      00047E 18 2B            [12] 1362 	jr	00117$
      000480                       1363 00111$:
                           000480  1364 	C$main.c$78$2_0$180	= .
                                   1365 	.globl	C$main.c$78$2_0$180
                                   1366 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:78: else if (jumpFrameCount < 10)
      000480 FAr02r00         [16] 1367 	ld	a, (#_jumpFrameCount)
      000483 D6 0A            [ 8] 1368 	sub	a, #0x0a
      000485 30 06            [12] 1369 	jr	NC, 00108$
                           000487  1370 	C$main.c$79$2_0$180	= .
                                   1371 	.globl	C$main.c$79$2_0$180
                                   1372 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:79: character->velocityY = -1;
      000487 E1               [12] 1373 	pop	hl
      000488 36 FF            [12] 1374 	ld	(hl), #0xff
      00048A E5               [16] 1375 	push	hl
      00048B 18 1E            [12] 1376 	jr	00117$
      00048D                       1377 00108$:
                           00048D  1378 	C$main.c$80$2_0$180	= .
                                   1379 	.globl	C$main.c$80$2_0$180
                                   1380 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:80: else if (jumpFrameCount < 14)
      00048D FAr02r00         [16] 1381 	ld	a, (#_jumpFrameCount)
      000490 D6 0E            [ 8] 1382 	sub	a, #0x0e
      000492 30 06            [12] 1383 	jr	NC, 00105$
                           000494  1384 	C$main.c$81$2_0$180	= .
                                   1385 	.globl	C$main.c$81$2_0$180
                                   1386 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:81: character->velocityY = 0;
      000494 E1               [12] 1387 	pop	hl
      000495 36 00            [12] 1388 	ld	(hl), #0x00
      000497 E5               [16] 1389 	push	hl
      000498 18 11            [12] 1390 	jr	00117$
      00049A                       1391 00105$:
                           00049A  1392 	C$main.c$82$2_0$180	= .
                                   1393 	.globl	C$main.c$82$2_0$180
                                   1394 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:82: else if (jumpFrameCount < 20)
      00049A FAr02r00         [16] 1395 	ld	a, (#_jumpFrameCount)
      00049D D6 14            [ 8] 1396 	sub	a, #0x14
      00049F 30 06            [12] 1397 	jr	NC, 00102$
                           0004A1  1398 	C$main.c$83$2_0$180	= .
                                   1399 	.globl	C$main.c$83$2_0$180
                                   1400 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:83: character->velocityY = 1;
      0004A1 E1               [12] 1401 	pop	hl
      0004A2 36 01            [12] 1402 	ld	(hl), #0x01
      0004A4 E5               [16] 1403 	push	hl
      0004A5 18 04            [12] 1404 	jr	00117$
      0004A7                       1405 00102$:
                           0004A7  1406 	C$main.c$85$2_0$180	= .
                                   1407 	.globl	C$main.c$85$2_0$180
                                   1408 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:85: character->velocityY = 2;
      0004A7 E1               [12] 1409 	pop	hl
      0004A8 36 02            [12] 1410 	ld	(hl), #0x02
      0004AA E5               [16] 1411 	push	hl
      0004AB                       1412 00117$:
                           0004AB  1413 	C$main.c$89$1_0$178	= .
                                   1414 	.globl	C$main.c$89$1_0$178
                                   1415 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:89: if (character->velocityY != 0 && character->velocityY < -3)
      0004AB D1               [12] 1416 	pop	de
      0004AC D5               [16] 1417 	push	de
      0004AD 1A               [ 8] 1418 	ld	a, (de)
      0004AE B7               [ 4] 1419 	or	a,a
      0004AF 28 0A            [12] 1420 	jr	Z, 00119$
      0004B1 EE 80            [ 8] 1421 	xor	a, #0x80
      0004B3 D6 7D            [ 8] 1422 	sub	a, #0x7d
      0004B5 30 04            [12] 1423 	jr	NC, 00119$
                           0004B7  1424 	C$main.c$90$1_0$178	= .
                                   1425 	.globl	C$main.c$90$1_0$178
                                   1426 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:90: character->velocityY = -3;
      0004B7 E1               [12] 1427 	pop	hl
      0004B8 36 FD            [12] 1428 	ld	(hl), #0xfd
      0004BA E5               [16] 1429 	push	hl
      0004BB                       1430 00119$:
                           0004BB  1431 	C$main.c$89$1_1$178	= .
                                   1432 	.globl	C$main.c$89$1_1$178
                                   1433 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:89: if (character->velocityY != 0 && character->velocityY < -3)
      0004BB D1               [12] 1434 	pop	de
      0004BC D5               [16] 1435 	push	de
      0004BD 1A               [ 8] 1436 	ld	a, (de)
                           0004BE  1437 	C$main.c$91$1_0$178	= .
                                   1438 	.globl	C$main.c$91$1_0$178
                                   1439 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:91: if (character->velocityY != 0 && character->velocityY > 3)
      0004BE 4F               [ 4] 1440 	ld	c, a
      0004BF B7               [ 4] 1441 	or	a, a
      0004C0 28 1B            [12] 1442 	jr	Z, 00122$
      0004C2 59               [ 4] 1443 	ld	e, c
      0004C3 3E 03            [ 8] 1444 	ld	a,#0x03
      0004C5 57               [ 4] 1445 	ld	d,a
      0004C6 91               [ 4] 1446 	sub	a, c
      0004C7 CB 7B            [ 8] 1447 	bit	7, e
      0004C9 28 07            [12] 1448 	jr	Z, 00197$
      0004CB CB 7A            [ 8] 1449 	bit	7, d
      0004CD 20 08            [12] 1450 	jr	NZ, 00198$
      0004CF BF               [ 4] 1451 	cp	a, a
      0004D0 18 05            [12] 1452 	jr	00198$
      0004D2                       1453 00197$:
      0004D2 CB 7A            [ 8] 1454 	bit	7, d
      0004D4 28 01            [12] 1455 	jr	Z, 00198$
      0004D6 37               [ 4] 1456 	scf
      0004D7                       1457 00198$:
      0004D7 30 04            [12] 1458 	jr	NC, 00122$
                           0004D9  1459 	C$main.c$92$1_0$178	= .
                                   1460 	.globl	C$main.c$92$1_0$178
                                   1461 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:92: character->velocityY = 3;
      0004D9 E1               [12] 1462 	pop	hl
      0004DA 36 03            [12] 1463 	ld	(hl), #0x03
      0004DC E5               [16] 1464 	push	hl
      0004DD                       1465 00122$:
                           0004DD  1466 	C$main.c$95$1_1$181	= .
                                   1467 	.globl	C$main.c$95$1_1$181
                                   1468 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:95: uint8_t predictedY = character->y + character->velocityY;
      0004DD F8 07            [12] 1469 	ldhl	sp,#7
      0004DF 2A               [ 8] 1470 	ld	a, (hl+)
      0004E0 5F               [ 4] 1471 	ld	e, a
      0004E1 56               [ 8] 1472 	ld	d, (hl)
      0004E2 21 07 00         [12] 1473 	ld	hl, #0x0007
      0004E5 19               [ 8] 1474 	add	hl, de
      0004E6 4D               [ 4] 1475 	ld	c, l
      0004E7 44               [ 4] 1476 	ld	b, h
      0004E8 0A               [ 8] 1477 	ld	a, (bc)
      0004E9 F8 06            [12] 1478 	ldhl	sp,	#6
      0004EB 32               [ 8] 1479 	ld	(hl-), a
      0004EC 2B               [ 8] 1480 	dec	hl
      0004ED D1               [12] 1481 	pop	de
      0004EE D5               [16] 1482 	push	de
      0004EF 1A               [ 8] 1483 	ld	a, (de)
      0004F0 22               [ 8] 1484 	ld	(hl+), a
      0004F1 23               [ 8] 1485 	inc	hl
      0004F2 3A               [ 8] 1486 	ld	a, (hl-)
      0004F3 2B               [ 8] 1487 	dec	hl
      0004F4 86               [ 8] 1488 	add	a, (hl)
      0004F5 23               [ 8] 1489 	inc	hl
      0004F6 23               [ 8] 1490 	inc	hl
      0004F7 77               [ 8] 1491 	ld	(hl), a
      0004F8 3A               [ 8] 1492 	ld	a, (hl-)
      0004F9 77               [ 8] 1493 	ld	(hl), a
                           0004FA  1494 	C$main.c$98$1_1$181	= .
                                   1495 	.globl	C$main.c$98$1_1$181
                                   1496 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:98: DetectCollisions(character, &character->x, &predictedY);
      0004FA F8 05            [12] 1497 	ldhl	sp,	#5
      0004FC 4D               [ 4] 1498 	ld	c, l
      0004FD 44               [ 4] 1499 	ld	b, h
      0004FE F8 07            [12] 1500 	ldhl	sp,#7
      000500 2A               [ 8] 1501 	ld	a, (hl+)
      000501 5F               [ 4] 1502 	ld	e, a
      000502 56               [ 8] 1503 	ld	d, (hl)
      000503 21 06 00         [12] 1504 	ld	hl, #0x0006
      000506 19               [ 8] 1505 	add	hl, de
      000507 5D               [ 4] 1506 	ld	e, l
      000508 54               [ 4] 1507 	ld	d, h
      000509 D5               [16] 1508 	push	de
      00050A C5               [16] 1509 	push	bc
      00050B 4B               [ 4] 1510 	ld	c, e
      00050C 42               [ 4] 1511 	ld	b, d
      00050D F8 0B            [12] 1512 	ldhl	sp,	#11
      00050F 2A               [ 8] 1513 	ld	a, (hl+)
      000510 5F               [ 4] 1514 	ld	e, a
      000511 56               [ 8] 1515 	ld	d, (hl)
      000512 CDrEEr03         [24] 1516 	call	_DetectCollisions
      000515 D1               [12] 1517 	pop	de
                           000516  1518 	C$main.c$101$1_1$181	= .
                                   1519 	.globl	C$main.c$101$1_1$181
                                   1520 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:101: MoveCharacter(character, character->x, predictedY);
      000516 1A               [ 8] 1521 	ld	a, (de)
      000517 4F               [ 4] 1522 	ld	c, a
      000518 F8 05            [12] 1523 	ldhl	sp,	#5
      00051A 2A               [ 8] 1524 	ld	a, (hl+)
      00051B 23               [ 8] 1525 	inc	hl
      00051C F5               [16] 1526 	push	af
      00051D 33               [ 8] 1527 	inc	sp
      00051E 79               [ 4] 1528 	ld	a, c
      00051F 5E               [ 8] 1529 	ld	e, (hl)
      000520 23               [ 8] 1530 	inc	hl
      000521 56               [ 8] 1531 	ld	d, (hl)
      000522 CDr05r02         [24] 1532 	call	_MoveCharacter
                           000525  1533 	C$main.c$104$1_1$181	= .
                                   1534 	.globl	C$main.c$104$1_1$181
                                   1535 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:104: lastMovementY = character->movementForceY;
      000525 F8 02            [12] 1536 	ldhl	sp,#2
      000527 2A               [ 8] 1537 	ld	a, (hl+)
      000528 5F               [ 4] 1538 	ld	e, a
      000529 56               [ 8] 1539 	ld	d, (hl)
      00052A 1A               [ 8] 1540 	ld	a, (de)
      00052B EAr04r00         [16] 1541 	ld	(#_lastMovementY),a
                           00052E  1542 	C$main.c$105$1_1$178	= .
                                   1543 	.globl	C$main.c$105$1_1$178
                                   1544 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:105: }
      00052E E8 09            [16] 1545 	add	sp, #9
                           000530  1546 	C$main.c$105$1_1$178	= .
                                   1547 	.globl	C$main.c$105$1_1$178
                           000530  1548 	XG$MovementPhysics$0$0	= .
                                   1549 	.globl	XG$MovementPhysics$0$0
      000530 C9               [16] 1550 	ret
                           000531  1551 	G$main$0$0	= .
                                   1552 	.globl	G$main$0$0
                           000531  1553 	C$main.c$107$1_1$183	= .
                                   1554 	.globl	C$main.c$107$1_1$183
                                   1555 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:107: void main(void)
                                   1556 ;	---------------------------------
                                   1557 ; Function main
                                   1558 ; ---------------------------------
      000531                       1559 _main::
                           000531  1560 	C$main.c$109$1_0$183	= .
                                   1561 	.globl	C$main.c$109$1_0$183
                                   1562 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:109: SetupBackGround();
      000531 CDrD0r03         [24] 1563 	call	_SetupBackGround
                           000534  1564 	C$main.c$111$1_0$183	= .
                                   1565 	.globl	C$main.c$111$1_0$183
                                   1566 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:111: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      000534 11r00r00         [12] 1567 	ld	de, #_BirdSprite_tileset
      000537 D5               [16] 1568 	push	de
      000538 21 00 26         [12] 1569 	ld	hl, #0x2600
      00053B E5               [16] 1570 	push	hl
      00053C CDr00r00         [24] 1571 	call	_set_sprite_data
      00053F E8 04            [16] 1572 	add	sp, #4
                           000541  1573 	C$main.c$113$1_0$183	= .
                                   1574 	.globl	C$main.c$113$1_0$183
                                   1575 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:113: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      000541 11r00r00         [12] 1576 	ld	de, #_BirdSprite_tilemap
      000544 D5               [16] 1577 	push	de
      000545 3E 08            [ 8] 1578 	ld	a, #0x08
      000547 F5               [16] 1579 	push	af
      000548 33               [ 8] 1580 	inc	sp
      000549 AF               [ 4] 1581 	xor	a, a
      00054A 67               [ 4] 1582 	ld	h, a
      00054B 2E 02            [ 8] 1583 	ld	l, #0x02
      00054D E5               [16] 1584 	push	hl
      00054E 3E 02            [ 8] 1585 	ld	a, #0x02
      000550 F5               [16] 1586 	push	af
      000551 33               [ 8] 1587 	inc	sp
      000552 AF               [ 4] 1588 	xor	a, a
      000553 11r00r00         [12] 1589 	ld	de, #_player
      000556 CDr64r03         [24] 1590 	call	_SetupCharacter
                           000559  1591 	C$main.c$115$1_0$183	= .
                                   1592 	.globl	C$main.c$115$1_0$183
                                   1593 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:115: MoveCharacter(&player, 16, 56);
      000559 3E 38            [ 8] 1594 	ld	a, #0x38
      00055B F5               [16] 1595 	push	af
      00055C 33               [ 8] 1596 	inc	sp
      00055D 3E 10            [ 8] 1597 	ld	a, #0x10
      00055F 11r00r00         [12] 1598 	ld	de, #_player
      000562 CDr05r02         [24] 1599 	call	_MoveCharacter
                           000565  1600 	C$main.c$117$1_0$183	= .
                                   1601 	.globl	C$main.c$117$1_0$183
                                   1602 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:117: SHOW_BKG;
      000565 F0r00            [12] 1603 	ldh	a, (_LCDC_REG + 0)
      000567 F6 01            [ 8] 1604 	or	a, #0x01
      000569 E0r00            [12] 1605 	ldh	(_LCDC_REG + 0), a
                           00056B  1606 	C$main.c$118$1_0$183	= .
                                   1607 	.globl	C$main.c$118$1_0$183
                                   1608 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:118: SHOW_SPRITES;
      00056B F0r00            [12] 1609 	ldh	a, (_LCDC_REG + 0)
      00056D F6 02            [ 8] 1610 	or	a, #0x02
      00056F E0r00            [12] 1611 	ldh	(_LCDC_REG + 0), a
                           000571  1612 	C$main.c$119$1_0$183	= .
                                   1613 	.globl	C$main.c$119$1_0$183
                                   1614 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:119: DISPLAY_ON;
      000571 F0r00            [12] 1615 	ldh	a, (_LCDC_REG + 0)
      000573 F6 80            [ 8] 1616 	or	a, #0x80
      000575 E0r00            [12] 1617 	ldh	(_LCDC_REG + 0), a
                           000577  1618 	C$main.c$121$1_0$183	= .
                                   1619 	.globl	C$main.c$121$1_0$183
                                   1620 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: while(1)
      000577                       1621 00102$:
                           000577  1622 	C$main.c$123$2_0$184	= .
                                   1623 	.globl	C$main.c$123$2_0$184
                                   1624 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:123: player.underfootState = player.y >= GLOUND_LEVEL ? FOOT_ON_LAND : FOOT_IN_AIR;
      000577 FAr07r00         [16] 1625 	ld	a, (#(_player + 7) + 0)
      00057A D6 82            [ 8] 1626 	sub	a, #0x82
      00057C 38 04            [12] 1627 	jr	C, 00107$
      00057E 3E 01            [ 8] 1628 	ld	a, #0x01
      000580 18 02            [12] 1629 	jr	00108$
      000582                       1630 00107$:
      000582 3E 02            [ 8] 1631 	ld	a, #0x02
      000584                       1632 00108$:
      000584 EAr0Er00         [16] 1633 	ld	(#(_player + 14)),a
                           000587  1634 	C$main.c$124$2_0$184	= .
                                   1635 	.globl	C$main.c$124$2_0$184
                                   1636 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:124: MoveCharacterWithJoypad(&player);
      000587 11r00r00         [12] 1637 	ld	de, #_player
      00058A CDrD6r02         [24] 1638 	call	_MoveCharacterWithJoypad
                           00058D  1639 	C$main.c$125$2_0$184	= .
                                   1640 	.globl	C$main.c$125$2_0$184
                                   1641 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:125: MovementPhysics(&player, 3);
      00058D 3E 03            [ 8] 1642 	ld	a, #0x03
      00058F 11r00r00         [12] 1643 	ld	de, #_player
      000592 CDr15r04         [24] 1644 	call	_MovementPhysics
                           000595  1645 	C$main.c$126$2_0$184	= .
                                   1646 	.globl	C$main.c$126$2_0$184
                                   1647 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:126: LoadNextSpriteFrame(&player);
      000595 11r00r00         [12] 1648 	ld	de, #_player
      000598 CDrB3r01         [24] 1649 	call	_LoadNextSpriteFrame
                                   1650 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1392: SCX_REG+=x, SCY_REG+=y;
      00059B F0r00            [12] 1651 	ldh	a, (_SCX_REG + 0)
      00059D 3C               [ 4] 1652 	inc	a
      00059E E0r00            [12] 1653 	ldh	(_SCX_REG + 0), a
                           0005A0  1654 	C$main.c$129$2_0$184	= .
                                   1655 	.globl	C$main.c$129$2_0$184
                                   1656 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:129: wait_vbl_done();
      0005A0 CDr00r00         [24] 1657 	call	_wait_vbl_done
                           0005A3  1658 	C$main.c$131$1_0$183	= .
                                   1659 	.globl	C$main.c$131$1_0$183
                                   1660 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:131: }
                           0005A3  1661 	C$main.c$131$1_0$183	= .
                                   1662 	.globl	C$main.c$131$1_0$183
                           0005A3  1663 	XG$main$0$0	= .
                                   1664 	.globl	XG$main$0$0
      0005A3 18 D2            [12] 1665 	jr	00102$
                                   1666 	.area _CODE
                                   1667 	.area _INITIALIZER
                           000000  1668 Fmain$__xinit_movementFrameCount$0_0$0 == .
      000000                       1669 __xinit__movementFrameCount:
      000000 00                    1670 	.db #0x00	; 0
                           000001  1671 Fmain$__xinit_animationFrameCount$0_0$0 == .
      000001                       1672 __xinit__animationFrameCount:
      000001 00                    1673 	.db #0x00	; 0
                           000002  1674 Fmain$__xinit_jumpFrameCount$0_0$0 == .
      000002                       1675 __xinit__jumpFrameCount:
      000002 00                    1676 	.db #0x00	; 0
                           000003  1677 Fmain$__xinit_lastMovementX$0_0$0 == .
      000003                       1678 __xinit__lastMovementX:
      000003 00                    1679 	.db #0x00	;  0
                           000004  1680 Fmain$__xinit_lastMovementY$0_0$0 == .
      000004                       1681 __xinit__lastMovementY:
      000004 00                    1682 	.db #0x00	;  0
                           000005  1683 Fmain$__xinit_slowingX$0_0$0 == .
      000005                       1684 __xinit__slowingX:
      000005 00                    1685 	.db #0x00	;  0
                                   1686 	.area _CABS (ABS)
