                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _MovementPhysics
                                     13 	.globl _DetectCollisions
                                     14 	.globl _SetupCharacter
                                     15 	.globl _MoveCharacterWithJoypad
                                     16 	.globl _ScrollCharacter
                                     17 	.globl _MoveCharacter
                                     18 	.globl _SetSpriteFlip
                                     19 	.globl _LoadNextSpriteFrame
                                     20 	.globl _RefreshSprite
                                     21 	.globl _LoadSpriteFrame
                                     22 	.globl _set_sprite_data
                                     23 	.globl _set_bkg_tiles
                                     24 	.globl _set_bkg_data
                                     25 	.globl _wait_vbl_done
                                     26 	.globl _joypad
                                     27 	.globl _slowingX
                                     28 	.globl _lastMovementY
                                     29 	.globl _lastMovementX
                                     30 	.globl _jumpFrameCount
                                     31 	.globl _animationFrameCount
                                     32 	.globl _movementFrameCount
                                     33 	.globl _player
                                     34 	.globl _showTitle
                                     35 	.globl _SetupBackGround
                                     36 ;--------------------------------------------------------
                                     37 ; special function registers
                                     38 ;--------------------------------------------------------
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area _DATA
                           000000    43 G$player$0_0$0==.
      000000                         44 _player::
      000000                         45 	.ds 19
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _INITIALIZED
                           000000    50 G$movementFrameCount$0_0$0==.
      000000                         51 _movementFrameCount::
      000000                         52 	.ds 1
                           000001    53 G$animationFrameCount$0_0$0==.
      000001                         54 _animationFrameCount::
      000001                         55 	.ds 1
                           000002    56 G$jumpFrameCount$0_0$0==.
      000002                         57 _jumpFrameCount::
      000002                         58 	.ds 1
                           000003    59 G$lastMovementX$0_0$0==.
      000003                         60 _lastMovementX::
      000003                         61 	.ds 1
                           000004    62 G$lastMovementY$0_0$0==.
      000004                         63 _lastMovementY::
      000004                         64 	.ds 1
                           000005    65 G$slowingX$0_0$0==.
      000005                         66 _slowingX::
      000005                         67 	.ds 1
                                     68 ;--------------------------------------------------------
                                     69 ; absolute external ram data
                                     70 ;--------------------------------------------------------
                                     71 	.area _DABS (ABS)
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area _HOME
                                     76 	.area _GSINIT
                                     77 	.area _GSFINAL
                                     78 	.area _GSINIT
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area _HOME
                                     83 	.area _HOME
                                     84 ;--------------------------------------------------------
                                     85 ; code
                                     86 ;--------------------------------------------------------
                                     87 	.area _CODE
                           000000    88 	G$LoadSpriteFrame$0$0	= .
                                     89 	.globl	G$LoadSpriteFrame$0$0
                           000000    90 	C$Character.h$68$0_0$130	= .
                                     91 	.globl	C$Character.h$68$0_0$130
                                     92 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:68: void LoadSpriteFrame(Character* character, uint8_t frame)
                                     93 ;	---------------------------------
                                     94 ; Function LoadSpriteFrame
                                     95 ; ---------------------------------
      000000                         96 _LoadSpriteFrame::
      000000 E8 E9            [16]   97 	add	sp, #-23
      000002 F8 13            [12]   98 	ldhl	sp,	#19
      000004 73               [ 8]   99 	ld	(hl), e
      000005 23               [ 8]  100 	inc	hl
      000006 72               [ 8]  101 	ld	(hl), d
                           000007   102 	C$Character.h$70$1_0$130	= .
                                    103 	.globl	C$Character.h$70$1_0$130
                                    104 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:70: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]  105 	dec	hl
      000008 47               [ 4]  106 	ld	b, a
      000009 2A               [ 8]  107 	ld	a, (hl+)
      00000A 5F               [ 4]  108 	ld	e, a
      00000B 56               [ 8]  109 	ld	d, (hl)
      00000C 21 04 00         [12]  110 	ld	hl, #0x0004
      00000F 19               [ 8]  111 	add	hl, de
      000010 5D               [ 4]  112 	ld	e, l
      000011 54               [ 4]  113 	ld	d, h
      000012 78               [ 4]  114 	ld	a, b
      000013 12               [ 8]  115 	ld	(de), a
                           000014   116 	C$Character.h$72$1_1$131	= .
                                    117 	.globl	C$Character.h$72$1_1$131
                                    118 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  119 	ldhl	sp,#19
      000016 2A               [ 8]  120 	ld	a, (hl+)
      000017 5F               [ 4]  121 	ld	e, a
      000018 56               [ 8]  122 	ld	d, (hl)
      000019 6B               [ 4]  123 	ld	l, e
      00001A 62               [ 4]  124 	ld	h, d
      00001B 23               [ 8]  125 	inc	hl
      00001C 33               [ 8]  126 	inc	sp
      00001D 33               [ 8]  127 	inc	sp
      00001E 5D               [ 4]  128 	ld	e, l
      00001F 54               [ 4]  129 	ld	d, h
      000020 D5               [16]  130 	push	de
      000021 1A               [ 8]  131 	ld	a, (de)
      000022 4F               [ 4]  132 	ld	c, a
      000023 F8 13            [12]  133 	ldhl	sp,#19
      000025 2A               [ 8]  134 	ld	a, (hl+)
      000026 5F               [ 4]  135 	ld	e, a
      000027 56               [ 8]  136 	ld	d, (hl)
      000028 21 02 00         [12]  137 	ld	hl, #0x0002
      00002B 19               [ 8]  138 	add	hl, de
      00002C E5               [16]  139 	push	hl
      00002D 7D               [ 4]  140 	ld	a, l
      00002E F8 04            [12]  141 	ldhl	sp,	#4
      000030 77               [ 8]  142 	ld	(hl), a
      000031 E1               [12]  143 	pop	hl
      000032 7C               [ 4]  144 	ld	a, h
      000033 F8 03            [12]  145 	ldhl	sp,	#3
      000035 32               [ 8]  146 	ld	(hl-), a
      000036 2A               [ 8]  147 	ld	a, (hl+)
      000037 5F               [ 4]  148 	ld	e, a
      000038 56               [ 8]  149 	ld	d, (hl)
      000039 1A               [ 8]  150 	ld	a, (de)
      00003A 6F               [ 4]  151 	ld	l, a
                                    152 ;	spillPairReg hl
                                    153 ;	spillPairReg hl
      00003B C5               [16]  154 	push	bc
      00003C 5D               [ 4]  155 	ld	e, l
      00003D 79               [ 4]  156 	ld	a, c
                           00003E   157 	C$Character.h$75$2_1$130	= .
                                    158 	.globl	C$Character.h$75$2_1$130
                                    159 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:75: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  160 	call	__muluchar
      000041 F1               [12]  161 	pop	af
      000042 47               [ 4]  162 	ld	b, a
      000043 F8 13            [12]  163 	ldhl	sp,#19
      000045 2A               [ 8]  164 	ld	a, (hl+)
      000046 5F               [ 4]  165 	ld	e, a
      000047 56               [ 8]  166 	ld	d, (hl)
      000048 21 0A 00         [12]  167 	ld	hl, #0x000a
      00004B 19               [ 8]  168 	add	hl, de
      00004C E5               [16]  169 	push	hl
      00004D 7D               [ 4]  170 	ld	a, l
      00004E F8 06            [12]  171 	ldhl	sp,	#6
      000050 77               [ 8]  172 	ld	(hl), a
      000051 E1               [12]  173 	pop	hl
      000052 7C               [ 4]  174 	ld	a, h
      000053 F8 05            [12]  175 	ldhl	sp,	#5
      000055 77               [ 8]  176 	ld	(hl), a
      000056 F8 13            [12]  177 	ldhl	sp,#19
      000058 2A               [ 8]  178 	ld	a, (hl+)
      000059 5F               [ 4]  179 	ld	e, a
      00005A 56               [ 8]  180 	ld	d, (hl)
      00005B 21 0B 00         [12]  181 	ld	hl, #0x000b
      00005E 19               [ 8]  182 	add	hl, de
      00005F E5               [16]  183 	push	hl
      000060 7D               [ 4]  184 	ld	a, l
      000061 F8 08            [12]  185 	ldhl	sp,	#8
      000063 77               [ 8]  186 	ld	(hl), a
      000064 E1               [12]  187 	pop	hl
      000065 7C               [ 4]  188 	ld	a, h
      000066 F8 07            [12]  189 	ldhl	sp,	#7
      000068 77               [ 8]  190 	ld	(hl), a
      000069 F8 13            [12]  191 	ldhl	sp,#19
      00006B 2A               [ 8]  192 	ld	a, (hl+)
      00006C 5F               [ 4]  193 	ld	e, a
      00006D 56               [ 8]  194 	ld	d, (hl)
      00006E 21 11 00         [12]  195 	ld	hl, #0x0011
      000071 19               [ 8]  196 	add	hl, de
      000072 E5               [16]  197 	push	hl
      000073 7D               [ 4]  198 	ld	a, l
      000074 F8 0A            [12]  199 	ldhl	sp,	#10
      000076 77               [ 8]  200 	ld	(hl), a
      000077 E1               [12]  201 	pop	hl
      000078 7C               [ 4]  202 	ld	a, h
      000079 F8 09            [12]  203 	ldhl	sp,	#9
      00007B 77               [ 8]  204 	ld	(hl), a
      00007C 59               [ 4]  205 	ld	e, c
      00007D 78               [ 4]  206 	ld	a, b
      00007E CDr00r00         [24]  207 	call	__muluchar
      000081 F8 0A            [12]  208 	ldhl	sp,	#10
      000083 79               [ 4]  209 	ld	a, c
      000084 22               [ 8]  210 	ld	(hl+), a
      000085 70               [ 8]  211 	ld	(hl), b
      000086 F8 13            [12]  212 	ldhl	sp,#19
      000088 2A               [ 8]  213 	ld	a, (hl+)
      000089 5F               [ 4]  214 	ld	e, a
      00008A 56               [ 8]  215 	ld	d, (hl)
      00008B 21 05 00         [12]  216 	ld	hl, #0x0005
      00008E 19               [ 8]  217 	add	hl, de
      00008F E5               [16]  218 	push	hl
      000090 7D               [ 4]  219 	ld	a, l
      000091 F8 0E            [12]  220 	ldhl	sp,	#14
      000093 77               [ 8]  221 	ld	(hl), a
      000094 E1               [12]  222 	pop	hl
      000095 7C               [ 4]  223 	ld	a, h
      000096 F8 0D            [12]  224 	ldhl	sp,	#13
      000098 77               [ 8]  225 	ld	(hl), a
      000099 F8 15            [12]  226 	ldhl	sp,	#21
      00009B 36 00            [12]  227 	ld	(hl), #0x00
      00009D                        228 00109$:
      00009D F8 02            [12]  229 	ldhl	sp,#2
      00009F 2A               [ 8]  230 	ld	a, (hl+)
      0000A0 5F               [ 4]  231 	ld	e, a
      0000A1 56               [ 8]  232 	ld	d, (hl)
      0000A2 1A               [ 8]  233 	ld	a, (de)
      0000A3 47               [ 4]  234 	ld	b, a
      0000A4 F8 15            [12]  235 	ldhl	sp,	#21
      0000A6 7E               [ 8]  236 	ld	a, (hl)
      0000A7 90               [ 4]  237 	sub	a, b
      0000A8 CArA7r01         [16]  238 	jp	Z,00111$
                           0000AB   239 	C$Character.h$76$2_1$130	= .
                                    240 	.globl	C$Character.h$76$2_1$130
                                    241 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  242 	ldhl	sp,	#22
      0000AD 36 00            [12]  243 	ld	(hl), #0x00
      0000AF                        244 00106$:
                           0000AF   245 	C$Character.h$72$2_1$130	= .
                                    246 	.globl	C$Character.h$72$2_1$130
                                    247 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  248 	pop	de
      0000B0 D5               [16]  249 	push	de
      0000B1 1A               [ 8]  250 	ld	a, (de)
      0000B2 F8 10            [12]  251 	ldhl	sp,	#16
      0000B4 77               [ 8]  252 	ld	(hl), a
                           0000B5   253 	C$Character.h$76$3_1$133	= .
                                    254 	.globl	C$Character.h$76$3_1$133
                                    255 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  256 	ldhl	sp,	#22
      0000B7 7E               [ 8]  257 	ld	a, (hl)
      0000B8 F8 10            [12]  258 	ldhl	sp,	#16
      0000BA 96               [ 8]  259 	sub	a, (hl)
      0000BB CArA1r01         [16]  260 	jp	Z,00110$
                           0000BE   261 	C$Character.h$79$2_1$130	= .
                                    262 	.globl	C$Character.h$79$2_1$130
                                    263 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  264 	ldhl	sp,#4
      0000C0 2A               [ 8]  265 	ld	a, (hl+)
      0000C1 5F               [ 4]  266 	ld	e, a
      0000C2 56               [ 8]  267 	ld	d, (hl)
      0000C3 1A               [ 8]  268 	ld	a, (de)
      0000C4 F8 11            [12]  269 	ldhl	sp,	#17
      0000C6 77               [ 8]  270 	ld	(hl), a
      0000C7 7E               [ 8]  271 	ld	a, (hl)
      0000C8 B7               [ 4]  272 	or	a, a
      0000C9 28 09            [12]  273 	jr	Z, 00113$
      0000CB 2B               [ 8]  274 	dec	hl
      0000CC 7E               [ 8]  275 	ld	a, (hl)
      0000CD 3D               [ 4]  276 	dec	a
      0000CE F8 16            [12]  277 	ldhl	sp,	#22
      0000D0 4E               [ 8]  278 	ld	c, (hl)
      0000D1 91               [ 4]  279 	sub	a, c
      0000D2 18 03            [12]  280 	jr	00114$
      0000D4                        281 00113$:
      0000D4 F8 16            [12]  282 	ldhl	sp,	#22
      0000D6 7E               [ 8]  283 	ld	a, (hl)
      0000D7                        284 00114$:
      0000D7 4F               [ 4]  285 	ld	c, a
                           0000D8   286 	C$Character.h$80$2_1$130	= .
                                    287 	.globl	C$Character.h$80$2_1$130
                                    288 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:80: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  289 	ldhl	sp,#6
      0000DA 2A               [ 8]  290 	ld	a, (hl+)
      0000DB 5F               [ 4]  291 	ld	e, a
      0000DC 56               [ 8]  292 	ld	d, (hl)
      0000DD 1A               [ 8]  293 	ld	a, (de)
      0000DE F8 12            [12]  294 	ldhl	sp,	#18
      0000E0 77               [ 8]  295 	ld	(hl), a
      0000E1 7E               [ 8]  296 	ld	a, (hl)
      0000E2 B7               [ 4]  297 	or	a, a
      0000E3 28 0D            [12]  298 	jr	Z, 00115$
      0000E5 F8 02            [12]  299 	ldhl	sp,#2
      0000E7 2A               [ 8]  300 	ld	a, (hl+)
      0000E8 5F               [ 4]  301 	ld	e, a
      0000E9 56               [ 8]  302 	ld	d, (hl)
      0000EA 1A               [ 8]  303 	ld	a, (de)
      0000EB 3D               [ 4]  304 	dec	a
      0000EC F8 15            [12]  305 	ldhl	sp,	#21
      0000EE 46               [ 8]  306 	ld	b, (hl)
      0000EF 90               [ 4]  307 	sub	a, b
      0000F0 18 03            [12]  308 	jr	00116$
      0000F2                        309 00115$:
      0000F2 F8 15            [12]  310 	ldhl	sp,	#21
      0000F4 7E               [ 8]  311 	ld	a, (hl)
      0000F5                        312 00116$:
      0000F5 47               [ 4]  313 	ld	b, a
                           0000F6   314 	C$Character.h$83$4_1$134	= .
                                    315 	.globl	C$Character.h$83$4_1$134
                                    316 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:83: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  317 	ldhl	sp,#19
      0000F8 2A               [ 8]  318 	ld	a, (hl+)
      0000F9 5F               [ 4]  319 	ld	e, a
      0000FA 56               [ 8]  320 	ld	d, (hl)
      0000FB 1A               [ 8]  321 	ld	a, (de)
      0000FC 81               [ 4]  322 	add	a, c
      0000FD 4F               [ 4]  323 	ld	c, a
      0000FE C5               [16]  324 	push	bc
      0000FF F8 12            [12]  325 	ldhl	sp,	#18
      000101 5E               [ 8]  326 	ld	e, (hl)
      000102 78               [ 4]  327 	ld	a, b
      000103 CDr00r00         [24]  328 	call	__muluchar
      000106 79               [ 4]  329 	ld	a, c
      000107 C1               [12]  330 	pop	bc
      000108 81               [ 4]  331 	add	a, c
      000109 F8 0E            [12]  332 	ldhl	sp,	#14
      00010B 77               [ 8]  333 	ld	(hl), a
                                    334 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:86: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  335 	ldhl	sp,	#17
      00010E 7E               [ 8]  336 	ld	a, (hl)
      00010F B7               [ 4]  337 	or	a, a
      000110 28 09            [12]  338 	jr	Z, 00117$
      000112 2B               [ 8]  339 	dec	hl
      000113 2B               [ 8]  340 	dec	hl
      000114 3E 20            [ 8]  341 	ld	a, #0x20
      000116 22               [ 8]  342 	ld	(hl+), a
      000117 AF               [ 4]  343 	xor	a, a
      000118 77               [ 8]  344 	ld	(hl), a
      000119 18 05            [12]  345 	jr	00118$
      00011B                        346 00117$:
      00011B AF               [ 4]  347 	xor	a, a
      00011C F8 0F            [12]  348 	ldhl	sp,	#15
      00011E 22               [ 8]  349 	ld	(hl+), a
      00011F 77               [ 8]  350 	ld	(hl), a
      000120                        351 00118$:
      000120 F8 12            [12]  352 	ldhl	sp,	#18
      000122 7E               [ 8]  353 	ld	a, (hl)
      000123 B7               [ 4]  354 	or	a, a
      000124 28 08            [12]  355 	jr	Z, 00119$
      000126 2B               [ 8]  356 	dec	hl
      000127 3E 40            [ 8]  357 	ld	a, #0x40
      000129 22               [ 8]  358 	ld	(hl+), a
      00012A AF               [ 4]  359 	xor	a, a
      00012B 77               [ 8]  360 	ld	(hl), a
      00012C 18 05            [12]  361 	jr	00120$
      00012E                        362 00119$:
      00012E AF               [ 4]  363 	xor	a, a
      00012F F8 11            [12]  364 	ldhl	sp,	#17
      000131 22               [ 8]  365 	ld	(hl+), a
      000132 77               [ 8]  366 	ld	(hl), a
      000133                        367 00120$:
      000133 F8 0F            [12]  368 	ldhl	sp,	#15
      000135 2A               [ 8]  369 	ld	a, (hl+)
      000136 23               [ 8]  370 	inc	hl
      000137 4E               [ 8]  371 	ld	c, (hl)
      000138 B1               [ 4]  372 	or	a, c
      000139 5F               [ 4]  373 	ld	e, a
                                    374 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  375 	ldhl	sp,	#14
      00013C 4E               [ 8]  376 	ld	c, (hl)
      00013D 06 00            [ 8]  377 	ld	b, #0x00
      00013F CB 21            [ 8]  378 	sla	c
      000141 CB 10            [ 8]  379 	rl	b
      000143 CB 21            [ 8]  380 	sla	c
      000145 CB 10            [ 8]  381 	rl	b
      000147 21r01r00         [12]  382 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  383 	add	hl,bc
      00014B 23               [ 8]  384 	inc	hl
      00014C 23               [ 8]  385 	inc	hl
      00014D 73               [ 8]  386 	ld	(hl), e
                                    387 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  388 	ldhl	sp,#8
      000150 2A               [ 8]  389 	ld	a, (hl+)
      000151 5F               [ 4]  390 	ld	e, a
      000152 56               [ 8]  391 	ld	d, (hl)
      000153 1A               [ 8]  392 	ld	a, (de)
      000154 F8 0F            [12]  393 	ldhl	sp,	#15
      000156 22               [ 8]  394 	ld	(hl+), a
      000157 13               [ 8]  395 	inc	de
      000158 1A               [ 8]  396 	ld	a, (de)
      000159 77               [ 8]  397 	ld	(hl), a
      00015A F8 16            [12]  398 	ldhl	sp,	#22
      00015C 7E               [ 8]  399 	ld	a, (hl)
      00015D F8 11            [12]  400 	ldhl	sp,	#17
      00015F 22               [ 8]  401 	ld	(hl+), a
      000160 36 00            [12]  402 	ld	(hl), #0x00
      000162 D1               [12]  403 	pop	de
      000163 D5               [16]  404 	push	de
      000164 1A               [ 8]  405 	ld	a, (de)
      000165 6F               [ 4]  406 	ld	l, a
                                    407 ;	spillPairReg hl
                                    408 ;	spillPairReg hl
      000166 C5               [16]  409 	push	bc
      000167 5D               [ 4]  410 	ld	e, l
      000168 F8 17            [12]  411 	ldhl	sp,	#23
      00016A 7E               [ 8]  412 	ld	a, (hl)
      00016B CDr00r00         [24]  413 	call	__muluchar
      00016E 59               [ 4]  414 	ld	e, c
      00016F 50               [ 4]  415 	ld	d, b
      000170 C1               [12]  416 	pop	bc
      000171 F8 11            [12]  417 	ldhl	sp,	#17
      000173 2A               [ 8]  418 	ld	a,	(hl+)
      000174 66               [ 8]  419 	ld	h, (hl)
      000175 6F               [ 4]  420 	ld	l, a
      000176 19               [ 8]  421 	add	hl, de
      000177 5D               [ 4]  422 	ld	e, l
      000178 54               [ 4]  423 	ld	d, h
      000179 F8 0A            [12]  424 	ldhl	sp,	#10
      00017B 2A               [ 8]  425 	ld	a,	(hl+)
      00017C 66               [ 8]  426 	ld	h, (hl)
      00017D 6F               [ 4]  427 	ld	l, a
      00017E 19               [ 8]  428 	add	hl, de
      00017F 5D               [ 4]  429 	ld	e, l
      000180 54               [ 4]  430 	ld	d, h
      000181 F8 0F            [12]  431 	ldhl	sp,	#15
      000183 2A               [ 8]  432 	ld	a,	(hl+)
      000184 66               [ 8]  433 	ld	h, (hl)
      000185 6F               [ 4]  434 	ld	l, a
      000186 19               [ 8]  435 	add	hl, de
      000187 5D               [ 4]  436 	ld	e, l
      000188 54               [ 4]  437 	ld	d, h
      000189 1A               [ 8]  438 	ld	a, (de)
      00018A F8 0C            [12]  439 	ldhl	sp,#12
      00018C 5E               [ 8]  440 	ld	e, (hl)
      00018D 23               [ 8]  441 	inc	hl
      00018E 56               [ 8]  442 	ld	d, (hl)
      00018F F5               [16]  443 	push	af
      000190 1A               [ 8]  444 	ld	a, (de)
      000191 6F               [ 4]  445 	ld	l, a
                                    446 ;	spillPairReg hl
                                    447 ;	spillPairReg hl
      000192 F1               [12]  448 	pop	af
      000193 85               [ 4]  449 	add	a, l
      000194 5F               [ 4]  450 	ld	e, a
                                    451 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  452 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  453 	add	hl,bc
      000199 23               [ 8]  454 	inc	hl
      00019A 73               [ 8]  455 	ld	(hl), e
                           00019B   456 	C$Character.h$76$3_1$133	= .
                                    457 	.globl	C$Character.h$76$3_1$133
                                    458 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  459 	ldhl	sp,	#22
      00019D 34               [12]  460 	inc	(hl)
      00019E C3rAFr00         [16]  461 	jp	00106$
      0001A1                        462 00110$:
                           0001A1   463 	C$Character.h$75$2_1$132	= .
                                    464 	.globl	C$Character.h$75$2_1$132
                                    465 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:75: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  466 	ldhl	sp,	#21
      0001A3 34               [12]  467 	inc	(hl)
      0001A4 C3r9Dr00         [16]  468 	jp	00109$
      0001A7                        469 00111$:
                           0001A7   470 	C$Character.h$91$2_1$130	= .
                                    471 	.globl	C$Character.h$91$2_1$130
                                    472 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:91: }
      0001A7 E8 17            [16]  473 	add	sp, #23
                           0001A9   474 	C$Character.h$91$2_1$130	= .
                                    475 	.globl	C$Character.h$91$2_1$130
                           0001A9   476 	XG$LoadSpriteFrame$0$0	= .
                                    477 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  478 	ret
                           0001AA   479 	G$RefreshSprite$0$0	= .
                                    480 	.globl	G$RefreshSprite$0$0
                           0001AA   481 	C$Character.h$93$2_1$142	= .
                                    482 	.globl	C$Character.h$93$2_1$142
                                    483 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: void RefreshSprite(Character *character)
                                    484 ;	---------------------------------
                                    485 ; Function RefreshSprite
                                    486 ; ---------------------------------
      0001AA                        487 _RefreshSprite::
                           0001AA   488 	C$Character.h$95$1_0$142	= .
                                    489 	.globl	C$Character.h$95$1_0$142
                                    490 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: LoadSpriteFrame(character, character->spriteCurrentFrame);
      0001AA 21 04 00         [12]  491 	ld	hl, #0x0004
      0001AD 19               [ 8]  492 	add	hl, de
      0001AE 4E               [ 8]  493 	ld	c, (hl)
      0001AF 79               [ 4]  494 	ld	a, c
                           0001B0   495 	C$Character.h$96$1_0$142	= .
                                    496 	.globl	C$Character.h$96$1_0$142
                                    497 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:96: }
                           0001B0   498 	C$Character.h$96$1_0$142	= .
                                    499 	.globl	C$Character.h$96$1_0$142
                           0001B0   500 	XG$RefreshSprite$0$0	= .
                                    501 	.globl	XG$RefreshSprite$0$0
      0001B0 C3r00r00         [16]  502 	jp	_LoadSpriteFrame
                           0001B3   503 	G$LoadNextSpriteFrame$0$0	= .
                                    504 	.globl	G$LoadNextSpriteFrame$0$0
                           0001B3   505 	C$Character.h$98$1_0$144	= .
                                    506 	.globl	C$Character.h$98$1_0$144
                                    507 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:98: void LoadNextSpriteFrame(Character *character)
                                    508 ;	---------------------------------
                                    509 ; Function LoadNextSpriteFrame
                                    510 ; ---------------------------------
      0001B3                        511 _LoadNextSpriteFrame::
      0001B3 E8 FC            [16]  512 	add	sp, #-4
      0001B5 F8 02            [12]  513 	ldhl	sp,	#2
      0001B7 7B               [ 4]  514 	ld	a, e
      0001B8 22               [ 8]  515 	ld	(hl+), a
                           0001B9   516 	C$Character.h$101$1_0$144	= .
                                    517 	.globl	C$Character.h$101$1_0$144
                                    518 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:101: character->spriteCurrentFrame = (character->spriteCurrentFrame + 1) % character->spriteFrames;
      0001B9 7A               [ 4]  519 	ld	a, d
      0001BA 32               [ 8]  520 	ld	(hl-), a
      0001BB 2A               [ 8]  521 	ld	a, (hl+)
      0001BC 5F               [ 4]  522 	ld	e, a
      0001BD 56               [ 8]  523 	ld	d, (hl)
      0001BE 21 04 00         [12]  524 	ld	hl, #0x0004
      0001C1 19               [ 8]  525 	add	hl, de
      0001C2 5D               [ 4]  526 	ld	e, l
      0001C3 54               [ 4]  527 	ld	d, h
      0001C4 1A               [ 8]  528 	ld	a, (de)
      0001C5 4F               [ 4]  529 	ld	c, a
      0001C6 06 00            [ 8]  530 	ld	b, #0x00
      0001C8 03               [ 8]  531 	inc	bc
      0001C9 33               [ 8]  532 	inc	sp
      0001CA 33               [ 8]  533 	inc	sp
      0001CB C5               [16]  534 	push	bc
      0001CC F8 02            [12]  535 	ldhl	sp,	#2
      0001CE 2A               [ 8]  536 	ld	a, (hl+)
      0001CF 4F               [ 4]  537 	ld	c, a
      0001D0 46               [ 8]  538 	ld	b, (hl)
      0001D1 03               [ 8]  539 	inc	bc
      0001D2 03               [ 8]  540 	inc	bc
      0001D3 03               [ 8]  541 	inc	bc
      0001D4 0A               [ 8]  542 	ld	a, (bc)
      0001D5 4F               [ 4]  543 	ld	c, a
      0001D6 06 00            [ 8]  544 	ld	b, #0x00
      0001D8 D5               [16]  545 	push	de
      0001D9 F8 02            [12]  546 	ldhl	sp,	#2
      0001DB 2A               [ 8]  547 	ld	a, (hl+)
      0001DC 5F               [ 4]  548 	ld	e, a
      0001DD 56               [ 8]  549 	ld	d, (hl)
      0001DE CDr00r00         [24]  550 	call	__modsint
      0001E1 D1               [12]  551 	pop	de
      0001E2 79               [ 4]  552 	ld	a, c
      0001E3 12               [ 8]  553 	ld	(de), a
                           0001E4   554 	C$Character.h$103$1_0$144	= .
                                    555 	.globl	C$Character.h$103$1_0$144
                                    556 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: RefreshSprite(character);
      0001E4 F8 02            [12]  557 	ldhl	sp,	#2
      0001E6 2A               [ 8]  558 	ld	a, (hl+)
      0001E7 5F               [ 4]  559 	ld	e, a
      0001E8 56               [ 8]  560 	ld	d, (hl)
      0001E9 CDrAAr01         [24]  561 	call	_RefreshSprite
                           0001EC   562 	C$Character.h$104$1_0$144	= .
                                    563 	.globl	C$Character.h$104$1_0$144
                                    564 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:104: }
      0001EC E8 04            [16]  565 	add	sp, #4
                           0001EE   566 	C$Character.h$104$1_0$144	= .
                                    567 	.globl	C$Character.h$104$1_0$144
                           0001EE   568 	XG$LoadNextSpriteFrame$0$0	= .
                                    569 	.globl	XG$LoadNextSpriteFrame$0$0
      0001EE C9               [16]  570 	ret
                           0001EF   571 	G$SetSpriteFlip$0$0	= .
                                    572 	.globl	G$SetSpriteFlip$0$0
                           0001EF   573 	C$Character.h$106$1_0$146	= .
                                    574 	.globl	C$Character.h$106$1_0$146
                                    575 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: void SetSpriteFlip(Character *character, uint8_t flipX, uint8_t flipY)
                                    576 ;	---------------------------------
                                    577 ; Function SetSpriteFlip
                                    578 ; ---------------------------------
      0001EF                        579 _SetSpriteFlip::
      0001EF 4F               [ 4]  580 	ld	c, a
                           0001F0   581 	C$Character.h$108$1_0$146	= .
                                    582 	.globl	C$Character.h$108$1_0$146
                                    583 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: character->spriteFlippedX = flipX;
      0001F0 21 0A 00         [12]  584 	ld	hl, #0x000a
      0001F3 19               [ 8]  585 	add	hl, de
      0001F4 71               [ 8]  586 	ld	(hl), c
                           0001F5   587 	C$Character.h$109$1_0$146	= .
                                    588 	.globl	C$Character.h$109$1_0$146
                                    589 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:109: character->spriteFlippedY = flipY;
      0001F5 21 0B 00         [12]  590 	ld	hl, #0x000b
      0001F8 19               [ 8]  591 	add	hl, de
      0001F9 4D               [ 4]  592 	ld	c, l
      0001FA 44               [ 4]  593 	ld	b, h
      0001FB F8 02            [12]  594 	ldhl	sp,	#2
      0001FD 7E               [ 8]  595 	ld	a, (hl)
      0001FE 02               [ 8]  596 	ld	(bc), a
                           0001FF   597 	C$Character.h$111$1_0$146	= .
                                    598 	.globl	C$Character.h$111$1_0$146
                                    599 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: RefreshSprite(character);
      0001FF CDrAAr01         [24]  600 	call	_RefreshSprite
                           000202   601 	C$Character.h$112$1_0$146	= .
                                    602 	.globl	C$Character.h$112$1_0$146
                                    603 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:112: }
      000202 E1               [12]  604 	pop	hl
      000203 33               [ 8]  605 	inc	sp
      000204 E9               [ 4]  606 	jp	(hl)
                           000205   607 	G$MoveCharacter$0$0	= .
                                    608 	.globl	G$MoveCharacter$0$0
                           000205   609 	C$Character.h$114$1_0$148	= .
                                    610 	.globl	C$Character.h$114$1_0$148
                                    611 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    612 ;	---------------------------------
                                    613 ; Function MoveCharacter
                                    614 ; ---------------------------------
      000205                        615 _MoveCharacter::
      000205 E8 F8            [16]  616 	add	sp, #-8
      000207 4B               [ 4]  617 	ld	c, e
      000208 42               [ 4]  618 	ld	b, d
      000209 F8 05            [12]  619 	ldhl	sp,	#5
      00020B 77               [ 8]  620 	ld	(hl), a
                           00020C   621 	C$Character.h$117$1_0$148	= .
                                    622 	.globl	C$Character.h$117$1_0$148
                                    623 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:117: character->x = x;
      00020C 21 06 00         [12]  624 	ld	hl, #0x0006
      00020F 09               [ 8]  625 	add	hl, bc
      000210 5D               [ 4]  626 	ld	e, l
      000211 54               [ 4]  627 	ld	d, h
      000212 F8 05            [12]  628 	ldhl	sp,	#5
      000214 7E               [ 8]  629 	ld	a, (hl)
      000215 12               [ 8]  630 	ld	(de), a
                           000216   631 	C$Character.h$118$1_0$148	= .
                                    632 	.globl	C$Character.h$118$1_0$148
                                    633 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:118: character->y = y;
      000216 21 07 00         [12]  634 	ld	hl, #0x0007
      000219 09               [ 8]  635 	add	hl, bc
      00021A 5D               [ 4]  636 	ld	e, l
      00021B 54               [ 4]  637 	ld	d, h
      00021C F8 0A            [12]  638 	ldhl	sp,	#10
      00021E 7E               [ 8]  639 	ld	a, (hl)
      00021F 12               [ 8]  640 	ld	(de), a
                           000220   641 	C$Character.h$120$4_0$151	= .
                                    642 	.globl	C$Character.h$120$4_0$151
                                    643 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000220 69               [ 4]  644 	ld	l, c
      000221 60               [ 4]  645 	ld	h, b
      000222 23               [ 8]  646 	inc	hl
      000223 33               [ 8]  647 	inc	sp
      000224 33               [ 8]  648 	inc	sp
      000225 E5               [16]  649 	push	hl
      000226 21 02 00         [12]  650 	ld	hl, #0x0002
      000229 09               [ 8]  651 	add	hl, bc
      00022A E5               [16]  652 	push	hl
      00022B 7D               [ 4]  653 	ld	a, l
      00022C F8 04            [12]  654 	ldhl	sp,	#4
      00022E 77               [ 8]  655 	ld	(hl), a
      00022F E1               [12]  656 	pop	hl
      000230 7C               [ 4]  657 	ld	a, h
      000231 F8 03            [12]  658 	ldhl	sp,	#3
      000233 77               [ 8]  659 	ld	(hl), a
      000234 F8 06            [12]  660 	ldhl	sp,	#6
      000236 36 00            [12]  661 	ld	(hl), #0x00
      000238                        662 00108$:
      000238 F8 02            [12]  663 	ldhl	sp,#2
      00023A 2A               [ 8]  664 	ld	a, (hl+)
      00023B 5F               [ 4]  665 	ld	e, a
      00023C 56               [ 8]  666 	ld	d, (hl)
      00023D 1A               [ 8]  667 	ld	a, (de)
      00023E F8 07            [12]  668 	ldhl	sp,	#7
      000240 32               [ 8]  669 	ld	(hl-), a
      000241 2A               [ 8]  670 	ld	a, (hl+)
      000242 96               [ 8]  671 	sub	a, (hl)
      000243 28 5B            [12]  672 	jr	Z, 00110$
                           000245   673 	C$Character.h$122$2_0$148	= .
                                    674 	.globl	C$Character.h$122$2_0$148
                                    675 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000245 F8 07            [12]  676 	ldhl	sp,	#7
      000247 36 00            [12]  677 	ld	(hl), #0x00
      000249                        678 00105$:
      000249 D1               [12]  679 	pop	de
      00024A D5               [16]  680 	push	de
      00024B 1A               [ 8]  681 	ld	a, (de)
      00024C F8 04            [12]  682 	ldhl	sp,	#4
      00024E 77               [ 8]  683 	ld	(hl), a
      00024F F8 07            [12]  684 	ldhl	sp,	#7
      000251 7E               [ 8]  685 	ld	a, (hl)
      000252 F8 04            [12]  686 	ldhl	sp,	#4
      000254 96               [ 8]  687 	sub	a, (hl)
      000255 28 44            [12]  688 	jr	Z, 00109$
                           000257   689 	C$Character.h$125$5_0$152	= .
                                    690 	.globl	C$Character.h$125$5_0$152
                                    691 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:125: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      000257 0A               [ 8]  692 	ld	a, (bc)
      000258 F8 07            [12]  693 	ldhl	sp,	#7
      00025A 86               [ 8]  694 	add	a, (hl)
      00025B 57               [ 4]  695 	ld	d, a
      00025C C5               [16]  696 	push	bc
      00025D D5               [16]  697 	push	de
      00025E F8 08            [12]  698 	ldhl	sp,	#8
      000260 2A               [ 8]  699 	ld	a, (hl+)
      000261 23               [ 8]  700 	inc	hl
      000262 5F               [ 4]  701 	ld	e, a
      000263 7E               [ 8]  702 	ld	a, (hl)
      000264 CDr00r00         [24]  703 	call	__muluchar
      000267 79               [ 4]  704 	ld	a, c
      000268 D1               [12]  705 	pop	de
      000269 C1               [12]  706 	pop	bc
      00026A 82               [ 4]  707 	add	a, d
      00026B 5F               [ 4]  708 	ld	e, a
                                    709 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:128: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      00026C F8 06            [12]  710 	ldhl	sp,	#6
      00026E 7E               [ 8]  711 	ld	a, (hl)
      00026F 87               [ 4]  712 	add	a, a
      000270 87               [ 4]  713 	add	a, a
      000271 87               [ 4]  714 	add	a, a
      000272 F8 0A            [12]  715 	ldhl	sp,	#10
      000274 56               [ 8]  716 	ld	d, (hl)
      000275 82               [ 4]  717 	add	a, d
      000276 57               [ 4]  718 	ld	d, a
      000277 F8 07            [12]  719 	ldhl	sp,	#7
      000279 3A               [ 8]  720 	ld	a, (hl-)
      00027A 2B               [ 8]  721 	dec	hl
      00027B 87               [ 4]  722 	add	a, a
      00027C 87               [ 4]  723 	add	a, a
      00027D 87               [ 4]  724 	add	a, a
      00027E 6E               [ 8]  725 	ld	l, (hl)
                                    726 ;	spillPairReg hl
                                    727 ;	spillPairReg hl
      00027F 85               [ 4]  728 	add	a, l
      000280 F8 04            [12]  729 	ldhl	sp,	#4
      000282 77               [ 8]  730 	ld	(hl), a
                                    731 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000283 26 00            [ 8]  732 	ld	h, #0x00
                                    733 ;	spillPairReg hl
                                    734 ;	spillPairReg hl
      000285 6B               [ 4]  735 	ld	l, e
      000286 29               [ 8]  736 	add	hl, hl
      000287 29               [ 8]  737 	add	hl, hl
      000288 D5               [16]  738 	push	de
      000289 11r00r00         [12]  739 	ld	de, #_shadow_OAM
      00028C 19               [ 8]  740 	add	hl, de
      00028D D1               [12]  741 	pop	de
                                    742 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00028E 7A               [ 4]  743 	ld	a, d
      00028F 22               [ 8]  744 	ld	(hl+), a
      000290 5D               [ 4]  745 	ld	e, l
      000291 54               [ 4]  746 	ld	d, h
      000292 F8 04            [12]  747 	ldhl	sp,	#4
      000294 7E               [ 8]  748 	ld	a, (hl)
      000295 12               [ 8]  749 	ld	(de), a
                           000296   750 	C$Character.h$122$4_0$151	= .
                                    751 	.globl	C$Character.h$122$4_0$151
                                    752 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000296 F8 07            [12]  753 	ldhl	sp,	#7
      000298 34               [12]  754 	inc	(hl)
      000299 18 AE            [12]  755 	jr	00105$
      00029B                        756 00109$:
                           00029B   757 	C$Character.h$120$2_0$149	= .
                                    758 	.globl	C$Character.h$120$2_0$149
                                    759 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      00029B F8 06            [12]  760 	ldhl	sp,	#6
      00029D 34               [12]  761 	inc	(hl)
      00029E 18 98            [12]  762 	jr	00108$
      0002A0                        763 00110$:
                           0002A0   764 	C$Character.h$131$2_0$148	= .
                                    765 	.globl	C$Character.h$131$2_0$148
                                    766 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:131: }
      0002A0 E8 08            [16]  767 	add	sp, #8
      0002A2 E1               [12]  768 	pop	hl
      0002A3 33               [ 8]  769 	inc	sp
      0002A4 E9               [ 4]  770 	jp	(hl)
                           0002A5   771 	G$ScrollCharacter$0$0	= .
                                    772 	.globl	G$ScrollCharacter$0$0
                           0002A5   773 	C$Character.h$133$2_0$157	= .
                                    774 	.globl	C$Character.h$133$2_0$157
                                    775 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    776 ;	---------------------------------
                                    777 ; Function ScrollCharacter
                                    778 ; ---------------------------------
      0002A5                        779 _ScrollCharacter::
      0002A5 D5               [16]  780 	push	de
      0002A6 4F               [ 4]  781 	ld	c, a
                           0002A7   782 	C$Character.h$135$1_0$157	= .
                                    783 	.globl	C$Character.h$135$1_0$157
                                    784 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: character->x += x;
      0002A7 D1               [12]  785 	pop	de
      0002A8 D5               [16]  786 	push	de
      0002A9 21 06 00         [12]  787 	ld	hl, #0x0006
      0002AC 19               [ 8]  788 	add	hl, de
      0002AD 5D               [ 4]  789 	ld	e, l
      0002AE 54               [ 4]  790 	ld	d, h
      0002AF 1A               [ 8]  791 	ld	a, (de)
      0002B0 81               [ 4]  792 	add	a, c
      0002B1 12               [ 8]  793 	ld	(de), a
                           0002B2   794 	C$Character.h$136$1_0$157	= .
                                    795 	.globl	C$Character.h$136$1_0$157
                                    796 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:136: character->y += y;
      0002B2 D5               [16]  797 	push	de
      0002B3 F8 02            [12]  798 	ldhl	sp,#2
      0002B5 2A               [ 8]  799 	ld	a, (hl+)
      0002B6 5F               [ 4]  800 	ld	e, a
      0002B7 56               [ 8]  801 	ld	d, (hl)
      0002B8 21 07 00         [12]  802 	ld	hl, #0x0007
      0002BB 19               [ 8]  803 	add	hl, de
      0002BC D1               [12]  804 	pop	de
      0002BD 4D               [ 4]  805 	ld	c, l
      0002BE 44               [ 4]  806 	ld	b, h
      0002BF 0A               [ 8]  807 	ld	a, (bc)
      0002C0 F8 04            [12]  808 	ldhl	sp,	#4
      0002C2 86               [ 8]  809 	add	a, (hl)
                           0002C3   810 	C$Character.h$138$1_0$157	= .
                                    811 	.globl	C$Character.h$138$1_0$157
                                    812 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:138: MoveCharacter(character, character->x, character->y);
      0002C3 02               [ 8]  813 	ld	(bc), a
      0002C4 47               [ 4]  814 	ld	b, a
      0002C5 1A               [ 8]  815 	ld	a, (de)
      0002C6 4F               [ 4]  816 	ld	c, a
      0002C7 C5               [16]  817 	push	bc
      0002C8 33               [ 8]  818 	inc	sp
      0002C9 79               [ 4]  819 	ld	a, c
      0002CA F8 01            [12]  820 	ldhl	sp,	#1
      0002CC 5E               [ 8]  821 	ld	e, (hl)
      0002CD 23               [ 8]  822 	inc	hl
      0002CE 56               [ 8]  823 	ld	d, (hl)
                           0002CF   824 	C$Character.h$139$1_0$157	= .
                                    825 	.globl	C$Character.h$139$1_0$157
                                    826 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:139: }
      0002CF CDr05r02         [24]  827 	call	_MoveCharacter
      0002D2 E1               [12]  828 	pop	hl
      0002D3 E1               [12]  829 	pop	hl
      0002D4 33               [ 8]  830 	inc	sp
      0002D5 E9               [ 4]  831 	jp	(hl)
                           0002D6   832 	G$MoveCharacterWithJoypad$0$0	= .
                                    833 	.globl	G$MoveCharacterWithJoypad$0$0
                           0002D6   834 	C$Character.h$141$1_0$159	= .
                                    835 	.globl	C$Character.h$141$1_0$159
                                    836 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:141: void MoveCharacterWithJoypad(Character *character)
                                    837 ;	---------------------------------
                                    838 ; Function MoveCharacterWithJoypad
                                    839 ; ---------------------------------
      0002D6                        840 _MoveCharacterWithJoypad::
      0002D6 E8 F8            [16]  841 	add	sp, #-8
      0002D8 4B               [ 4]  842 	ld	c, e
      0002D9 42               [ 4]  843 	ld	b, d
                           0002DA   844 	C$Character.h$144$1_0$159	= .
                                    845 	.globl	C$Character.h$144$1_0$159
                                    846 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:144: uint8_t buttons = joypad();
      0002DA CDr00r00         [24]  847 	call	_joypad
      0002DD F8 07            [12]  848 	ldhl	sp,	#7
      0002DF 77               [ 8]  849 	ld	(hl), a
                           0002E0   850 	C$Character.h$146$1_0$159	= .
                                    851 	.globl	C$Character.h$146$1_0$159
                                    852 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:146: int8_t moveX = 0;
      0002E0 F8 00            [12]  853 	ldhl	sp,	#0
                           0002E2   854 	C$Character.h$147$1_0$159	= .
                                    855 	.globl	C$Character.h$147$1_0$159
                                    856 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:147: int8_t moveY = 0;
      0002E2 AF               [ 4]  857 	xor	a, a
      0002E3 22               [ 8]  858 	ld	(hl+), a
      0002E4 77               [ 8]  859 	ld	(hl), a
                           0002E5   860 	C$Character.h$149$1_0$159	= .
                                    861 	.globl	C$Character.h$149$1_0$159
                                    862 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: if (buttons & J_LEFT)
      0002E5 E5               [16]  863 	push	hl
      0002E6 F8 09            [12]  864 	ldhl	sp,	#9
      0002E8 CB 4E            [12]  865 	bit	1, (hl)
      0002EA E1               [12]  866 	pop	hl
      0002EB 28 06            [12]  867 	jr	Z, 00104$
                           0002ED   868 	C$Character.h$151$2_0$160	= .
                                    869 	.globl	C$Character.h$151$2_0$160
                                    870 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:151: moveX = -1;
      0002ED F8 00            [12]  871 	ldhl	sp,	#0
      0002EF 36 FF            [12]  872 	ld	(hl), #0xff
      0002F1 18 0C            [12]  873 	jr	00108$
      0002F3                        874 00104$:
                           0002F3   875 	C$Character.h$153$1_0$159	= .
                                    876 	.globl	C$Character.h$153$1_0$159
                                    877 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: else if (buttons & J_RIGHT)
      0002F3 E5               [16]  878 	push	hl
      0002F4 F8 09            [12]  879 	ldhl	sp,	#9
      0002F6 CB 46            [12]  880 	bit	0, (hl)
      0002F8 E1               [12]  881 	pop	hl
      0002F9 28 04            [12]  882 	jr	Z, 00108$
                           0002FB   883 	C$Character.h$155$2_0$161	= .
                                    884 	.globl	C$Character.h$155$2_0$161
                                    885 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: moveX = 1;
      0002FB F8 00            [12]  886 	ldhl	sp,	#0
      0002FD 36 01            [12]  887 	ld	(hl), #0x01
                           0002FF   888 	C$Character.h$161$1_0$159	= .
                                    889 	.globl	C$Character.h$161$1_0$159
                                    890 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:161: else if (buttons & J_DOWN)
      0002FF                        891 00108$:
                           0002FF   892 	C$Character.h$166$1_0$159	= .
                                    893 	.globl	C$Character.h$166$1_0$159
                                    894 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:166: if ((character->underfootState & FOOT_ON_LAND) && (buttons & J_A))
      0002FF 21 0E 00         [12]  895 	ld	hl, #0x000e
      000302 09               [ 8]  896 	add	hl, bc
      000303 7E               [ 8]  897 	ld	a, (hl)
      000304 E6 01            [ 8]  898 	and	a, #0x01
      000306 5F               [ 4]  899 	ld	e, a
      000307 16 00            [ 8]  900 	ld	d, #0x00
      000309 F8 07            [12]  901 	ldhl	sp,	#7
      00030B 7E               [ 8]  902 	ld	a, (hl)
      00030C E6 10            [ 8]  903 	and	a, #0x10
      00030E F8 02            [12]  904 	ldhl	sp,	#2
      000310 22               [ 8]  905 	ld	(hl+), a
      000311 36 00            [12]  906 	ld	(hl), #0x00
                           000313   907 	C$Character.h$169$1_0$159	= .
                                    908 	.globl	C$Character.h$169$1_0$159
                                    909 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:169: character->hasJumped = 1;
      000313 21 0F 00         [12]  910 	ld	hl, #0x000f
      000316 09               [ 8]  911 	add	hl, bc
      000317 E5               [16]  912 	push	hl
      000318 7D               [ 4]  913 	ld	a, l
      000319 F8 06            [12]  914 	ldhl	sp,	#6
      00031B 77               [ 8]  915 	ld	(hl), a
      00031C E1               [12]  916 	pop	hl
      00031D 7C               [ 4]  917 	ld	a, h
      00031E F8 05            [12]  918 	ldhl	sp,	#5
      000320 77               [ 8]  919 	ld	(hl), a
                           000321   920 	C$Character.h$170$1_0$159	= .
                                    921 	.globl	C$Character.h$170$1_0$159
                                    922 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:170: character->jumpedFrames = 0;
      000321 21 10 00         [12]  923 	ld	hl, #0x0010
      000324 09               [ 8]  924 	add	hl, bc
      000325 E5               [16]  925 	push	hl
      000326 7D               [ 4]  926 	ld	a, l
      000327 F8 08            [12]  927 	ldhl	sp,	#8
      000329 77               [ 8]  928 	ld	(hl), a
      00032A E1               [12]  929 	pop	hl
      00032B 7C               [ 4]  930 	ld	a, h
      00032C F8 07            [12]  931 	ldhl	sp,	#7
      00032E 77               [ 8]  932 	ld	(hl), a
                           00032F   933 	C$Character.h$166$1_0$159	= .
                                    934 	.globl	C$Character.h$166$1_0$159
                                    935 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:166: if ((character->underfootState & FOOT_ON_LAND) && (buttons & J_A))
      00032F 7A               [ 4]  936 	ld	a, d
      000330 B3               [ 4]  937 	or	a, e
      000331 28 16            [12]  938 	jr	Z, 00112$
      000333 AF               [ 4]  939 	xor	a, a
      000334 F8 02            [12]  940 	ldhl	sp,	#2
      000336 B6               [ 8]  941 	or	a, (hl)
      000337 28 10            [12]  942 	jr	Z, 00112$
                           000339   943 	C$Character.h$169$2_0$164	= .
                                    944 	.globl	C$Character.h$169$2_0$164
                                    945 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:169: character->hasJumped = 1;
      000339 23               [ 8]  946 	inc	hl
      00033A 23               [ 8]  947 	inc	hl
      00033B 2A               [ 8]  948 	ld	a,	(hl+)
      00033C 66               [ 8]  949 	ld	h, (hl)
      00033D 6F               [ 4]  950 	ld	l, a
      00033E 36 01            [12]  951 	ld	(hl), #0x01
                           000340   952 	C$Character.h$170$2_0$164	= .
                                    953 	.globl	C$Character.h$170$2_0$164
                                    954 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:170: character->jumpedFrames = 0;
      000340 F8 06            [12]  955 	ldhl	sp,	#6
      000342 2A               [ 8]  956 	ld	a,	(hl+)
      000343 66               [ 8]  957 	ld	h, (hl)
      000344 6F               [ 4]  958 	ld	l, a
      000345 36 00            [12]  959 	ld	(hl), #0x00
      000347 18 12            [12]  960 	jr	00113$
      000349                        961 00112$:
                           000349   962 	C$Character.h$174$1_0$159	= .
                                    963 	.globl	C$Character.h$174$1_0$159
                                    964 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:174: else if (character->underfootState & FOOT_ON_LAND)
      000349 7A               [ 4]  965 	ld	a, d
      00034A B3               [ 4]  966 	or	a, e
      00034B 28 0E            [12]  967 	jr	Z, 00113$
                           00034D   968 	C$Character.h$177$2_0$165	= .
                                    969 	.globl	C$Character.h$177$2_0$165
                                    970 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:177: character->jumpedFrames = 0;
      00034D F8 06            [12]  971 	ldhl	sp,	#6
      00034F 2A               [ 8]  972 	ld	a,	(hl+)
      000350 66               [ 8]  973 	ld	h, (hl)
      000351 6F               [ 4]  974 	ld	l, a
      000352 36 00            [12]  975 	ld	(hl), #0x00
                           000354   976 	C$Character.h$180$2_0$165	= .
                                    977 	.globl	C$Character.h$180$2_0$165
                                    978 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:180: character->hasJumped = 0;
      000354 F8 04            [12]  979 	ldhl	sp,	#4
      000356 2A               [ 8]  980 	ld	a,	(hl+)
      000357 66               [ 8]  981 	ld	h, (hl)
      000358 6F               [ 4]  982 	ld	l, a
      000359 36 00            [12]  983 	ld	(hl), #0x00
      00035B                        984 00113$:
                           00035B   985 	C$Character.h$184$1_0$159	= .
                                    986 	.globl	C$Character.h$184$1_0$159
                                    987 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:184: if (!(buttons & J_A) || character->jumpedFrames > MAX_JUMP_FRAMES)
      00035B AF               [ 4]  988 	xor	a, a
      00035C F8 02            [12]  989 	ldhl	sp,	#2
      00035E B6               [ 8]  990 	or	a, (hl)
      00035F 28 0C            [12]  991 	jr	Z, 00115$
      000361 F8 06            [12]  992 	ldhl	sp,#6
      000363 2A               [ 8]  993 	ld	a, (hl+)
      000364 5F               [ 4]  994 	ld	e, a
      000365 56               [ 8]  995 	ld	d, (hl)
      000366 1A               [ 8]  996 	ld	a, (de)
      000367 6F               [ 4]  997 	ld	l, a
                                    998 ;	spillPairReg hl
                                    999 ;	spillPairReg hl
      000368 3E 0F            [ 8] 1000 	ld	a, #0x0f
      00036A 95               [ 4] 1001 	sub	a, l
      00036B 30 07            [12] 1002 	jr	NC, 00116$
      00036D                       1003 00115$:
                           00036D  1004 	C$Character.h$186$2_0$166	= .
                                   1005 	.globl	C$Character.h$186$2_0$166
                                   1006 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:186: character->hasJumped = 0;
      00036D F8 04            [12] 1007 	ldhl	sp,	#4
      00036F 2A               [ 8] 1008 	ld	a,	(hl+)
      000370 66               [ 8] 1009 	ld	h, (hl)
      000371 6F               [ 4] 1010 	ld	l, a
      000372 36 00            [12] 1011 	ld	(hl), #0x00
      000374                       1012 00116$:
                           000374  1013 	C$Character.h$190$1_0$159	= .
                                   1014 	.globl	C$Character.h$190$1_0$159
                                   1015 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:190: if (character->hasJumped && (buttons & J_A))
      000374 F8 04            [12] 1016 	ldhl	sp,#4
      000376 2A               [ 8] 1017 	ld	a, (hl+)
      000377 5F               [ 4] 1018 	ld	e, a
      000378 56               [ 8] 1019 	ld	d, (hl)
      000379 1A               [ 8] 1020 	ld	a, (de)
      00037A B7               [ 4] 1021 	or	a, a
      00037B 28 17            [12] 1022 	jr	Z, 00119$
      00037D AF               [ 4] 1023 	xor	a, a
      00037E F8 02            [12] 1024 	ldhl	sp,	#2
      000380 B6               [ 8] 1025 	or	a, (hl)
      000381 28 11            [12] 1026 	jr	Z, 00119$
                           000383  1027 	C$Character.h$193$2_0$167	= .
                                   1028 	.globl	C$Character.h$193$2_0$167
                                   1029 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:193: moveY = -1;
      000383 2B               [ 8] 1030 	dec	hl
      000384 36 FF            [12] 1031 	ld	(hl), #0xff
                           000386  1032 	C$Character.h$196$2_0$167	= .
                                   1033 	.globl	C$Character.h$196$2_0$167
                                   1034 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:196: character->jumpedFrames++;
      000386 F8 06            [12] 1035 	ldhl	sp,#6
      000388 2A               [ 8] 1036 	ld	a, (hl+)
      000389 5F               [ 4] 1037 	ld	e, a
      00038A 3A               [ 8] 1038 	ld	a, (hl-)
      00038B 57               [ 4] 1039 	ld	d, a
      00038C 1A               [ 8] 1040 	ld	a, (de)
      00038D 3C               [ 4] 1041 	inc	a
      00038E F5               [16] 1042 	push	af
      00038F 2A               [ 8] 1043 	ld	a,	(hl+)
      000390 66               [ 8] 1044 	ld	h, (hl)
      000391 6F               [ 4] 1045 	ld	l, a
      000392 F1               [12] 1046 	pop	af
      000393 77               [ 8] 1047 	ld	(hl), a
      000394                       1048 00119$:
                           000394  1049 	C$Character.h$200$1_0$159	= .
                                   1050 	.globl	C$Character.h$200$1_0$159
                                   1051 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:200: character->movementForceX = moveX;
      000394 21 0C 00         [12] 1052 	ld	hl, #0x000c
      000397 09               [ 8] 1053 	add	hl, bc
      000398 5D               [ 4] 1054 	ld	e, l
      000399 54               [ 4] 1055 	ld	d, h
      00039A F8 00            [12] 1056 	ldhl	sp,	#0
      00039C 7E               [ 8] 1057 	ld	a, (hl)
      00039D 12               [ 8] 1058 	ld	(de), a
                           00039E  1059 	C$Character.h$201$1_0$159	= .
                                   1060 	.globl	C$Character.h$201$1_0$159
                                   1061 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:201: character->movementForceY = moveY;
      00039E 21 0D 00         [12] 1062 	ld	hl, #0x000d
      0003A1 09               [ 8] 1063 	add	hl, bc
      0003A2 4D               [ 4] 1064 	ld	c, l
      0003A3 44               [ 4] 1065 	ld	b, h
      0003A4 F8 01            [12] 1066 	ldhl	sp,	#1
      0003A6 7E               [ 8] 1067 	ld	a, (hl)
      0003A7 02               [ 8] 1068 	ld	(bc), a
                           0003A8  1069 	C$Character.h$202$1_0$159	= .
                                   1070 	.globl	C$Character.h$202$1_0$159
                                   1071 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:202: }
      0003A8 E8 08            [16] 1072 	add	sp, #8
                           0003AA  1073 	C$Character.h$202$1_0$159	= .
                                   1074 	.globl	C$Character.h$202$1_0$159
                           0003AA  1075 	XG$MoveCharacterWithJoypad$0$0	= .
                                   1076 	.globl	XG$MoveCharacterWithJoypad$0$0
      0003AA C9               [16] 1077 	ret
                           0003AB  1078 	G$SetupCharacter$0$0	= .
                                   1079 	.globl	G$SetupCharacter$0$0
                           0003AB  1080 	C$Character.h$205$1_0$169	= .
                                   1081 	.globl	C$Character.h$205$1_0$169
                                   1082 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:205: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                   1083 ;	---------------------------------
                                   1084 ; Function SetupCharacter
                                   1085 ; ---------------------------------
      0003AB                       1086 _SetupCharacter::
      0003AB 3B               [ 8] 1087 	dec	sp
      0003AC F8 00            [12] 1088 	ldhl	sp,	#0
      0003AE 77               [ 8] 1089 	ld	(hl), a
                           0003AF  1090 	C$Character.h$207$1_0$169	= .
                                   1091 	.globl	C$Character.h$207$1_0$169
                                   1092 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:207: character->tilemap = tilemap;
      0003AF 21 11 00         [12] 1093 	ld	hl, #0x0011
      0003B2 19               [ 8] 1094 	add	hl, de
      0003B3 4D               [ 4] 1095 	ld	c, l
      0003B4 44               [ 4] 1096 	ld	b, h
      0003B5 F8 07            [12] 1097 	ldhl	sp,	#7
      0003B7 2A               [ 8] 1098 	ld	a, (hl+)
      0003B8 02               [ 8] 1099 	ld	(bc), a
      0003B9 03               [ 8] 1100 	inc	bc
      0003BA 7E               [ 8] 1101 	ld	a, (hl)
      0003BB 02               [ 8] 1102 	ld	(bc), a
                           0003BC  1103 	C$Character.h$208$1_0$169	= .
                                   1104 	.globl	C$Character.h$208$1_0$169
                                   1105 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:208: character->spriteId = spriteId;
      0003BC F8 00            [12] 1106 	ldhl	sp,	#0
      0003BE 7E               [ 8] 1107 	ld	a, (hl)
      0003BF 12               [ 8] 1108 	ld	(de), a
                           0003C0  1109 	C$Character.h$209$1_0$169	= .
                                   1110 	.globl	C$Character.h$209$1_0$169
                                   1111 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:209: character->spriteTileWidth = tileWidth;
      0003C0 4B               [ 4] 1112 	ld	c, e
      0003C1 42               [ 4] 1113 	ld	b, d
      0003C2 03               [ 8] 1114 	inc	bc
      0003C3 F8 03            [12] 1115 	ldhl	sp,	#3
                           0003C5  1116 	C$Character.h$210$1_0$169	= .
                                   1117 	.globl	C$Character.h$210$1_0$169
                                   1118 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:210: character->spriteTileHeight = tileHeight;
      0003C5 2A               [ 8] 1119 	ld	a, (hl+)
      0003C6 02               [ 8] 1120 	ld	(bc), a
      0003C7 4B               [ 4] 1121 	ld	c, e
      0003C8 42               [ 4] 1122 	ld	b, d
      0003C9 03               [ 8] 1123 	inc	bc
      0003CA 03               [ 8] 1124 	inc	bc
      0003CB 7E               [ 8] 1125 	ld	a, (hl)
      0003CC 02               [ 8] 1126 	ld	(bc), a
                           0003CD  1127 	C$Character.h$211$1_0$169	= .
                                   1128 	.globl	C$Character.h$211$1_0$169
                                   1129 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:211: character->tilesetStart = tilesetStart;
      0003CD 21 05 00         [12] 1130 	ld	hl, #0x0005
      0003D0 19               [ 8] 1131 	add	hl, de
      0003D1 4D               [ 4] 1132 	ld	c, l
      0003D2 44               [ 4] 1133 	ld	b, h
      0003D3 F8 05            [12] 1134 	ldhl	sp,	#5
                           0003D5  1135 	C$Character.h$212$1_0$169	= .
                                   1136 	.globl	C$Character.h$212$1_0$169
                                   1137 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:212: character->spriteFrames = totalFrames;
      0003D5 2A               [ 8] 1138 	ld	a, (hl+)
      0003D6 02               [ 8] 1139 	ld	(bc), a
      0003D7 4B               [ 4] 1140 	ld	c, e
      0003D8 42               [ 4] 1141 	ld	b, d
      0003D9 03               [ 8] 1142 	inc	bc
      0003DA 03               [ 8] 1143 	inc	bc
      0003DB 03               [ 8] 1144 	inc	bc
      0003DC 7E               [ 8] 1145 	ld	a, (hl)
      0003DD 02               [ 8] 1146 	ld	(bc), a
                           0003DE  1147 	C$Character.h$213$1_0$169	= .
                                   1148 	.globl	C$Character.h$213$1_0$169
                                   1149 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:213: character->underfootState = 0;
      0003DE 21 0E 00         [12] 1150 	ld	hl, #0x000e
      0003E1 19               [ 8] 1151 	add	hl, de
      0003E2 36 00            [12] 1152 	ld	(hl), #0x00
                           0003E4  1153 	C$Character.h$214$1_0$169	= .
                                   1154 	.globl	C$Character.h$214$1_0$169
                                   1155 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:214: character->jumpedFrames = 0;
      0003E4 21 10 00         [12] 1156 	ld	hl, #0x0010
      0003E7 19               [ 8] 1157 	add	hl, de
      0003E8 36 00            [12] 1158 	ld	(hl), #0x00
                           0003EA  1159 	C$Character.h$215$1_0$169	= .
                                   1160 	.globl	C$Character.h$215$1_0$169
                                   1161 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:215: character->hasJumped = 0;
      0003EA 21 0F 00         [12] 1162 	ld	hl, #0x000f
      0003ED 19               [ 8] 1163 	add	hl, de
      0003EE 36 00            [12] 1164 	ld	(hl), #0x00
                           0003F0  1165 	C$Character.h$217$1_0$169	= .
                                   1166 	.globl	C$Character.h$217$1_0$169
                                   1167 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:217: LoadSpriteFrame(character, 0);
      0003F0 AF               [ 4] 1168 	xor	a, a
      0003F1 CDr00r00         [24] 1169 	call	_LoadSpriteFrame
                           0003F4  1170 	C$Character.h$218$1_0$169	= .
                                   1171 	.globl	C$Character.h$218$1_0$169
                                   1172 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:218: }
      0003F4 33               [ 8] 1173 	inc	sp
      0003F5 E1               [12] 1174 	pop	hl
      0003F6 E8 06            [16] 1175 	add	sp, #6
      0003F8 E9               [ 4] 1176 	jp	(hl)
                           0003F9  1177 	G$showTitle$0$0	= .
                                   1178 	.globl	G$showTitle$0$0
                           0003F9  1179 	C$main.c$20$1_0$173	= .
                                   1180 	.globl	C$main.c$20$1_0$173
                                   1181 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:20: void showTitle(void)
                                   1182 ;	---------------------------------
                                   1183 ; Function showTitle
                                   1184 ; ---------------------------------
      0003F9                       1185 _showTitle::
                           0003F9  1186 	C$main.c$23$1_0$173	= .
                                   1187 	.globl	C$main.c$23$1_0$173
                                   1188 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:23: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0003F9 11r00r00         [12] 1189 	ld	de, #_SplashScreenSprite_tileset
      0003FC D5               [16] 1190 	push	de
      0003FD 21 00 C8         [12] 1191 	ld	hl, #0xc800
      000400 E5               [16] 1192 	push	hl
      000401 CDr00r00         [24] 1193 	call	_set_bkg_data
      000404 E8 04            [16] 1194 	add	sp, #4
                           000406  1195 	C$main.c$26$1_0$173	= .
                                   1196 	.globl	C$main.c$26$1_0$173
                                   1197 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:26: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      000406 11r00r00         [12] 1198 	ld	de, #_SplashScreenSprite_tilemap
      000409 D5               [16] 1199 	push	de
      00040A 21 14 12         [12] 1200 	ld	hl, #0x1214
      00040D E5               [16] 1201 	push	hl
      00040E AF               [ 4] 1202 	xor	a, a
      00040F 0F               [ 4] 1203 	rrca
      000410 F5               [16] 1204 	push	af
      000411 CDr00r00         [24] 1205 	call	_set_bkg_tiles
      000414 E8 06            [16] 1206 	add	sp, #6
                           000416  1207 	C$main.c$29$1_0$173	= .
                                   1208 	.globl	C$main.c$29$1_0$173
                                   1209 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:29: SHOW_BKG;
      000416 F0r00            [12] 1210 	ldh	a, (_LCDC_REG + 0)
      000418 F6 01            [ 8] 1211 	or	a, #0x01
      00041A E0r00            [12] 1212 	ldh	(_LCDC_REG + 0), a
                           00041C  1213 	C$main.c$30$1_0$173	= .
                                   1214 	.globl	C$main.c$30$1_0$173
                                   1215 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:30: DISPLAY_ON;
      00041C F0r00            [12] 1216 	ldh	a, (_LCDC_REG + 0)
      00041E F6 80            [ 8] 1217 	or	a, #0x80
      000420 E0r00            [12] 1218 	ldh	(_LCDC_REG + 0), a
                           000422  1219 	C$main.c$31$1_0$173	= .
                                   1220 	.globl	C$main.c$31$1_0$173
                                   1221 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:31: }
                           000422  1222 	C$main.c$31$1_0$173	= .
                                   1223 	.globl	C$main.c$31$1_0$173
                           000422  1224 	XG$showTitle$0$0	= .
                                   1225 	.globl	XG$showTitle$0$0
      000422 C9               [16] 1226 	ret
                           000423  1227 	G$SetupBackGround$0$0	= .
                                   1228 	.globl	G$SetupBackGround$0$0
                           000423  1229 	C$main.c$33$1_0$175	= .
                                   1230 	.globl	C$main.c$33$1_0$175
                                   1231 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:33: void SetupBackGround()
                                   1232 ;	---------------------------------
                                   1233 ; Function SetupBackGround
                                   1234 ; ---------------------------------
      000423                       1235 _SetupBackGround::
                           000423  1236 	C$main.c$36$1_0$175	= .
                                   1237 	.globl	C$main.c$36$1_0$175
                                   1238 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:36: }
                           000423  1239 	C$main.c$36$1_0$175	= .
                                   1240 	.globl	C$main.c$36$1_0$175
                           000423  1241 	XG$SetupBackGround$0$0	= .
                                   1242 	.globl	XG$SetupBackGround$0$0
      000423 C9               [16] 1243 	ret
                           000424  1244 	G$DetectCollisions$0$0	= .
                                   1245 	.globl	G$DetectCollisions$0$0
                           000424  1246 	C$main.c$38$1_0$177	= .
                                   1247 	.globl	C$main.c$38$1_0$177
                                   1248 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:38: void DetectCollisions(Character *character, uint8_t *predictedX, uint8_t *predictedY)
                                   1249 ;	---------------------------------
                                   1250 ; Function DetectCollisions
                                   1251 ; ---------------------------------
      000424                       1252 _DetectCollisions::
                           000424  1253 	C$main.c$41$1_0$177	= .
                                   1254 	.globl	C$main.c$41$1_0$177
                                   1255 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:41: if (*predictedY >= 120)
      000424 F8 02            [12] 1256 	ldhl	sp,	#2
      000426 2A               [ 8] 1257 	ld	a, (hl+)
      000427 4F               [ 4] 1258 	ld	c, a
      000428 46               [ 8] 1259 	ld	b, (hl)
      000429 0A               [ 8] 1260 	ld	a, (bc)
      00042A D6 78            [ 8] 1261 	sub	a, #0x78
      00042C 38 09            [12] 1262 	jr	C, 00103$
                           00042E  1263 	C$main.c$44$2_0$178	= .
                                   1264 	.globl	C$main.c$44$2_0$178
                                   1265 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:44: *predictedY = 120; 
      00042E 3E 78            [ 8] 1266 	ld	a, #0x78
      000430 02               [ 8] 1267 	ld	(bc), a
                           000431  1268 	C$main.c$47$2_0$178	= .
                                   1269 	.globl	C$main.c$47$2_0$178
                                   1270 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: character->velocityY = 0;
      000431 21 09 00         [12] 1271 	ld	hl, #0x0009
      000434 19               [ 8] 1272 	add	hl, de
      000435 36 00            [12] 1273 	ld	(hl), #0x00
      000437                       1274 00103$:
                           000437  1275 	C$main.c$49$1_0$177	= .
                                   1276 	.globl	C$main.c$49$1_0$177
                                   1277 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: }
      000437 E1               [12] 1278 	pop	hl
      000438 F1               [12] 1279 	pop	af
      000439 E9               [ 4] 1280 	jp	(hl)
                           00043A  1281 	G$MovementPhysics$0$0	= .
                                   1282 	.globl	G$MovementPhysics$0$0
                           00043A  1283 	C$main.c$51$1_0$180	= .
                                   1284 	.globl	C$main.c$51$1_0$180
                                   1285 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:51: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                   1286 ;	---------------------------------
                                   1287 ; Function MovementPhysics
                                   1288 ; ---------------------------------
      00043A                       1289 _MovementPhysics::
      00043A E8 F1            [16] 1290 	add	sp, #-15
      00043C F8 0D            [12] 1291 	ldhl	sp,	#13
      00043E 73               [ 8] 1292 	ld	(hl), e
      00043F 23               [ 8] 1293 	inc	hl
      000440 72               [ 8] 1294 	ld	(hl), d
      000441 2B               [ 8] 1295 	dec	hl
      000442 2B               [ 8] 1296 	dec	hl
                           000443  1297 	C$main.c$56$1_1$180	= .
                                   1298 	.globl	C$main.c$56$1_1$180
                                   1299 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:56: (lastMovementX != 0 && character->movementForceX == 0) ||
      000443 22               [ 8] 1300 	ld	(hl+), a
      000444 2A               [ 8] 1301 	ld	a, (hl+)
      000445 5F               [ 4] 1302 	ld	e, a
      000446 56               [ 8] 1303 	ld	d, (hl)
      000447 21 0C 00         [12] 1304 	ld	hl, #0x000c
      00044A 19               [ 8] 1305 	add	hl, de
      00044B E5               [16] 1306 	push	hl
      00044C 7D               [ 4] 1307 	ld	a, l
      00044D F8 06            [12] 1308 	ldhl	sp,	#6
      00044F 77               [ 8] 1309 	ld	(hl), a
      000450 E1               [12] 1310 	pop	hl
      000451 7C               [ 4] 1311 	ld	a, h
      000452 F8 05            [12] 1312 	ldhl	sp,	#5
      000454 32               [ 8] 1313 	ld	(hl-), a
      000455 2A               [ 8] 1314 	ld	a, (hl+)
      000456 5F               [ 4] 1315 	ld	e, a
      000457 56               [ 8] 1316 	ld	d, (hl)
      000458 1A               [ 8] 1317 	ld	a, (de)
      000459 4F               [ 4] 1318 	ld	c, a
      00045A FAr03r00         [16] 1319 	ld	a, (#_lastMovementX)
      00045D B7               [ 4] 1320 	or	a, a
      00045E 28 04            [12] 1321 	jr	Z, 00105$
      000460 79               [ 4] 1322 	ld	a, c
      000461 B7               [ 4] 1323 	or	a, a
      000462 28 09            [12] 1324 	jr	Z, 00101$
      000464                       1325 00105$:
                           000464  1326 	C$main.c$58$1_0$180	= .
                                   1327 	.globl	C$main.c$58$1_0$180
                                   1328 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:58: (lastMovementX == 0 && character->movementForceX != 0))
      000464 FAr03r00         [16] 1329 	ld	a, (#_lastMovementX)
      000467 B7               [ 4] 1330 	or	a,a
      000468 20 0D            [12] 1331 	jr	NZ, 00102$
      00046A B1               [ 4] 1332 	or	a,c
      00046B 28 0A            [12] 1333 	jr	Z, 00102$
      00046D                       1334 00101$:
                           00046D  1335 	C$main.c$61$2_0$181	= .
                                   1336 	.globl	C$main.c$61$2_0$181
                                   1337 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:61: movementFrameCount = 0;
      00046D 21r00r00         [12] 1338 	ld	hl, #_movementFrameCount
      000470 36 00            [12] 1339 	ld	(hl), #0x00
                           000472  1340 	C$main.c$62$2_0$181	= .
                                   1341 	.globl	C$main.c$62$2_0$181
                                   1342 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:62: animationFrameCount = 0;
      000472 21r01r00         [12] 1343 	ld	hl, #_animationFrameCount
      000475 36 00            [12] 1344 	ld	(hl), #0x00
      000477                       1345 00102$:
                           000477  1346 	C$main.c$67$1_1$180	= .
                                   1347 	.globl	C$main.c$67$1_1$180
                                   1348 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:67: slowingX = lastMovementX > 0 ? 1 : -1;
      000477 21r03r00         [12] 1349 	ld	hl, #_lastMovementX
      00047A 5E               [ 8] 1350 	ld	e, (hl)
      00047B AF               [ 4] 1351 	xor	a, a
      00047C 57               [ 4] 1352 	ld	d, a
      00047D 96               [ 8] 1353 	sub	a, (hl)
      00047E CB 7B            [ 8] 1354 	bit	7, e
      000480 28 07            [12] 1355 	jr	Z, 00334$
      000482 CB 7A            [ 8] 1356 	bit	7, d
      000484 20 08            [12] 1357 	jr	NZ, 00335$
      000486 BF               [ 4] 1358 	cp	a, a
      000487 18 05            [12] 1359 	jr	00335$
      000489                       1360 00334$:
      000489 CB 7A            [ 8] 1361 	bit	7, d
      00048B 28 01            [12] 1362 	jr	Z, 00335$
      00048D 37               [ 4] 1363 	scf
      00048E                       1364 00335$:
      00048E 3E 00            [ 8] 1365 	ld	a, #0x00
      000490 17               [ 4] 1366 	rla
      000491 F8 09            [12] 1367 	ldhl	sp,	#9
      000493 77               [ 8] 1368 	ld	(hl), a
                           000494  1369 	C$main.c$66$1_0$180	= .
                                   1370 	.globl	C$main.c$66$1_0$180
                                   1371 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:66: if (lastMovementX != 0 && character->movementForceX == 0)
      000494 FAr03r00         [16] 1372 	ld	a, (#_lastMovementX)
      000497 B7               [ 4] 1373 	or	a, a
      000498 28 24            [12] 1374 	jr	Z, 00107$
      00049A F8 04            [12] 1375 	ldhl	sp,#4
      00049C 2A               [ 8] 1376 	ld	a, (hl+)
      00049D 5F               [ 4] 1377 	ld	e, a
      00049E 56               [ 8] 1378 	ld	d, (hl)
      00049F 1A               [ 8] 1379 	ld	a, (de)
      0004A0 B7               [ 4] 1380 	or	a, a
      0004A1 20 1B            [12] 1381 	jr	NZ, 00107$
                           0004A3  1382 	C$main.c$67$1_0$180	= .
                                   1383 	.globl	C$main.c$67$1_0$180
                                   1384 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:67: slowingX = lastMovementX > 0 ? 1 : -1;
      0004A3 F8 09            [12] 1385 	ldhl	sp,	#9
      0004A5 7E               [ 8] 1386 	ld	a, (hl)
      0004A6 B7               [ 4] 1387 	or	a, a
      0004A7 28 08            [12] 1388 	jr	Z, 00157$
      0004A9 23               [ 8] 1389 	inc	hl
      0004AA 3E 01            [ 8] 1390 	ld	a, #0x01
      0004AC 22               [ 8] 1391 	ld	(hl+), a
      0004AD AF               [ 4] 1392 	xor	a, a
      0004AE 77               [ 8] 1393 	ld	(hl), a
      0004AF 18 07            [12] 1394 	jr	00158$
      0004B1                       1395 00157$:
      0004B1 F8 0A            [12] 1396 	ldhl	sp,	#10
      0004B3 3E FF            [ 8] 1397 	ld	a, #0xff
      0004B5 22               [ 8] 1398 	ld	(hl+), a
      0004B6 36 FF            [12] 1399 	ld	(hl), #0xff
      0004B8                       1400 00158$:
      0004B8 F8 0A            [12] 1401 	ldhl	sp,	#10
      0004BA 7E               [ 8] 1402 	ld	a, (hl)
      0004BB EAr05r00         [16] 1403 	ld	(#_slowingX),a
      0004BE                       1404 00107$:
                           0004BE  1405 	C$main.c$56$1_1$180	= .
                                   1406 	.globl	C$main.c$56$1_1$180
                                   1407 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:56: (lastMovementX != 0 && character->movementForceX == 0) ||
      0004BE F8 04            [12] 1408 	ldhl	sp,#4
      0004C0 2A               [ 8] 1409 	ld	a, (hl+)
      0004C1 5F               [ 4] 1410 	ld	e, a
      0004C2 56               [ 8] 1411 	ld	d, (hl)
      0004C3 1A               [ 8] 1412 	ld	a, (de)
      0004C4 4F               [ 4] 1413 	ld	c, a
                           0004C5  1414 	C$main.c$70$1_0$180	= .
                                   1415 	.globl	C$main.c$70$1_0$180
                                   1416 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:70: if (lastMovementX <= 0 && character->movementForceX > 0)
      0004C5 F8 09            [12] 1417 	ldhl	sp,	#9
      0004C7 CB 46            [12] 1418 	bit	0, (hl)
      0004C9 20 24            [12] 1419 	jr	NZ, 00113$
      0004CB 59               [ 4] 1420 	ld	e, c
      0004CC AF               [ 4] 1421 	xor	a, a
      0004CD 57               [ 4] 1422 	ld	d, a
      0004CE 91               [ 4] 1423 	sub	a, c
      0004CF CB 7B            [ 8] 1424 	bit	7, e
      0004D1 28 07            [12] 1425 	jr	Z, 00336$
      0004D3 CB 7A            [ 8] 1426 	bit	7, d
      0004D5 20 08            [12] 1427 	jr	NZ, 00337$
      0004D7 BF               [ 4] 1428 	cp	a, a
      0004D8 18 05            [12] 1429 	jr	00337$
      0004DA                       1430 00336$:
      0004DA CB 7A            [ 8] 1431 	bit	7, d
      0004DC 28 01            [12] 1432 	jr	Z, 00337$
      0004DE 37               [ 4] 1433 	scf
      0004DF                       1434 00337$:
      0004DF 30 0E            [12] 1435 	jr	NC, 00113$
                           0004E1  1436 	C$main.c$71$1_0$180	= .
                                   1437 	.globl	C$main.c$71$1_0$180
                                   1438 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:71: SetSpriteFlip(character, 0, 0);
      0004E1 AF               [ 4] 1439 	xor	a, a
      0004E2 F5               [16] 1440 	push	af
      0004E3 33               [ 8] 1441 	inc	sp
      0004E4 AF               [ 4] 1442 	xor	a, a
      0004E5 F8 0E            [12] 1443 	ldhl	sp,	#14
      0004E7 5E               [ 8] 1444 	ld	e, (hl)
      0004E8 23               [ 8] 1445 	inc	hl
      0004E9 56               [ 8] 1446 	ld	d, (hl)
      0004EA CDrEFr01         [24] 1447 	call	_SetSpriteFlip
      0004ED 18 18            [12] 1448 	jr	00114$
      0004EF                       1449 00113$:
                           0004EF  1450 	C$main.c$73$1_0$180	= .
                                   1451 	.globl	C$main.c$73$1_0$180
                                   1452 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:73: else if (lastMovementX >= 0 && character->movementForceX < 0)
      0004EF FAr03r00         [16] 1453 	ld	a, (#_lastMovementX)
      0004F2 CB 7F            [ 8] 1454 	bit	7, a
      0004F4 20 11            [12] 1455 	jr	NZ, 00114$
      0004F6 CB 79            [ 8] 1456 	bit	7, c
      0004F8 28 0D            [12] 1457 	jr	Z, 00114$
                           0004FA  1458 	C$main.c$74$1_0$180	= .
                                   1459 	.globl	C$main.c$74$1_0$180
                                   1460 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:74: SetSpriteFlip(character, 1, 0);
      0004FA AF               [ 4] 1461 	xor	a, a
      0004FB F5               [16] 1462 	push	af
      0004FC 33               [ 8] 1463 	inc	sp
      0004FD 3E 01            [ 8] 1464 	ld	a, #0x01
      0004FF F8 0E            [12] 1465 	ldhl	sp,	#14
      000501 5E               [ 8] 1466 	ld	e, (hl)
      000502 23               [ 8] 1467 	inc	hl
      000503 56               [ 8] 1468 	ld	d, (hl)
      000504 CDrEFr01         [24] 1469 	call	_SetSpriteFlip
      000507                       1470 00114$:
                           000507  1471 	C$main.c$77$1_0$180	= .
                                   1472 	.globl	C$main.c$77$1_0$180
                                   1473 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:77: if (character->movementForceX != 0)
      000507 F8 04            [12] 1474 	ldhl	sp,#4
      000509 2A               [ 8] 1475 	ld	a, (hl+)
      00050A 5F               [ 4] 1476 	ld	e, a
      00050B 56               [ 8] 1477 	ld	d, (hl)
      00050C 1A               [ 8] 1478 	ld	a, (de)
      00050D 4F               [ 4] 1479 	ld	c, a
                           00050E  1480 	C$main.c$88$1_1$180	= .
                                   1481 	.globl	C$main.c$88$1_1$180
                                   1482 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:88: character->velocityX = character->movementForceX;
      00050E F8 0D            [12] 1483 	ldhl	sp,#13
      000510 2A               [ 8] 1484 	ld	a, (hl+)
      000511 5F               [ 4] 1485 	ld	e, a
      000512 56               [ 8] 1486 	ld	d, (hl)
      000513 21 08 00         [12] 1487 	ld	hl, #0x0008
      000516 19               [ 8] 1488 	add	hl, de
      000517 33               [ 8] 1489 	inc	sp
      000518 33               [ 8] 1490 	inc	sp
      000519 E5               [16] 1491 	push	hl
                           00051A  1492 	C$main.c$77$1_0$180	= .
                                   1493 	.globl	C$main.c$77$1_0$180
                                   1494 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:77: if (character->movementForceX != 0)
      00051A 79               [ 4] 1495 	ld	a, c
      00051B B7               [ 4] 1496 	or	a, a
      00051C 28 29            [12] 1497 	jr	Z, 00130$
                           00051E  1498 	C$main.c$88$3_0$184	= .
                                   1499 	.globl	C$main.c$88$3_0$184
                                   1500 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:88: character->velocityX = character->movementForceX;
      00051E E1               [12] 1501 	pop	hl
      00051F E5               [16] 1502 	push	hl
      000520 71               [ 8] 1503 	ld	(hl), c
                           000521  1504 	C$main.c$92$2_0$182	= .
                                   1505 	.globl	C$main.c$92$2_0$182
                                   1506 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:92: movementFrameCount++;
      000521 21r00r00         [12] 1507 	ld	hl, #_movementFrameCount
      000524 34               [12] 1508 	inc	(hl)
                           000525  1509 	C$main.c$95$2_0$182	= .
                                   1510 	.globl	C$main.c$95$2_0$182
                                   1511 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:95: if (movementFrameCount == PLAYER_ANIMATION_FRAMES)
      000525 7E               [ 8] 1512 	ld	a, (hl)
      000526 D6 08            [ 8] 1513 	sub	a, #0x08
      000528 20 05            [12] 1514 	jr	NZ, 00120$
                           00052A  1515 	C$main.c$97$3_0$185	= .
                                   1516 	.globl	C$main.c$97$3_0$185
                                   1517 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:97: movementFrameCount = 0;
      00052A 21r00r00         [12] 1518 	ld	hl, #_movementFrameCount
      00052D 36 00            [12] 1519 	ld	(hl), #0x00
      00052F                       1520 00120$:
                           00052F  1521 	C$main.c$101$2_0$182	= .
                                   1522 	.globl	C$main.c$101$2_0$182
                                   1523 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:101: animationFrameCount++;
      00052F 21r01r00         [12] 1524 	ld	hl, #_animationFrameCount
      000532 34               [12] 1525 	inc	(hl)
                           000533  1526 	C$main.c$104$2_0$182	= .
                                   1527 	.globl	C$main.c$104$2_0$182
                                   1528 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:104: if (animationFrameCount == PLAYER_ANIMATION_FRAMES)
      000533 7E               [ 8] 1529 	ld	a, (hl)
      000534 D6 08            [ 8] 1530 	sub	a, #0x08
      000536 20 46            [12] 1531 	jr	NZ, 00131$
                           000538  1532 	C$main.c$106$3_0$186	= .
                                   1533 	.globl	C$main.c$106$3_0$186
                                   1534 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:106: animationFrameCount = 0;
      000538 21r01r00         [12] 1535 	ld	hl, #_animationFrameCount
      00053B 36 00            [12] 1536 	ld	(hl), #0x00
                           00053D  1537 	C$main.c$109$3_0$186	= .
                                   1538 	.globl	C$main.c$109$3_0$186
                                   1539 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:109: LoadNextSpriteFrame(character);
      00053D F8 0D            [12] 1540 	ldhl	sp,	#13
      00053F 2A               [ 8] 1541 	ld	a, (hl+)
      000540 5F               [ 4] 1542 	ld	e, a
      000541 56               [ 8] 1543 	ld	d, (hl)
      000542 CDrB3r01         [24] 1544 	call	_LoadNextSpriteFrame
      000545 18 37            [12] 1545 	jr	00131$
      000547                       1546 00130$:
                           000547  1547 	C$main.c$116$2_0$187	= .
                                   1548 	.globl	C$main.c$116$2_0$187
                                   1549 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:116: if (slowingX && movementFrameCount < slowDownFrames)
      000547 FAr05r00         [16] 1550 	ld	a, (#_slowingX)
      00054A B7               [ 4] 1551 	or	a, a
      00054B 28 31            [12] 1552 	jr	Z, 00131$
      00054D FAr00r00         [16] 1553 	ld	a, (#_movementFrameCount)
      000550 F8 0C            [12] 1554 	ldhl	sp,	#12
      000552 96               [ 8] 1555 	sub	a, (hl)
      000553 30 29            [12] 1556 	jr	NC, 00131$
                           000555  1557 	C$main.c$118$3_0$188	= .
                                   1558 	.globl	C$main.c$118$3_0$188
                                   1559 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:118: movementFrameCount++;
      000555 21r00r00         [12] 1560 	ld	hl, #_movementFrameCount
      000558 34               [12] 1561 	inc	(hl)
                           000559  1562 	C$main.c$121$3_0$188	= .
                                   1563 	.globl	C$main.c$121$3_0$188
                                   1564 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: if (movementFrameCount == slowDownFrames - 1)
      000559 F8 0C            [12] 1565 	ldhl	sp,	#12
      00055B 4E               [ 8] 1566 	ld	c, (hl)
      00055C 06 00            [ 8] 1567 	ld	b, #0x00
      00055E 0B               [ 8] 1568 	dec	bc
      00055F 21r00r00         [12] 1569 	ld	hl, #_movementFrameCount
      000562 5E               [ 8] 1570 	ld	e, (hl)
      000563 16 00            [ 8] 1571 	ld	d, #0x00
      000565 7B               [ 4] 1572 	ld	a, e
      000566 91               [ 4] 1573 	sub	a, c
      000567 20 0F            [12] 1574 	jr	NZ, 00124$
      000569 7A               [ 4] 1575 	ld	a, d
      00056A 90               [ 4] 1576 	sub	a, b
      00056B 20 0B            [12] 1577 	jr	NZ, 00124$
                           00056D  1578 	C$main.c$123$4_0$189	= .
                                   1579 	.globl	C$main.c$123$4_0$189
                                   1580 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:123: character->velocityX = 0;
      00056D E1               [12] 1581 	pop	hl
      00056E 36 00            [12] 1582 	ld	(hl), #0x00
      000570 E5               [16] 1583 	push	hl
                           000571  1584 	C$main.c$124$4_0$189	= .
                                   1585 	.globl	C$main.c$124$4_0$189
                                   1586 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:124: slowingX = 0;
      000571 21r05r00         [12] 1587 	ld	hl, #_slowingX
      000574 36 00            [12] 1588 	ld	(hl), #0x00
      000576 18 06            [12] 1589 	jr	00131$
      000578                       1590 00124$:
                           000578  1591 	C$main.c$128$3_0$188	= .
                                   1592 	.globl	C$main.c$128$3_0$188
                                   1593 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:128: character->velocityX = slowingX;
      000578 D1               [12] 1594 	pop	de
      000579 D5               [16] 1595 	push	de
      00057A FAr05r00         [16] 1596 	ld	a, (#_slowingX)
      00057D 12               [ 8] 1597 	ld	(de), a
      00057E                       1598 00131$:
                           00057E  1599 	C$main.c$133$1_1$180	= .
                                   1600 	.globl	C$main.c$133$1_1$180
                                   1601 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:133: if (character->movementForceY != 0)
      00057E F8 0D            [12] 1602 	ldhl	sp,#13
      000580 2A               [ 8] 1603 	ld	a, (hl+)
      000581 5F               [ 4] 1604 	ld	e, a
      000582 56               [ 8] 1605 	ld	d, (hl)
      000583 21 0D 00         [12] 1606 	ld	hl, #0x000d
      000586 19               [ 8] 1607 	add	hl, de
      000587 E5               [16] 1608 	push	hl
      000588 7D               [ 4] 1609 	ld	a, l
      000589 F8 08            [12] 1610 	ldhl	sp,	#8
      00058B 77               [ 8] 1611 	ld	(hl), a
      00058C E1               [12] 1612 	pop	hl
      00058D 7C               [ 4] 1613 	ld	a, h
      00058E F8 07            [12] 1614 	ldhl	sp,	#7
      000590 32               [ 8] 1615 	ld	(hl-), a
      000591 2A               [ 8] 1616 	ld	a, (hl+)
      000592 5F               [ 4] 1617 	ld	e, a
      000593 56               [ 8] 1618 	ld	d, (hl)
      000594 1A               [ 8] 1619 	ld	a, (de)
      000595 F8 0B            [12] 1620 	ldhl	sp,	#11
      000597 77               [ 8] 1621 	ld	(hl), a
                           000598  1622 	C$main.c$135$1_1$180	= .
                                   1623 	.globl	C$main.c$135$1_1$180
                                   1624 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:135: character->velocityY += character->movementForceY;
      000598 F8 0D            [12] 1625 	ldhl	sp,#13
      00059A 2A               [ 8] 1626 	ld	a, (hl+)
      00059B 5F               [ 4] 1627 	ld	e, a
      00059C 56               [ 8] 1628 	ld	d, (hl)
      00059D 21 09 00         [12] 1629 	ld	hl, #0x0009
      0005A0 19               [ 8] 1630 	add	hl, de
      0005A1 E5               [16] 1631 	push	hl
      0005A2 7D               [ 4] 1632 	ld	a, l
      0005A3 F8 0A            [12] 1633 	ldhl	sp,	#10
      0005A5 77               [ 8] 1634 	ld	(hl), a
      0005A6 E1               [12] 1635 	pop	hl
      0005A7 7C               [ 4] 1636 	ld	a, h
      0005A8 F8 09            [12] 1637 	ldhl	sp,	#9
                           0005AA  1638 	C$main.c$133$1_0$180	= .
                                   1639 	.globl	C$main.c$133$1_0$180
                                   1640 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:133: if (character->movementForceY != 0)
      0005AA 22               [ 8] 1641 	ld	(hl+), a
      0005AB 23               [ 8] 1642 	inc	hl
      0005AC 7E               [ 8] 1643 	ld	a, (hl)
      0005AD B7               [ 4] 1644 	or	a, a
      0005AE 28 13            [12] 1645 	jr	Z, 00147$
                           0005B0  1646 	C$main.c$135$2_0$190	= .
                                   1647 	.globl	C$main.c$135$2_0$190
                                   1648 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:135: character->velocityY += character->movementForceY;
      0005B0 2B               [ 8] 1649 	dec	hl
      0005B1 2B               [ 8] 1650 	dec	hl
      0005B2 2B               [ 8] 1651 	dec	hl
      0005B3 2A               [ 8] 1652 	ld	a, (hl+)
      0005B4 5F               [ 4] 1653 	ld	e, a
      0005B5 2A               [ 8] 1654 	ld	a, (hl+)
      0005B6 23               [ 8] 1655 	inc	hl
      0005B7 57               [ 4] 1656 	ld	d, a
      0005B8 1A               [ 8] 1657 	ld	a, (de)
      0005B9 86               [ 8] 1658 	add	a, (hl)
      0005BA 4F               [ 4] 1659 	ld	c, a
      0005BB F8 08            [12] 1660 	ldhl	sp,	#8
      0005BD 2A               [ 8] 1661 	ld	a,	(hl+)
      0005BE 66               [ 8] 1662 	ld	h, (hl)
      0005BF 6F               [ 4] 1663 	ld	l, a
      0005C0 71               [ 8] 1664 	ld	(hl), c
      0005C1 18 75            [12] 1665 	jr	00148$
      0005C3                       1666 00147$:
                           0005C3  1667 	C$main.c$140$1_0$180	= .
                                   1668 	.globl	C$main.c$140$1_0$180
                                   1669 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:140: else if (character->underfootState & FOOT_IN_AIR)
      0005C3 F8 0D            [12] 1670 	ldhl	sp,#13
      0005C5 2A               [ 8] 1671 	ld	a, (hl+)
      0005C6 5F               [ 4] 1672 	ld	e, a
      0005C7 56               [ 8] 1673 	ld	d, (hl)
      0005C8 21 0E 00         [12] 1674 	ld	hl, #0x000e
      0005CB 19               [ 8] 1675 	add	hl, de
      0005CC 4D               [ 4] 1676 	ld	c, l
      0005CD 44               [ 4] 1677 	ld	b, h
      0005CE 0A               [ 8] 1678 	ld	a, (bc)
      0005CF CB 4F            [ 8] 1679 	bit	1, a
      0005D1 28 65            [12] 1680 	jr	Z, 00148$
                           0005D3  1681 	C$main.c$143$2_0$191	= .
                                   1682 	.globl	C$main.c$143$2_0$191
                                   1683 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:143: jumpFrameCount = (jumpFrameCount + 1) % 60;
      0005D3 21r02r00         [12] 1684 	ld	hl, #_jumpFrameCount
      0005D6 4E               [ 8] 1685 	ld	c, (hl)
      0005D7 06 00            [ 8] 1686 	ld	b, #0x00
      0005D9 03               [ 8] 1687 	inc	bc
      0005DA F8 0A            [12] 1688 	ldhl	sp,	#10
      0005DC 79               [ 4] 1689 	ld	a, c
      0005DD 22               [ 8] 1690 	ld	(hl+), a
      0005DE 78               [ 4] 1691 	ld	a, b
      0005DF 32               [ 8] 1692 	ld	(hl-), a
      0005E0 01 3C 00         [12] 1693 	ld	bc, #0x003c
      0005E3 2A               [ 8] 1694 	ld	a, (hl+)
      0005E4 5F               [ 4] 1695 	ld	e, a
      0005E5 56               [ 8] 1696 	ld	d, (hl)
      0005E6 CDr00r00         [24] 1697 	call	__modsint
      0005E9 F8 0A            [12] 1698 	ldhl	sp,	#10
      0005EB 79               [ 4] 1699 	ld	a, c
      0005EC 22               [ 8] 1700 	ld	(hl+), a
      0005ED 70               [ 8] 1701 	ld	(hl), b
      0005EE F8 0A            [12] 1702 	ldhl	sp,	#10
      0005F0 7E               [ 8] 1703 	ld	a, (hl)
                           0005F1  1704 	C$main.c$146$2_0$191	= .
                                   1705 	.globl	C$main.c$146$2_0$191
                                   1706 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:146: if (jumpFrameCount < 5)
      0005F1 EAr02r00         [16] 1707 	ld	(#_jumpFrameCount),a
      0005F4 D6 05            [ 8] 1708 	sub	a, #0x05
      0005F6 30 09            [12] 1709 	jr	NC, 00142$
                           0005F8  1710 	C$main.c$147$2_0$191	= .
                                   1711 	.globl	C$main.c$147$2_0$191
                                   1712 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:147: character->velocityY = -2;
      0005F8 F8 08            [12] 1713 	ldhl	sp,	#8
      0005FA 2A               [ 8] 1714 	ld	a,	(hl+)
      0005FB 66               [ 8] 1715 	ld	h, (hl)
      0005FC 6F               [ 4] 1716 	ld	l, a
      0005FD 36 FE            [12] 1717 	ld	(hl), #0xfe
      0005FF 18 37            [12] 1718 	jr	00148$
      000601                       1719 00142$:
                           000601  1720 	C$main.c$148$2_0$191	= .
                                   1721 	.globl	C$main.c$148$2_0$191
                                   1722 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:148: else if (jumpFrameCount < 10)
      000601 FAr02r00         [16] 1723 	ld	a, (#_jumpFrameCount)
      000604 D6 0A            [ 8] 1724 	sub	a, #0x0a
      000606 30 09            [12] 1725 	jr	NC, 00139$
                           000608  1726 	C$main.c$149$2_0$191	= .
                                   1727 	.globl	C$main.c$149$2_0$191
                                   1728 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:149: character->velocityY = -1;
      000608 F8 08            [12] 1729 	ldhl	sp,	#8
      00060A 2A               [ 8] 1730 	ld	a,	(hl+)
      00060B 66               [ 8] 1731 	ld	h, (hl)
      00060C 6F               [ 4] 1732 	ld	l, a
      00060D 36 FF            [12] 1733 	ld	(hl), #0xff
      00060F 18 27            [12] 1734 	jr	00148$
      000611                       1735 00139$:
                           000611  1736 	C$main.c$150$2_0$191	= .
                                   1737 	.globl	C$main.c$150$2_0$191
                                   1738 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:150: else if (jumpFrameCount < 14)
      000611 FAr02r00         [16] 1739 	ld	a, (#_jumpFrameCount)
      000614 D6 0E            [ 8] 1740 	sub	a, #0x0e
      000616 30 09            [12] 1741 	jr	NC, 00136$
                           000618  1742 	C$main.c$151$2_0$191	= .
                                   1743 	.globl	C$main.c$151$2_0$191
                                   1744 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:151: character->velocityY = 0;
      000618 F8 08            [12] 1745 	ldhl	sp,	#8
      00061A 2A               [ 8] 1746 	ld	a,	(hl+)
      00061B 66               [ 8] 1747 	ld	h, (hl)
      00061C 6F               [ 4] 1748 	ld	l, a
      00061D 36 00            [12] 1749 	ld	(hl), #0x00
      00061F 18 17            [12] 1750 	jr	00148$
      000621                       1751 00136$:
                           000621  1752 	C$main.c$152$2_0$191	= .
                                   1753 	.globl	C$main.c$152$2_0$191
                                   1754 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:152: else if (jumpFrameCount < 20)
      000621 FAr02r00         [16] 1755 	ld	a, (#_jumpFrameCount)
      000624 D6 14            [ 8] 1756 	sub	a, #0x14
      000626 30 09            [12] 1757 	jr	NC, 00133$
                           000628  1758 	C$main.c$153$2_0$191	= .
                                   1759 	.globl	C$main.c$153$2_0$191
                                   1760 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:153: character->velocityY = 1;
      000628 F8 08            [12] 1761 	ldhl	sp,	#8
      00062A 2A               [ 8] 1762 	ld	a,	(hl+)
      00062B 66               [ 8] 1763 	ld	h, (hl)
      00062C 6F               [ 4] 1764 	ld	l, a
      00062D 36 01            [12] 1765 	ld	(hl), #0x01
      00062F 18 07            [12] 1766 	jr	00148$
      000631                       1767 00133$:
                           000631  1768 	C$main.c$155$2_0$191	= .
                                   1769 	.globl	C$main.c$155$2_0$191
                                   1770 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:155: character->velocityY = 2;
      000631 F8 08            [12] 1771 	ldhl	sp,	#8
      000633 2A               [ 8] 1772 	ld	a,	(hl+)
      000634 66               [ 8] 1773 	ld	h, (hl)
      000635 6F               [ 4] 1774 	ld	l, a
      000636 36 02            [12] 1775 	ld	(hl), #0x02
      000638                       1776 00148$:
                           000638  1777 	C$main.c$159$1_0$180	= .
                                   1778 	.globl	C$main.c$159$1_0$180
                                   1779 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:159: if (character->velocityY != 0 && character->velocityY < -3)
      000638 F8 08            [12] 1780 	ldhl	sp,#8
      00063A 2A               [ 8] 1781 	ld	a, (hl+)
      00063B 5F               [ 4] 1782 	ld	e, a
      00063C 56               [ 8] 1783 	ld	d, (hl)
      00063D 1A               [ 8] 1784 	ld	a, (de)
      00063E B7               [ 4] 1785 	or	a,a
      00063F 28 0B            [12] 1786 	jr	Z, 00150$
      000641 EE 80            [ 8] 1787 	xor	a, #0x80
      000643 D6 7D            [ 8] 1788 	sub	a, #0x7d
      000645 30 05            [12] 1789 	jr	NC, 00150$
                           000647  1790 	C$main.c$160$1_0$180	= .
                                   1791 	.globl	C$main.c$160$1_0$180
                                   1792 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:160: character->velocityY = -3;
      000647 3A               [ 8] 1793 	ld	a, (hl-)
      000648 6E               [ 8] 1794 	ld	l, (hl)
      000649 67               [ 4] 1795 	ld	h, a
      00064A 36 FD            [12] 1796 	ld	(hl), #0xfd
      00064C                       1797 00150$:
                           00064C  1798 	C$main.c$159$1_1$180	= .
                                   1799 	.globl	C$main.c$159$1_1$180
                                   1800 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:159: if (character->velocityY != 0 && character->velocityY < -3)
      00064C F8 08            [12] 1801 	ldhl	sp,#8
      00064E 2A               [ 8] 1802 	ld	a, (hl+)
      00064F 5F               [ 4] 1803 	ld	e, a
      000650 56               [ 8] 1804 	ld	d, (hl)
      000651 1A               [ 8] 1805 	ld	a, (de)
                           000652  1806 	C$main.c$161$1_0$180	= .
                                   1807 	.globl	C$main.c$161$1_0$180
                                   1808 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:161: if (character->velocityY != 0 && character->velocityY > 3)
      000652 4F               [ 4] 1809 	ld	c, a
      000653 B7               [ 4] 1810 	or	a, a
      000654 28 1E            [12] 1811 	jr	Z, 00153$
      000656 59               [ 4] 1812 	ld	e, c
      000657 3E 03            [ 8] 1813 	ld	a,#0x03
      000659 57               [ 4] 1814 	ld	d,a
      00065A 91               [ 4] 1815 	sub	a, c
      00065B CB 7B            [ 8] 1816 	bit	7, e
      00065D 28 07            [12] 1817 	jr	Z, 00345$
      00065F CB 7A            [ 8] 1818 	bit	7, d
      000661 20 08            [12] 1819 	jr	NZ, 00346$
      000663 BF               [ 4] 1820 	cp	a, a
      000664 18 05            [12] 1821 	jr	00346$
      000666                       1822 00345$:
      000666 CB 7A            [ 8] 1823 	bit	7, d
      000668 28 01            [12] 1824 	jr	Z, 00346$
      00066A 37               [ 4] 1825 	scf
      00066B                       1826 00346$:
      00066B 30 07            [12] 1827 	jr	NC, 00153$
                           00066D  1828 	C$main.c$162$1_0$180	= .
                                   1829 	.globl	C$main.c$162$1_0$180
                                   1830 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:162: character->velocityY = 3;
      00066D F8 08            [12] 1831 	ldhl	sp,	#8
      00066F 2A               [ 8] 1832 	ld	a,	(hl+)
      000670 66               [ 8] 1833 	ld	h, (hl)
      000671 6F               [ 4] 1834 	ld	l, a
      000672 36 03            [12] 1835 	ld	(hl), #0x03
      000674                       1836 00153$:
                           000674  1837 	C$main.c$165$1_1$192	= .
                                   1838 	.globl	C$main.c$165$1_1$192
                                   1839 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:165: uint8_t predictedX = character->x + character->velocityX;
      000674 F8 0D            [12] 1840 	ldhl	sp,#13
      000676 2A               [ 8] 1841 	ld	a, (hl+)
      000677 5F               [ 4] 1842 	ld	e, a
      000678 56               [ 8] 1843 	ld	d, (hl)
      000679 21 06 00         [12] 1844 	ld	hl, #0x0006
      00067C 19               [ 8] 1845 	add	hl, de
      00067D 4D               [ 4] 1846 	ld	c, l
      00067E 44               [ 4] 1847 	ld	b, h
      00067F 0A               [ 8] 1848 	ld	a, (bc)
      000680 F8 0B            [12] 1849 	ldhl	sp,	#11
      000682 32               [ 8] 1850 	ld	(hl-), a
      000683 D1               [12] 1851 	pop	de
      000684 D5               [16] 1852 	push	de
      000685 1A               [ 8] 1853 	ld	a, (de)
      000686 22               [ 8] 1854 	ld	(hl+), a
      000687 3A               [ 8] 1855 	ld	a, (hl-)
      000688 86               [ 8] 1856 	add	a, (hl)
      000689 F8 02            [12] 1857 	ldhl	sp,	#2
      00068B 77               [ 8] 1858 	ld	(hl), a
                           00068C  1859 	C$main.c$166$1_1$192	= .
                                   1860 	.globl	C$main.c$166$1_1$192
                                   1861 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:166: uint8_t predictedY = character->y + character->velocityY;
      00068C F8 0D            [12] 1862 	ldhl	sp,#13
      00068E 2A               [ 8] 1863 	ld	a, (hl+)
      00068F 5F               [ 4] 1864 	ld	e, a
      000690 56               [ 8] 1865 	ld	d, (hl)
      000691 21 07 00         [12] 1866 	ld	hl, #0x0007
      000694 19               [ 8] 1867 	add	hl, de
      000695 4D               [ 4] 1868 	ld	c, l
      000696 44               [ 4] 1869 	ld	b, h
      000697 0A               [ 8] 1870 	ld	a, (bc)
      000698 F8 0A            [12] 1871 	ldhl	sp,	#10
      00069A 32               [ 8] 1872 	ld	(hl-), a
      00069B 2B               [ 8] 1873 	dec	hl
      00069C 2A               [ 8] 1874 	ld	a, (hl+)
      00069D 5F               [ 4] 1875 	ld	e, a
      00069E 2A               [ 8] 1876 	ld	a, (hl+)
      00069F 23               [ 8] 1877 	inc	hl
      0006A0 57               [ 4] 1878 	ld	d, a
      0006A1 1A               [ 8] 1879 	ld	a, (de)
      0006A2 32               [ 8] 1880 	ld	(hl-), a
      0006A3 2A               [ 8] 1881 	ld	a, (hl+)
      0006A4 86               [ 8] 1882 	add	a, (hl)
      0006A5 77               [ 8] 1883 	ld	(hl), a
      0006A6 F8 03            [12] 1884 	ldhl	sp,	#3
      0006A8 77               [ 8] 1885 	ld	(hl), a
                           0006A9  1886 	C$main.c$169$1_1$192	= .
                                   1887 	.globl	C$main.c$169$1_1$192
                                   1888 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:169: DetectCollisions(character, &predictedX, &predictedY);
      0006A9 21 03 00         [12] 1889 	ld	hl, #3
      0006AC 39               [ 8] 1890 	add	hl, sp
      0006AD E5               [16] 1891 	push	hl
      0006AE 21 04 00         [12] 1892 	ld	hl, #4
      0006B1 39               [ 8] 1893 	add	hl, sp
      0006B2 4D               [ 4] 1894 	ld	c, l
      0006B3 44               [ 4] 1895 	ld	b, h
      0006B4 F8 0F            [12] 1896 	ldhl	sp,	#15
      0006B6 2A               [ 8] 1897 	ld	a, (hl+)
      0006B7 5F               [ 4] 1898 	ld	e, a
      0006B8 56               [ 8] 1899 	ld	d, (hl)
      0006B9 CDr24r04         [24] 1900 	call	_DetectCollisions
                           0006BC  1901 	C$main.c$172$1_1$192	= .
                                   1902 	.globl	C$main.c$172$1_1$192
                                   1903 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:172: MoveCharacter(character, predictedX, predictedY);
      0006BC F8 03            [12] 1904 	ldhl	sp,	#3
      0006BE 3A               [ 8] 1905 	ld	a, (hl-)
      0006BF F5               [16] 1906 	push	af
      0006C0 33               [ 8] 1907 	inc	sp
      0006C1 7E               [ 8] 1908 	ld	a, (hl)
      0006C2 F8 0E            [12] 1909 	ldhl	sp,	#14
      0006C4 5E               [ 8] 1910 	ld	e, (hl)
      0006C5 23               [ 8] 1911 	inc	hl
      0006C6 56               [ 8] 1912 	ld	d, (hl)
      0006C7 CDr05r02         [24] 1913 	call	_MoveCharacter
                           0006CA  1914 	C$main.c$175$1_1$192	= .
                                   1915 	.globl	C$main.c$175$1_1$192
                                   1916 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:175: lastMovementX = character->movementForceX;
      0006CA F8 04            [12] 1917 	ldhl	sp,#4
      0006CC 2A               [ 8] 1918 	ld	a, (hl+)
      0006CD 5F               [ 4] 1919 	ld	e, a
      0006CE 56               [ 8] 1920 	ld	d, (hl)
      0006CF 1A               [ 8] 1921 	ld	a, (de)
      0006D0 EAr03r00         [16] 1922 	ld	(#_lastMovementX),a
                           0006D3  1923 	C$main.c$176$1_1$192	= .
                                   1924 	.globl	C$main.c$176$1_1$192
                                   1925 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:176: lastMovementY = character->movementForceY;
      0006D3 F8 06            [12] 1926 	ldhl	sp,#6
      0006D5 2A               [ 8] 1927 	ld	a, (hl+)
      0006D6 5F               [ 4] 1928 	ld	e, a
      0006D7 56               [ 8] 1929 	ld	d, (hl)
      0006D8 1A               [ 8] 1930 	ld	a, (de)
      0006D9 EAr04r00         [16] 1931 	ld	(#_lastMovementY),a
                           0006DC  1932 	C$main.c$177$1_1$180	= .
                                   1933 	.globl	C$main.c$177$1_1$180
                                   1934 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:177: }
      0006DC E8 0F            [16] 1935 	add	sp, #15
                           0006DE  1936 	C$main.c$177$1_1$180	= .
                                   1937 	.globl	C$main.c$177$1_1$180
                           0006DE  1938 	XG$MovementPhysics$0$0	= .
                                   1939 	.globl	XG$MovementPhysics$0$0
      0006DE C9               [16] 1940 	ret
                           0006DF  1941 	G$main$0$0	= .
                                   1942 	.globl	G$main$0$0
                           0006DF  1943 	C$main.c$179$1_1$194	= .
                                   1944 	.globl	C$main.c$179$1_1$194
                                   1945 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:179: void main(void)
                                   1946 ;	---------------------------------
                                   1947 ; Function main
                                   1948 ; ---------------------------------
      0006DF                       1949 _main::
                           0006DF  1950 	C$main.c$181$1_0$194	= .
                                   1951 	.globl	C$main.c$181$1_0$194
                                   1952 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:181: SetupBackGround();
      0006DF CDr23r04         [24] 1953 	call	_SetupBackGround
                           0006E2  1954 	C$main.c$183$1_0$194	= .
                                   1955 	.globl	C$main.c$183$1_0$194
                                   1956 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:183: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      0006E2 11r00r00         [12] 1957 	ld	de, #_BirdSprite_tileset
      0006E5 D5               [16] 1958 	push	de
      0006E6 21 00 26         [12] 1959 	ld	hl, #0x2600
      0006E9 E5               [16] 1960 	push	hl
      0006EA CDr00r00         [24] 1961 	call	_set_sprite_data
      0006ED E8 04            [16] 1962 	add	sp, #4
                           0006EF  1963 	C$main.c$185$1_0$194	= .
                                   1964 	.globl	C$main.c$185$1_0$194
                                   1965 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:185: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      0006EF 11r00r00         [12] 1966 	ld	de, #_BirdSprite_tilemap
      0006F2 D5               [16] 1967 	push	de
      0006F3 3E 08            [ 8] 1968 	ld	a, #0x08
      0006F5 F5               [16] 1969 	push	af
      0006F6 33               [ 8] 1970 	inc	sp
      0006F7 AF               [ 4] 1971 	xor	a, a
      0006F8 67               [ 4] 1972 	ld	h, a
      0006F9 2E 02            [ 8] 1973 	ld	l, #0x02
      0006FB E5               [16] 1974 	push	hl
      0006FC 3E 02            [ 8] 1975 	ld	a, #0x02
      0006FE F5               [16] 1976 	push	af
      0006FF 33               [ 8] 1977 	inc	sp
      000700 AF               [ 4] 1978 	xor	a, a
      000701 11r00r00         [12] 1979 	ld	de, #_player
      000704 CDrABr03         [24] 1980 	call	_SetupCharacter
                           000707  1981 	C$main.c$187$1_0$194	= .
                                   1982 	.globl	C$main.c$187$1_0$194
                                   1983 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:187: MoveCharacter(&player, 8, 56);
      000707 3E 38            [ 8] 1984 	ld	a, #0x38
      000709 F5               [16] 1985 	push	af
      00070A 33               [ 8] 1986 	inc	sp
      00070B 3E 08            [ 8] 1987 	ld	a, #0x08
      00070D 11r00r00         [12] 1988 	ld	de, #_player
      000710 CDr05r02         [24] 1989 	call	_MoveCharacter
                           000713  1990 	C$main.c$189$1_0$194	= .
                                   1991 	.globl	C$main.c$189$1_0$194
                                   1992 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:189: SHOW_BKG;
      000713 F0r00            [12] 1993 	ldh	a, (_LCDC_REG + 0)
      000715 F6 01            [ 8] 1994 	or	a, #0x01
      000717 E0r00            [12] 1995 	ldh	(_LCDC_REG + 0), a
                           000719  1996 	C$main.c$190$1_0$194	= .
                                   1997 	.globl	C$main.c$190$1_0$194
                                   1998 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:190: SHOW_SPRITES;
      000719 F0r00            [12] 1999 	ldh	a, (_LCDC_REG + 0)
      00071B F6 02            [ 8] 2000 	or	a, #0x02
      00071D E0r00            [12] 2001 	ldh	(_LCDC_REG + 0), a
                           00071F  2002 	C$main.c$191$1_0$194	= .
                                   2003 	.globl	C$main.c$191$1_0$194
                                   2004 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:191: DISPLAY_ON;
      00071F F0r00            [12] 2005 	ldh	a, (_LCDC_REG + 0)
      000721 F6 80            [ 8] 2006 	or	a, #0x80
      000723 E0r00            [12] 2007 	ldh	(_LCDC_REG + 0), a
                           000725  2008 	C$main.c$193$1_0$194	= .
                                   2009 	.globl	C$main.c$193$1_0$194
                                   2010 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:193: while(1)
      000725                       2011 00102$:
                           000725  2012 	C$main.c$196$2_0$195	= .
                                   2013 	.globl	C$main.c$196$2_0$195
                                   2014 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:196: player.underfootState = player.y >= 120 ? FOOT_ON_LAND : FOOT_IN_AIR;
      000725 FAr07r00         [16] 2015 	ld	a, (#(_player + 7) + 0)
      000728 D6 78            [ 8] 2016 	sub	a, #0x78
      00072A 38 04            [12] 2017 	jr	C, 00106$
      00072C 3E 01            [ 8] 2018 	ld	a, #0x01
      00072E 18 02            [12] 2019 	jr	00107$
      000730                       2020 00106$:
      000730 3E 02            [ 8] 2021 	ld	a, #0x02
      000732                       2022 00107$:
      000732 EAr0Er00         [16] 2023 	ld	(#(_player + 14)),a
                           000735  2024 	C$main.c$197$2_0$195	= .
                                   2025 	.globl	C$main.c$197$2_0$195
                                   2026 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:197: MoveCharacterWithJoypad(&player);
      000735 11r00r00         [12] 2027 	ld	de, #_player
      000738 CDrD6r02         [24] 2028 	call	_MoveCharacterWithJoypad
                           00073B  2029 	C$main.c$198$2_0$195	= .
                                   2030 	.globl	C$main.c$198$2_0$195
                                   2031 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:198: MovementPhysics(&player, 3);
      00073B 3E 03            [ 8] 2032 	ld	a, #0x03
      00073D 11r00r00         [12] 2033 	ld	de, #_player
      000740 CDr3Ar04         [24] 2034 	call	_MovementPhysics
                           000743  2035 	C$main.c$199$2_0$195	= .
                                   2036 	.globl	C$main.c$199$2_0$195
                                   2037 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:199: LoadNextSpriteFrame(&player);
      000743 11r00r00         [12] 2038 	ld	de, #_player
      000746 CDrB3r01         [24] 2039 	call	_LoadNextSpriteFrame
                           000749  2040 	C$main.c$200$2_0$195	= .
                                   2041 	.globl	C$main.c$200$2_0$195
                                   2042 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:200: wait_vbl_done();
      000749 CDr00r00         [24] 2043 	call	_wait_vbl_done
                           00074C  2044 	C$main.c$202$1_0$194	= .
                                   2045 	.globl	C$main.c$202$1_0$194
                                   2046 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:202: }
                           00074C  2047 	C$main.c$202$1_0$194	= .
                                   2048 	.globl	C$main.c$202$1_0$194
                           00074C  2049 	XG$main$0$0	= .
                                   2050 	.globl	XG$main$0$0
      00074C 18 D7            [12] 2051 	jr	00102$
                                   2052 	.area _CODE
                                   2053 	.area _INITIALIZER
                           000000  2054 Fmain$__xinit_movementFrameCount$0_0$0 == .
      000000                       2055 __xinit__movementFrameCount:
      000000 00                    2056 	.db #0x00	; 0
                           000001  2057 Fmain$__xinit_animationFrameCount$0_0$0 == .
      000001                       2058 __xinit__animationFrameCount:
      000001 00                    2059 	.db #0x00	; 0
                           000002  2060 Fmain$__xinit_jumpFrameCount$0_0$0 == .
      000002                       2061 __xinit__jumpFrameCount:
      000002 00                    2062 	.db #0x00	; 0
                           000003  2063 Fmain$__xinit_lastMovementX$0_0$0 == .
      000003                       2064 __xinit__lastMovementX:
      000003 00                    2065 	.db #0x00	;  0
                           000004  2066 Fmain$__xinit_lastMovementY$0_0$0 == .
      000004                       2067 __xinit__lastMovementY:
      000004 00                    2068 	.db #0x00	;  0
                           000005  2069 Fmain$__xinit_slowingX$0_0$0 == .
      000005                       2070 __xinit__slowingX:
      000005 00                    2071 	.db #0x00	;  0
                                   2072 	.area _CABS (ABS)
