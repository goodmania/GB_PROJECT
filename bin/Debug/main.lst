                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _ScrollBlock
                                     13 	.globl _Hit
                                     14 	.globl _MovementPhysics
                                     15 	.globl _DetectCollisions
                                     16 	.globl _SetupCharacter
                                     17 	.globl _MoveCharacterWithJoypad
                                     18 	.globl _ScrollCharacter
                                     19 	.globl _MoveCharacter
                                     20 	.globl _SetSpriteFlip
                                     21 	.globl _LoadNextSpriteFrame
                                     22 	.globl _RefreshSprite
                                     23 	.globl _LoadSpriteFrame
                                     24 	.globl _printf
                                     25 	.globl _set_sprite_data
                                     26 	.globl _set_bkg_tiles
                                     27 	.globl _set_bkg_data
                                     28 	.globl _wait_vbl_done
                                     29 	.globl _waitpad
                                     30 	.globl _joypad
                                     31 	.globl _initarand
                                     32 	.globl _slowingX
                                     33 	.globl _lastMovementY
                                     34 	.globl _lastMovementX
                                     35 	.globl _jumpFrameCount
                                     36 	.globl _animationFrameCount
                                     37 	.globl _movementFrameCount
                                     38 	.globl _block
                                     39 	.globl _player
                                     40 	.globl _ShowTitle
                                     41 	.globl _SetupBackGround
                                     42 	.globl _SetupBlock
                                     43 ;--------------------------------------------------------
                                     44 ; special function registers
                                     45 ;--------------------------------------------------------
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _DATA
                           000000    50 G$player$0_0$0==.
      000000                         51 _player::
      000000                         52 	.ds 19
                           000013    53 G$block$0_0$0==.
      000013                         54 _block::
      000013                         55 	.ds 24
                                     56 ;--------------------------------------------------------
                                     57 ; ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _INITIALIZED
                           000000    60 G$movementFrameCount$0_0$0==.
      000000                         61 _movementFrameCount::
      000000                         62 	.ds 1
                           000001    63 G$animationFrameCount$0_0$0==.
      000001                         64 _animationFrameCount::
      000001                         65 	.ds 1
                           000002    66 G$jumpFrameCount$0_0$0==.
      000002                         67 _jumpFrameCount::
      000002                         68 	.ds 1
                           000003    69 G$lastMovementX$0_0$0==.
      000003                         70 _lastMovementX::
      000003                         71 	.ds 1
                           000004    72 G$lastMovementY$0_0$0==.
      000004                         73 _lastMovementY::
      000004                         74 	.ds 1
                           000005    75 G$slowingX$0_0$0==.
      000005                         76 _slowingX::
      000005                         77 	.ds 1
                                     78 ;--------------------------------------------------------
                                     79 ; absolute external ram data
                                     80 ;--------------------------------------------------------
                                     81 	.area _DABS (ABS)
                                     82 ;--------------------------------------------------------
                                     83 ; global & static initialisations
                                     84 ;--------------------------------------------------------
                                     85 	.area _HOME
                                     86 	.area _GSINIT
                                     87 	.area _GSFINAL
                                     88 	.area _GSINIT
                                     89 ;--------------------------------------------------------
                                     90 ; Home
                                     91 ;--------------------------------------------------------
                                     92 	.area _HOME
                                     93 	.area _HOME
                                     94 ;--------------------------------------------------------
                                     95 ; code
                                     96 ;--------------------------------------------------------
                                     97 	.area _CODE
                           000000    98 	G$LoadSpriteFrame$0$0	= .
                                     99 	.globl	G$LoadSpriteFrame$0$0
                           000000   100 	C$Character.h$67$0_0$135	= .
                                    101 	.globl	C$Character.h$67$0_0$135
                                    102 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:67: void LoadSpriteFrame(Character* character, uint8_t frame)
                                    103 ;	---------------------------------
                                    104 ; Function LoadSpriteFrame
                                    105 ; ---------------------------------
      000000                        106 _LoadSpriteFrame::
      000000 E8 E9            [16]  107 	add	sp, #-23
      000002 F8 13            [12]  108 	ldhl	sp,	#19
      000004 73               [ 8]  109 	ld	(hl), e
      000005 23               [ 8]  110 	inc	hl
      000006 72               [ 8]  111 	ld	(hl), d
                           000007   112 	C$Character.h$69$1_0$135	= .
                                    113 	.globl	C$Character.h$69$1_0$135
                                    114 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:69: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]  115 	dec	hl
      000008 47               [ 4]  116 	ld	b, a
      000009 2A               [ 8]  117 	ld	a, (hl+)
      00000A 5F               [ 4]  118 	ld	e, a
      00000B 56               [ 8]  119 	ld	d, (hl)
      00000C 21 04 00         [12]  120 	ld	hl, #0x0004
      00000F 19               [ 8]  121 	add	hl, de
      000010 5D               [ 4]  122 	ld	e, l
      000011 54               [ 4]  123 	ld	d, h
      000012 78               [ 4]  124 	ld	a, b
      000013 12               [ 8]  125 	ld	(de), a
                           000014   126 	C$Character.h$71$1_1$136	= .
                                    127 	.globl	C$Character.h$71$1_1$136
                                    128 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  129 	ldhl	sp,#19
      000016 2A               [ 8]  130 	ld	a, (hl+)
      000017 5F               [ 4]  131 	ld	e, a
      000018 56               [ 8]  132 	ld	d, (hl)
      000019 6B               [ 4]  133 	ld	l, e
      00001A 62               [ 4]  134 	ld	h, d
      00001B 23               [ 8]  135 	inc	hl
      00001C 33               [ 8]  136 	inc	sp
      00001D 33               [ 8]  137 	inc	sp
      00001E 5D               [ 4]  138 	ld	e, l
      00001F 54               [ 4]  139 	ld	d, h
      000020 D5               [16]  140 	push	de
      000021 1A               [ 8]  141 	ld	a, (de)
      000022 4F               [ 4]  142 	ld	c, a
      000023 F8 13            [12]  143 	ldhl	sp,#19
      000025 2A               [ 8]  144 	ld	a, (hl+)
      000026 5F               [ 4]  145 	ld	e, a
      000027 56               [ 8]  146 	ld	d, (hl)
      000028 21 02 00         [12]  147 	ld	hl, #0x0002
      00002B 19               [ 8]  148 	add	hl, de
      00002C E5               [16]  149 	push	hl
      00002D 7D               [ 4]  150 	ld	a, l
      00002E F8 04            [12]  151 	ldhl	sp,	#4
      000030 77               [ 8]  152 	ld	(hl), a
      000031 E1               [12]  153 	pop	hl
      000032 7C               [ 4]  154 	ld	a, h
      000033 F8 03            [12]  155 	ldhl	sp,	#3
      000035 32               [ 8]  156 	ld	(hl-), a
      000036 2A               [ 8]  157 	ld	a, (hl+)
      000037 5F               [ 4]  158 	ld	e, a
      000038 56               [ 8]  159 	ld	d, (hl)
      000039 1A               [ 8]  160 	ld	a, (de)
      00003A 6F               [ 4]  161 	ld	l, a
                                    162 ;	spillPairReg hl
                                    163 ;	spillPairReg hl
      00003B C5               [16]  164 	push	bc
      00003C 5D               [ 4]  165 	ld	e, l
      00003D 79               [ 4]  166 	ld	a, c
                           00003E   167 	C$Character.h$74$2_1$135	= .
                                    168 	.globl	C$Character.h$74$2_1$135
                                    169 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  170 	call	__muluchar
      000041 F1               [12]  171 	pop	af
      000042 47               [ 4]  172 	ld	b, a
      000043 F8 13            [12]  173 	ldhl	sp,#19
      000045 2A               [ 8]  174 	ld	a, (hl+)
      000046 5F               [ 4]  175 	ld	e, a
      000047 56               [ 8]  176 	ld	d, (hl)
      000048 21 0A 00         [12]  177 	ld	hl, #0x000a
      00004B 19               [ 8]  178 	add	hl, de
      00004C E5               [16]  179 	push	hl
      00004D 7D               [ 4]  180 	ld	a, l
      00004E F8 06            [12]  181 	ldhl	sp,	#6
      000050 77               [ 8]  182 	ld	(hl), a
      000051 E1               [12]  183 	pop	hl
      000052 7C               [ 4]  184 	ld	a, h
      000053 F8 05            [12]  185 	ldhl	sp,	#5
      000055 77               [ 8]  186 	ld	(hl), a
      000056 F8 13            [12]  187 	ldhl	sp,#19
      000058 2A               [ 8]  188 	ld	a, (hl+)
      000059 5F               [ 4]  189 	ld	e, a
      00005A 56               [ 8]  190 	ld	d, (hl)
      00005B 21 0B 00         [12]  191 	ld	hl, #0x000b
      00005E 19               [ 8]  192 	add	hl, de
      00005F E5               [16]  193 	push	hl
      000060 7D               [ 4]  194 	ld	a, l
      000061 F8 08            [12]  195 	ldhl	sp,	#8
      000063 77               [ 8]  196 	ld	(hl), a
      000064 E1               [12]  197 	pop	hl
      000065 7C               [ 4]  198 	ld	a, h
      000066 F8 07            [12]  199 	ldhl	sp,	#7
      000068 77               [ 8]  200 	ld	(hl), a
      000069 F8 13            [12]  201 	ldhl	sp,#19
      00006B 2A               [ 8]  202 	ld	a, (hl+)
      00006C 5F               [ 4]  203 	ld	e, a
      00006D 56               [ 8]  204 	ld	d, (hl)
      00006E 21 11 00         [12]  205 	ld	hl, #0x0011
      000071 19               [ 8]  206 	add	hl, de
      000072 E5               [16]  207 	push	hl
      000073 7D               [ 4]  208 	ld	a, l
      000074 F8 0A            [12]  209 	ldhl	sp,	#10
      000076 77               [ 8]  210 	ld	(hl), a
      000077 E1               [12]  211 	pop	hl
      000078 7C               [ 4]  212 	ld	a, h
      000079 F8 09            [12]  213 	ldhl	sp,	#9
      00007B 77               [ 8]  214 	ld	(hl), a
      00007C 59               [ 4]  215 	ld	e, c
      00007D 78               [ 4]  216 	ld	a, b
      00007E CDr00r00         [24]  217 	call	__muluchar
      000081 F8 0A            [12]  218 	ldhl	sp,	#10
      000083 79               [ 4]  219 	ld	a, c
      000084 22               [ 8]  220 	ld	(hl+), a
      000085 70               [ 8]  221 	ld	(hl), b
      000086 F8 13            [12]  222 	ldhl	sp,#19
      000088 2A               [ 8]  223 	ld	a, (hl+)
      000089 5F               [ 4]  224 	ld	e, a
      00008A 56               [ 8]  225 	ld	d, (hl)
      00008B 21 05 00         [12]  226 	ld	hl, #0x0005
      00008E 19               [ 8]  227 	add	hl, de
      00008F E5               [16]  228 	push	hl
      000090 7D               [ 4]  229 	ld	a, l
      000091 F8 0E            [12]  230 	ldhl	sp,	#14
      000093 77               [ 8]  231 	ld	(hl), a
      000094 E1               [12]  232 	pop	hl
      000095 7C               [ 4]  233 	ld	a, h
      000096 F8 0D            [12]  234 	ldhl	sp,	#13
      000098 77               [ 8]  235 	ld	(hl), a
      000099 F8 15            [12]  236 	ldhl	sp,	#21
      00009B 36 00            [12]  237 	ld	(hl), #0x00
      00009D                        238 00109$:
      00009D F8 02            [12]  239 	ldhl	sp,#2
      00009F 2A               [ 8]  240 	ld	a, (hl+)
      0000A0 5F               [ 4]  241 	ld	e, a
      0000A1 56               [ 8]  242 	ld	d, (hl)
      0000A2 1A               [ 8]  243 	ld	a, (de)
      0000A3 47               [ 4]  244 	ld	b, a
      0000A4 F8 15            [12]  245 	ldhl	sp,	#21
      0000A6 7E               [ 8]  246 	ld	a, (hl)
      0000A7 90               [ 4]  247 	sub	a, b
      0000A8 CArA7r01         [16]  248 	jp	Z,00111$
                           0000AB   249 	C$Character.h$76$2_1$135	= .
                                    250 	.globl	C$Character.h$76$2_1$135
                                    251 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  252 	ldhl	sp,	#22
      0000AD 36 00            [12]  253 	ld	(hl), #0x00
      0000AF                        254 00106$:
                           0000AF   255 	C$Character.h$71$2_1$135	= .
                                    256 	.globl	C$Character.h$71$2_1$135
                                    257 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  258 	pop	de
      0000B0 D5               [16]  259 	push	de
      0000B1 1A               [ 8]  260 	ld	a, (de)
      0000B2 F8 10            [12]  261 	ldhl	sp,	#16
      0000B4 77               [ 8]  262 	ld	(hl), a
                           0000B5   263 	C$Character.h$76$4_1$139	= .
                                    264 	.globl	C$Character.h$76$4_1$139
                                    265 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  266 	ldhl	sp,	#22
      0000B7 7E               [ 8]  267 	ld	a, (hl)
      0000B8 F8 10            [12]  268 	ldhl	sp,	#16
      0000BA 96               [ 8]  269 	sub	a, (hl)
      0000BB CArA1r01         [16]  270 	jp	Z,00110$
                           0000BE   271 	C$Character.h$79$2_1$135	= .
                                    272 	.globl	C$Character.h$79$2_1$135
                                    273 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  274 	ldhl	sp,#4
      0000C0 2A               [ 8]  275 	ld	a, (hl+)
      0000C1 5F               [ 4]  276 	ld	e, a
      0000C2 56               [ 8]  277 	ld	d, (hl)
      0000C3 1A               [ 8]  278 	ld	a, (de)
      0000C4 F8 11            [12]  279 	ldhl	sp,	#17
      0000C6 77               [ 8]  280 	ld	(hl), a
      0000C7 7E               [ 8]  281 	ld	a, (hl)
      0000C8 B7               [ 4]  282 	or	a, a
      0000C9 28 09            [12]  283 	jr	Z, 00113$
      0000CB 2B               [ 8]  284 	dec	hl
      0000CC 7E               [ 8]  285 	ld	a, (hl)
      0000CD 3D               [ 4]  286 	dec	a
      0000CE F8 16            [12]  287 	ldhl	sp,	#22
      0000D0 4E               [ 8]  288 	ld	c, (hl)
      0000D1 91               [ 4]  289 	sub	a, c
      0000D2 18 03            [12]  290 	jr	00114$
      0000D4                        291 00113$:
      0000D4 F8 16            [12]  292 	ldhl	sp,	#22
      0000D6 7E               [ 8]  293 	ld	a, (hl)
      0000D7                        294 00114$:
      0000D7 4F               [ 4]  295 	ld	c, a
                           0000D8   296 	C$Character.h$80$2_1$135	= .
                                    297 	.globl	C$Character.h$80$2_1$135
                                    298 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:80: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  299 	ldhl	sp,#6
      0000DA 2A               [ 8]  300 	ld	a, (hl+)
      0000DB 5F               [ 4]  301 	ld	e, a
      0000DC 56               [ 8]  302 	ld	d, (hl)
      0000DD 1A               [ 8]  303 	ld	a, (de)
      0000DE F8 12            [12]  304 	ldhl	sp,	#18
      0000E0 77               [ 8]  305 	ld	(hl), a
      0000E1 7E               [ 8]  306 	ld	a, (hl)
      0000E2 B7               [ 4]  307 	or	a, a
      0000E3 28 0D            [12]  308 	jr	Z, 00115$
      0000E5 F8 02            [12]  309 	ldhl	sp,#2
      0000E7 2A               [ 8]  310 	ld	a, (hl+)
      0000E8 5F               [ 4]  311 	ld	e, a
      0000E9 56               [ 8]  312 	ld	d, (hl)
      0000EA 1A               [ 8]  313 	ld	a, (de)
      0000EB 3D               [ 4]  314 	dec	a
      0000EC F8 15            [12]  315 	ldhl	sp,	#21
      0000EE 46               [ 8]  316 	ld	b, (hl)
      0000EF 90               [ 4]  317 	sub	a, b
      0000F0 18 03            [12]  318 	jr	00116$
      0000F2                        319 00115$:
      0000F2 F8 15            [12]  320 	ldhl	sp,	#21
      0000F4 7E               [ 8]  321 	ld	a, (hl)
      0000F5                        322 00116$:
      0000F5 47               [ 4]  323 	ld	b, a
                           0000F6   324 	C$Character.h$83$5_1$140	= .
                                    325 	.globl	C$Character.h$83$5_1$140
                                    326 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:83: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  327 	ldhl	sp,#19
      0000F8 2A               [ 8]  328 	ld	a, (hl+)
      0000F9 5F               [ 4]  329 	ld	e, a
      0000FA 56               [ 8]  330 	ld	d, (hl)
      0000FB 1A               [ 8]  331 	ld	a, (de)
      0000FC 81               [ 4]  332 	add	a, c
      0000FD 4F               [ 4]  333 	ld	c, a
      0000FE C5               [16]  334 	push	bc
      0000FF F8 12            [12]  335 	ldhl	sp,	#18
      000101 5E               [ 8]  336 	ld	e, (hl)
      000102 78               [ 4]  337 	ld	a, b
      000103 CDr00r00         [24]  338 	call	__muluchar
      000106 79               [ 4]  339 	ld	a, c
      000107 C1               [12]  340 	pop	bc
      000108 81               [ 4]  341 	add	a, c
      000109 F8 0E            [12]  342 	ldhl	sp,	#14
      00010B 77               [ 8]  343 	ld	(hl), a
                                    344 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:86: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  345 	ldhl	sp,	#17
      00010E 7E               [ 8]  346 	ld	a, (hl)
      00010F B7               [ 4]  347 	or	a, a
      000110 28 09            [12]  348 	jr	Z, 00117$
      000112 2B               [ 8]  349 	dec	hl
      000113 2B               [ 8]  350 	dec	hl
      000114 3E 20            [ 8]  351 	ld	a, #0x20
      000116 22               [ 8]  352 	ld	(hl+), a
      000117 AF               [ 4]  353 	xor	a, a
      000118 77               [ 8]  354 	ld	(hl), a
      000119 18 05            [12]  355 	jr	00118$
      00011B                        356 00117$:
      00011B AF               [ 4]  357 	xor	a, a
      00011C F8 0F            [12]  358 	ldhl	sp,	#15
      00011E 22               [ 8]  359 	ld	(hl+), a
      00011F 77               [ 8]  360 	ld	(hl), a
      000120                        361 00118$:
      000120 F8 12            [12]  362 	ldhl	sp,	#18
      000122 7E               [ 8]  363 	ld	a, (hl)
      000123 B7               [ 4]  364 	or	a, a
      000124 28 08            [12]  365 	jr	Z, 00119$
      000126 2B               [ 8]  366 	dec	hl
      000127 3E 40            [ 8]  367 	ld	a, #0x40
      000129 22               [ 8]  368 	ld	(hl+), a
      00012A AF               [ 4]  369 	xor	a, a
      00012B 77               [ 8]  370 	ld	(hl), a
      00012C 18 05            [12]  371 	jr	00120$
      00012E                        372 00119$:
      00012E AF               [ 4]  373 	xor	a, a
      00012F F8 11            [12]  374 	ldhl	sp,	#17
      000131 22               [ 8]  375 	ld	(hl+), a
      000132 77               [ 8]  376 	ld	(hl), a
      000133                        377 00120$:
      000133 F8 0F            [12]  378 	ldhl	sp,	#15
      000135 2A               [ 8]  379 	ld	a, (hl+)
      000136 23               [ 8]  380 	inc	hl
      000137 4E               [ 8]  381 	ld	c, (hl)
      000138 B1               [ 4]  382 	or	a, c
      000139 5F               [ 4]  383 	ld	e, a
                                    384 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  385 	ldhl	sp,	#14
      00013C 4E               [ 8]  386 	ld	c, (hl)
      00013D 06 00            [ 8]  387 	ld	b, #0x00
      00013F CB 21            [ 8]  388 	sla	c
      000141 CB 10            [ 8]  389 	rl	b
      000143 CB 21            [ 8]  390 	sla	c
      000145 CB 10            [ 8]  391 	rl	b
      000147 21r01r00         [12]  392 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  393 	add	hl,bc
      00014B 23               [ 8]  394 	inc	hl
      00014C 23               [ 8]  395 	inc	hl
      00014D 73               [ 8]  396 	ld	(hl), e
                                    397 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  398 	ldhl	sp,#8
      000150 2A               [ 8]  399 	ld	a, (hl+)
      000151 5F               [ 4]  400 	ld	e, a
      000152 56               [ 8]  401 	ld	d, (hl)
      000153 1A               [ 8]  402 	ld	a, (de)
      000154 F8 0F            [12]  403 	ldhl	sp,	#15
      000156 22               [ 8]  404 	ld	(hl+), a
      000157 13               [ 8]  405 	inc	de
      000158 1A               [ 8]  406 	ld	a, (de)
      000159 77               [ 8]  407 	ld	(hl), a
      00015A F8 16            [12]  408 	ldhl	sp,	#22
      00015C 7E               [ 8]  409 	ld	a, (hl)
      00015D F8 11            [12]  410 	ldhl	sp,	#17
      00015F 22               [ 8]  411 	ld	(hl+), a
      000160 36 00            [12]  412 	ld	(hl), #0x00
      000162 D1               [12]  413 	pop	de
      000163 D5               [16]  414 	push	de
      000164 1A               [ 8]  415 	ld	a, (de)
      000165 6F               [ 4]  416 	ld	l, a
                                    417 ;	spillPairReg hl
                                    418 ;	spillPairReg hl
      000166 C5               [16]  419 	push	bc
      000167 5D               [ 4]  420 	ld	e, l
      000168 F8 17            [12]  421 	ldhl	sp,	#23
      00016A 7E               [ 8]  422 	ld	a, (hl)
      00016B CDr00r00         [24]  423 	call	__muluchar
      00016E 59               [ 4]  424 	ld	e, c
      00016F 50               [ 4]  425 	ld	d, b
      000170 C1               [12]  426 	pop	bc
      000171 F8 11            [12]  427 	ldhl	sp,	#17
      000173 2A               [ 8]  428 	ld	a,	(hl+)
      000174 66               [ 8]  429 	ld	h, (hl)
      000175 6F               [ 4]  430 	ld	l, a
      000176 19               [ 8]  431 	add	hl, de
      000177 5D               [ 4]  432 	ld	e, l
      000178 54               [ 4]  433 	ld	d, h
      000179 F8 0A            [12]  434 	ldhl	sp,	#10
      00017B 2A               [ 8]  435 	ld	a,	(hl+)
      00017C 66               [ 8]  436 	ld	h, (hl)
      00017D 6F               [ 4]  437 	ld	l, a
      00017E 19               [ 8]  438 	add	hl, de
      00017F 5D               [ 4]  439 	ld	e, l
      000180 54               [ 4]  440 	ld	d, h
      000181 F8 0F            [12]  441 	ldhl	sp,	#15
      000183 2A               [ 8]  442 	ld	a,	(hl+)
      000184 66               [ 8]  443 	ld	h, (hl)
      000185 6F               [ 4]  444 	ld	l, a
      000186 19               [ 8]  445 	add	hl, de
      000187 5D               [ 4]  446 	ld	e, l
      000188 54               [ 4]  447 	ld	d, h
      000189 1A               [ 8]  448 	ld	a, (de)
      00018A F8 0C            [12]  449 	ldhl	sp,#12
      00018C 5E               [ 8]  450 	ld	e, (hl)
      00018D 23               [ 8]  451 	inc	hl
      00018E 56               [ 8]  452 	ld	d, (hl)
      00018F F5               [16]  453 	push	af
      000190 1A               [ 8]  454 	ld	a, (de)
      000191 6F               [ 4]  455 	ld	l, a
                                    456 ;	spillPairReg hl
                                    457 ;	spillPairReg hl
      000192 F1               [12]  458 	pop	af
      000193 85               [ 4]  459 	add	a, l
      000194 5F               [ 4]  460 	ld	e, a
                                    461 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  462 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  463 	add	hl,bc
      000199 23               [ 8]  464 	inc	hl
      00019A 73               [ 8]  465 	ld	(hl), e
                           00019B   466 	C$Character.h$76$4_1$139	= .
                                    467 	.globl	C$Character.h$76$4_1$139
                                    468 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  469 	ldhl	sp,	#22
      00019D 34               [12]  470 	inc	(hl)
      00019E C3rAFr00         [16]  471 	jp	00106$
      0001A1                        472 00110$:
                           0001A1   473 	C$Character.h$74$2_1$137	= .
                                    474 	.globl	C$Character.h$74$2_1$137
                                    475 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:74: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  476 	ldhl	sp,	#21
      0001A3 34               [12]  477 	inc	(hl)
      0001A4 C3r9Dr00         [16]  478 	jp	00109$
      0001A7                        479 00111$:
                           0001A7   480 	C$Character.h$93$2_1$135	= .
                                    481 	.globl	C$Character.h$93$2_1$135
                                    482 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: }
      0001A7 E8 17            [16]  483 	add	sp, #23
                           0001A9   484 	C$Character.h$93$2_1$135	= .
                                    485 	.globl	C$Character.h$93$2_1$135
                           0001A9   486 	XG$LoadSpriteFrame$0$0	= .
                                    487 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  488 	ret
                           0001AA   489 	G$RefreshSprite$0$0	= .
                                    490 	.globl	G$RefreshSprite$0$0
                           0001AA   491 	C$Character.h$95$2_1$148	= .
                                    492 	.globl	C$Character.h$95$2_1$148
                                    493 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: void RefreshSprite(Character *character)
                                    494 ;	---------------------------------
                                    495 ; Function RefreshSprite
                                    496 ; ---------------------------------
      0001AA                        497 _RefreshSprite::
                           0001AA   498 	C$Character.h$97$1_0$148	= .
                                    499 	.globl	C$Character.h$97$1_0$148
                                    500 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:97: LoadSpriteFrame(character, character->spriteCurrentFrame);
      0001AA 21 04 00         [12]  501 	ld	hl, #0x0004
      0001AD 19               [ 8]  502 	add	hl, de
      0001AE 4E               [ 8]  503 	ld	c, (hl)
      0001AF 79               [ 4]  504 	ld	a, c
                           0001B0   505 	C$Character.h$98$1_0$148	= .
                                    506 	.globl	C$Character.h$98$1_0$148
                                    507 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:98: }
                           0001B0   508 	C$Character.h$98$1_0$148	= .
                                    509 	.globl	C$Character.h$98$1_0$148
                           0001B0   510 	XG$RefreshSprite$0$0	= .
                                    511 	.globl	XG$RefreshSprite$0$0
      0001B0 C3r00r00         [16]  512 	jp	_LoadSpriteFrame
                           0001B3   513 	G$LoadNextSpriteFrame$0$0	= .
                                    514 	.globl	G$LoadNextSpriteFrame$0$0
                           0001B3   515 	C$Character.h$100$1_0$150	= .
                                    516 	.globl	C$Character.h$100$1_0$150
                                    517 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:100: void LoadNextSpriteFrame(Character *character)
                                    518 ;	---------------------------------
                                    519 ; Function LoadNextSpriteFrame
                                    520 ; ---------------------------------
      0001B3                        521 _LoadNextSpriteFrame::
      0001B3 E8 FC            [16]  522 	add	sp, #-4
      0001B5 F8 02            [12]  523 	ldhl	sp,	#2
      0001B7 7B               [ 4]  524 	ld	a, e
      0001B8 22               [ 8]  525 	ld	(hl+), a
                           0001B9   526 	C$Character.h$103$1_0$150	= .
                                    527 	.globl	C$Character.h$103$1_0$150
                                    528 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: character->spriteCurrentFrame = (character->spriteCurrentFrame + 1) % character->spriteFrames;
      0001B9 7A               [ 4]  529 	ld	a, d
      0001BA 32               [ 8]  530 	ld	(hl-), a
      0001BB 2A               [ 8]  531 	ld	a, (hl+)
      0001BC 5F               [ 4]  532 	ld	e, a
      0001BD 56               [ 8]  533 	ld	d, (hl)
      0001BE 21 04 00         [12]  534 	ld	hl, #0x0004
      0001C1 19               [ 8]  535 	add	hl, de
      0001C2 5D               [ 4]  536 	ld	e, l
      0001C3 54               [ 4]  537 	ld	d, h
      0001C4 1A               [ 8]  538 	ld	a, (de)
      0001C5 4F               [ 4]  539 	ld	c, a
      0001C6 06 00            [ 8]  540 	ld	b, #0x00
      0001C8 03               [ 8]  541 	inc	bc
      0001C9 33               [ 8]  542 	inc	sp
      0001CA 33               [ 8]  543 	inc	sp
      0001CB C5               [16]  544 	push	bc
      0001CC F8 02            [12]  545 	ldhl	sp,	#2
      0001CE 2A               [ 8]  546 	ld	a, (hl+)
      0001CF 4F               [ 4]  547 	ld	c, a
      0001D0 46               [ 8]  548 	ld	b, (hl)
      0001D1 03               [ 8]  549 	inc	bc
      0001D2 03               [ 8]  550 	inc	bc
      0001D3 03               [ 8]  551 	inc	bc
      0001D4 0A               [ 8]  552 	ld	a, (bc)
      0001D5 4F               [ 4]  553 	ld	c, a
      0001D6 06 00            [ 8]  554 	ld	b, #0x00
      0001D8 D5               [16]  555 	push	de
      0001D9 F8 02            [12]  556 	ldhl	sp,	#2
      0001DB 2A               [ 8]  557 	ld	a, (hl+)
      0001DC 5F               [ 4]  558 	ld	e, a
      0001DD 56               [ 8]  559 	ld	d, (hl)
      0001DE CDr00r00         [24]  560 	call	__modsint
      0001E1 D1               [12]  561 	pop	de
      0001E2 79               [ 4]  562 	ld	a, c
      0001E3 12               [ 8]  563 	ld	(de), a
                           0001E4   564 	C$Character.h$105$1_0$150	= .
                                    565 	.globl	C$Character.h$105$1_0$150
                                    566 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:105: RefreshSprite(character);
      0001E4 F8 02            [12]  567 	ldhl	sp,	#2
      0001E6 2A               [ 8]  568 	ld	a, (hl+)
      0001E7 5F               [ 4]  569 	ld	e, a
      0001E8 56               [ 8]  570 	ld	d, (hl)
      0001E9 CDrAAr01         [24]  571 	call	_RefreshSprite
                           0001EC   572 	C$Character.h$106$1_0$150	= .
                                    573 	.globl	C$Character.h$106$1_0$150
                                    574 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: }
      0001EC E8 04            [16]  575 	add	sp, #4
                           0001EE   576 	C$Character.h$106$1_0$150	= .
                                    577 	.globl	C$Character.h$106$1_0$150
                           0001EE   578 	XG$LoadNextSpriteFrame$0$0	= .
                                    579 	.globl	XG$LoadNextSpriteFrame$0$0
      0001EE C9               [16]  580 	ret
                           0001EF   581 	G$SetSpriteFlip$0$0	= .
                                    582 	.globl	G$SetSpriteFlip$0$0
                           0001EF   583 	C$Character.h$108$1_0$152	= .
                                    584 	.globl	C$Character.h$108$1_0$152
                                    585 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: void SetSpriteFlip(Character *character, uint8_t flipX, uint8_t flipY)
                                    586 ;	---------------------------------
                                    587 ; Function SetSpriteFlip
                                    588 ; ---------------------------------
      0001EF                        589 _SetSpriteFlip::
      0001EF 4F               [ 4]  590 	ld	c, a
                           0001F0   591 	C$Character.h$110$1_0$152	= .
                                    592 	.globl	C$Character.h$110$1_0$152
                                    593 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:110: character->spriteFlippedX = flipX;
      0001F0 21 0A 00         [12]  594 	ld	hl, #0x000a
      0001F3 19               [ 8]  595 	add	hl, de
      0001F4 71               [ 8]  596 	ld	(hl), c
                           0001F5   597 	C$Character.h$111$1_0$152	= .
                                    598 	.globl	C$Character.h$111$1_0$152
                                    599 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: character->spriteFlippedY = flipY;
      0001F5 21 0B 00         [12]  600 	ld	hl, #0x000b
      0001F8 19               [ 8]  601 	add	hl, de
      0001F9 4D               [ 4]  602 	ld	c, l
      0001FA 44               [ 4]  603 	ld	b, h
      0001FB F8 02            [12]  604 	ldhl	sp,	#2
      0001FD 7E               [ 8]  605 	ld	a, (hl)
      0001FE 02               [ 8]  606 	ld	(bc), a
                           0001FF   607 	C$Character.h$113$1_0$152	= .
                                    608 	.globl	C$Character.h$113$1_0$152
                                    609 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:113: RefreshSprite(character);
      0001FF CDrAAr01         [24]  610 	call	_RefreshSprite
                           000202   611 	C$Character.h$114$1_0$152	= .
                                    612 	.globl	C$Character.h$114$1_0$152
                                    613 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: }
      000202 E1               [12]  614 	pop	hl
      000203 33               [ 8]  615 	inc	sp
      000204 E9               [ 4]  616 	jp	(hl)
                           000205   617 	G$MoveCharacter$0$0	= .
                                    618 	.globl	G$MoveCharacter$0$0
                           000205   619 	C$Character.h$116$1_0$154	= .
                                    620 	.globl	C$Character.h$116$1_0$154
                                    621 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:116: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    622 ;	---------------------------------
                                    623 ; Function MoveCharacter
                                    624 ; ---------------------------------
      000205                        625 _MoveCharacter::
      000205 E8 F8            [16]  626 	add	sp, #-8
      000207 4B               [ 4]  627 	ld	c, e
      000208 42               [ 4]  628 	ld	b, d
      000209 F8 05            [12]  629 	ldhl	sp,	#5
      00020B 77               [ 8]  630 	ld	(hl), a
                           00020C   631 	C$Character.h$119$1_0$154	= .
                                    632 	.globl	C$Character.h$119$1_0$154
                                    633 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:119: character->x = x;
      00020C 21 06 00         [12]  634 	ld	hl, #0x0006
      00020F 09               [ 8]  635 	add	hl, bc
      000210 5D               [ 4]  636 	ld	e, l
      000211 54               [ 4]  637 	ld	d, h
      000212 F8 05            [12]  638 	ldhl	sp,	#5
      000214 7E               [ 8]  639 	ld	a, (hl)
      000215 12               [ 8]  640 	ld	(de), a
                           000216   641 	C$Character.h$120$1_0$154	= .
                                    642 	.globl	C$Character.h$120$1_0$154
                                    643 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:120: character->y = y;
      000216 21 07 00         [12]  644 	ld	hl, #0x0007
      000219 09               [ 8]  645 	add	hl, bc
      00021A 5D               [ 4]  646 	ld	e, l
      00021B 54               [ 4]  647 	ld	d, h
      00021C F8 0A            [12]  648 	ldhl	sp,	#10
      00021E 7E               [ 8]  649 	ld	a, (hl)
      00021F 12               [ 8]  650 	ld	(de), a
                           000220   651 	C$Character.h$122$4_0$157	= .
                                    652 	.globl	C$Character.h$122$4_0$157
                                    653 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000220 69               [ 4]  654 	ld	l, c
      000221 60               [ 4]  655 	ld	h, b
      000222 23               [ 8]  656 	inc	hl
      000223 33               [ 8]  657 	inc	sp
      000224 33               [ 8]  658 	inc	sp
      000225 E5               [16]  659 	push	hl
      000226 21 02 00         [12]  660 	ld	hl, #0x0002
      000229 09               [ 8]  661 	add	hl, bc
      00022A E5               [16]  662 	push	hl
      00022B 7D               [ 4]  663 	ld	a, l
      00022C F8 04            [12]  664 	ldhl	sp,	#4
      00022E 77               [ 8]  665 	ld	(hl), a
      00022F E1               [12]  666 	pop	hl
      000230 7C               [ 4]  667 	ld	a, h
      000231 F8 03            [12]  668 	ldhl	sp,	#3
      000233 77               [ 8]  669 	ld	(hl), a
      000234 F8 06            [12]  670 	ldhl	sp,	#6
      000236 36 00            [12]  671 	ld	(hl), #0x00
      000238                        672 00108$:
      000238 F8 02            [12]  673 	ldhl	sp,#2
      00023A 2A               [ 8]  674 	ld	a, (hl+)
      00023B 5F               [ 4]  675 	ld	e, a
      00023C 56               [ 8]  676 	ld	d, (hl)
      00023D 1A               [ 8]  677 	ld	a, (de)
      00023E F8 07            [12]  678 	ldhl	sp,	#7
      000240 32               [ 8]  679 	ld	(hl-), a
      000241 2A               [ 8]  680 	ld	a, (hl+)
      000242 96               [ 8]  681 	sub	a, (hl)
      000243 28 5B            [12]  682 	jr	Z, 00110$
                           000245   683 	C$Character.h$124$2_0$154	= .
                                    684 	.globl	C$Character.h$124$2_0$154
                                    685 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000245 F8 07            [12]  686 	ldhl	sp,	#7
      000247 36 00            [12]  687 	ld	(hl), #0x00
      000249                        688 00105$:
      000249 D1               [12]  689 	pop	de
      00024A D5               [16]  690 	push	de
      00024B 1A               [ 8]  691 	ld	a, (de)
      00024C F8 04            [12]  692 	ldhl	sp,	#4
      00024E 77               [ 8]  693 	ld	(hl), a
      00024F F8 07            [12]  694 	ldhl	sp,	#7
      000251 7E               [ 8]  695 	ld	a, (hl)
      000252 F8 04            [12]  696 	ldhl	sp,	#4
      000254 96               [ 8]  697 	sub	a, (hl)
      000255 28 44            [12]  698 	jr	Z, 00109$
                           000257   699 	C$Character.h$127$5_0$158	= .
                                    700 	.globl	C$Character.h$127$5_0$158
                                    701 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:127: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      000257 0A               [ 8]  702 	ld	a, (bc)
      000258 F8 07            [12]  703 	ldhl	sp,	#7
      00025A 86               [ 8]  704 	add	a, (hl)
      00025B 57               [ 4]  705 	ld	d, a
      00025C C5               [16]  706 	push	bc
      00025D D5               [16]  707 	push	de
      00025E F8 08            [12]  708 	ldhl	sp,	#8
      000260 2A               [ 8]  709 	ld	a, (hl+)
      000261 23               [ 8]  710 	inc	hl
      000262 5F               [ 4]  711 	ld	e, a
      000263 7E               [ 8]  712 	ld	a, (hl)
      000264 CDr00r00         [24]  713 	call	__muluchar
      000267 79               [ 4]  714 	ld	a, c
      000268 D1               [12]  715 	pop	de
      000269 C1               [12]  716 	pop	bc
      00026A 82               [ 4]  717 	add	a, d
      00026B 5F               [ 4]  718 	ld	e, a
                                    719 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:130: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      00026C F8 06            [12]  720 	ldhl	sp,	#6
      00026E 7E               [ 8]  721 	ld	a, (hl)
      00026F 87               [ 4]  722 	add	a, a
      000270 87               [ 4]  723 	add	a, a
      000271 87               [ 4]  724 	add	a, a
      000272 F8 0A            [12]  725 	ldhl	sp,	#10
      000274 56               [ 8]  726 	ld	d, (hl)
      000275 82               [ 4]  727 	add	a, d
      000276 57               [ 4]  728 	ld	d, a
      000277 F8 07            [12]  729 	ldhl	sp,	#7
      000279 3A               [ 8]  730 	ld	a, (hl-)
      00027A 2B               [ 8]  731 	dec	hl
      00027B 87               [ 4]  732 	add	a, a
      00027C 87               [ 4]  733 	add	a, a
      00027D 87               [ 4]  734 	add	a, a
      00027E 6E               [ 8]  735 	ld	l, (hl)
                                    736 ;	spillPairReg hl
                                    737 ;	spillPairReg hl
      00027F 85               [ 4]  738 	add	a, l
      000280 F8 04            [12]  739 	ldhl	sp,	#4
      000282 77               [ 8]  740 	ld	(hl), a
                                    741 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000283 26 00            [ 8]  742 	ld	h, #0x00
                                    743 ;	spillPairReg hl
                                    744 ;	spillPairReg hl
      000285 6B               [ 4]  745 	ld	l, e
      000286 29               [ 8]  746 	add	hl, hl
      000287 29               [ 8]  747 	add	hl, hl
      000288 D5               [16]  748 	push	de
      000289 11r00r00         [12]  749 	ld	de, #_shadow_OAM
      00028C 19               [ 8]  750 	add	hl, de
      00028D D1               [12]  751 	pop	de
                                    752 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      00028E 7A               [ 4]  753 	ld	a, d
      00028F 22               [ 8]  754 	ld	(hl+), a
      000290 5D               [ 4]  755 	ld	e, l
      000291 54               [ 4]  756 	ld	d, h
      000292 F8 04            [12]  757 	ldhl	sp,	#4
      000294 7E               [ 8]  758 	ld	a, (hl)
      000295 12               [ 8]  759 	ld	(de), a
                           000296   760 	C$Character.h$124$4_0$157	= .
                                    761 	.globl	C$Character.h$124$4_0$157
                                    762 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      000296 F8 07            [12]  763 	ldhl	sp,	#7
      000298 34               [12]  764 	inc	(hl)
      000299 18 AE            [12]  765 	jr	00105$
      00029B                        766 00109$:
                           00029B   767 	C$Character.h$122$2_0$155	= .
                                    768 	.globl	C$Character.h$122$2_0$155
                                    769 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      00029B F8 06            [12]  770 	ldhl	sp,	#6
      00029D 34               [12]  771 	inc	(hl)
      00029E 18 98            [12]  772 	jr	00108$
      0002A0                        773 00110$:
                           0002A0   774 	C$Character.h$133$2_0$154	= .
                                    775 	.globl	C$Character.h$133$2_0$154
                                    776 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: }
      0002A0 E8 08            [16]  777 	add	sp, #8
      0002A2 E1               [12]  778 	pop	hl
      0002A3 33               [ 8]  779 	inc	sp
      0002A4 E9               [ 4]  780 	jp	(hl)
                           0002A5   781 	G$ScrollCharacter$0$0	= .
                                    782 	.globl	G$ScrollCharacter$0$0
                           0002A5   783 	C$Character.h$135$2_0$163	= .
                                    784 	.globl	C$Character.h$135$2_0$163
                                    785 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    786 ;	---------------------------------
                                    787 ; Function ScrollCharacter
                                    788 ; ---------------------------------
      0002A5                        789 _ScrollCharacter::
      0002A5 D5               [16]  790 	push	de
      0002A6 4F               [ 4]  791 	ld	c, a
                           0002A7   792 	C$Character.h$137$1_0$163	= .
                                    793 	.globl	C$Character.h$137$1_0$163
                                    794 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:137: character->x += x;
      0002A7 D1               [12]  795 	pop	de
      0002A8 D5               [16]  796 	push	de
      0002A9 21 06 00         [12]  797 	ld	hl, #0x0006
      0002AC 19               [ 8]  798 	add	hl, de
      0002AD 5D               [ 4]  799 	ld	e, l
      0002AE 54               [ 4]  800 	ld	d, h
      0002AF 1A               [ 8]  801 	ld	a, (de)
      0002B0 81               [ 4]  802 	add	a, c
      0002B1 12               [ 8]  803 	ld	(de), a
                           0002B2   804 	C$Character.h$138$1_0$163	= .
                                    805 	.globl	C$Character.h$138$1_0$163
                                    806 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:138: character->y += y;
      0002B2 D5               [16]  807 	push	de
      0002B3 F8 02            [12]  808 	ldhl	sp,#2
      0002B5 2A               [ 8]  809 	ld	a, (hl+)
      0002B6 5F               [ 4]  810 	ld	e, a
      0002B7 56               [ 8]  811 	ld	d, (hl)
      0002B8 21 07 00         [12]  812 	ld	hl, #0x0007
      0002BB 19               [ 8]  813 	add	hl, de
      0002BC D1               [12]  814 	pop	de
      0002BD 4D               [ 4]  815 	ld	c, l
      0002BE 44               [ 4]  816 	ld	b, h
      0002BF 0A               [ 8]  817 	ld	a, (bc)
      0002C0 F8 04            [12]  818 	ldhl	sp,	#4
      0002C2 86               [ 8]  819 	add	a, (hl)
                           0002C3   820 	C$Character.h$140$1_0$163	= .
                                    821 	.globl	C$Character.h$140$1_0$163
                                    822 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:140: MoveCharacter(character, character->x, character->y);
      0002C3 02               [ 8]  823 	ld	(bc), a
      0002C4 47               [ 4]  824 	ld	b, a
      0002C5 1A               [ 8]  825 	ld	a, (de)
      0002C6 4F               [ 4]  826 	ld	c, a
      0002C7 C5               [16]  827 	push	bc
      0002C8 33               [ 8]  828 	inc	sp
      0002C9 79               [ 4]  829 	ld	a, c
      0002CA F8 01            [12]  830 	ldhl	sp,	#1
      0002CC 5E               [ 8]  831 	ld	e, (hl)
      0002CD 23               [ 8]  832 	inc	hl
      0002CE 56               [ 8]  833 	ld	d, (hl)
                           0002CF   834 	C$Character.h$141$1_0$163	= .
                                    835 	.globl	C$Character.h$141$1_0$163
                                    836 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:141: }
      0002CF CDr05r02         [24]  837 	call	_MoveCharacter
      0002D2 E1               [12]  838 	pop	hl
      0002D3 E1               [12]  839 	pop	hl
      0002D4 33               [ 8]  840 	inc	sp
      0002D5 E9               [ 4]  841 	jp	(hl)
                           0002D6   842 	G$MoveCharacterWithJoypad$0$0	= .
                                    843 	.globl	G$MoveCharacterWithJoypad$0$0
                           0002D6   844 	C$Character.h$143$1_0$165	= .
                                    845 	.globl	C$Character.h$143$1_0$165
                                    846 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:143: void MoveCharacterWithJoypad(Character *character)
                                    847 ;	---------------------------------
                                    848 ; Function MoveCharacterWithJoypad
                                    849 ; ---------------------------------
      0002D6                        850 _MoveCharacterWithJoypad::
      0002D6 E8 F8            [16]  851 	add	sp, #-8
      0002D8 4B               [ 4]  852 	ld	c, e
      0002D9 42               [ 4]  853 	ld	b, d
                           0002DA   854 	C$Character.h$146$1_0$165	= .
                                    855 	.globl	C$Character.h$146$1_0$165
                                    856 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:146: uint8_t buttons = joypad();
      0002DA CDr00r00         [24]  857 	call	_joypad
                           0002DD   858 	C$Character.h$148$1_0$165	= .
                                    859 	.globl	C$Character.h$148$1_0$165
                                    860 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:148: int8_t moveX = 0;
      0002DD F8 00            [12]  861 	ldhl	sp,	#0
      0002DF 36 00            [12]  862 	ld	(hl), #0x00
                           0002E1   863 	C$Character.h$149$1_0$165	= .
                                    864 	.globl	C$Character.h$149$1_0$165
                                    865 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: int8_t moveY = 0;
      0002E1 23               [ 8]  866 	inc	hl
      0002E2 36 00            [12]  867 	ld	(hl), #0x00
                           0002E4   868 	C$Character.h$151$1_0$165	= .
                                    869 	.globl	C$Character.h$151$1_0$165
                                    870 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:151: if (buttons & J_LEFT)
      0002E4 CB 4F            [ 8]  871 	bit	1, a
      0002E6 28 06            [12]  872 	jr	Z, 00104$
                           0002E8   873 	C$Character.h$153$2_0$166	= .
                                    874 	.globl	C$Character.h$153$2_0$166
                                    875 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: moveX = -1;
      0002E8 F8 00            [12]  876 	ldhl	sp,	#0
      0002EA 36 FF            [12]  877 	ld	(hl), #0xff
      0002EC 18 08            [12]  878 	jr	00108$
      0002EE                        879 00104$:
                           0002EE   880 	C$Character.h$155$1_0$165	= .
                                    881 	.globl	C$Character.h$155$1_0$165
                                    882 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: else if (buttons & J_RIGHT)
      0002EE CB 47            [ 8]  883 	bit	0, a
      0002F0 28 04            [12]  884 	jr	Z, 00108$
                           0002F2   885 	C$Character.h$157$2_0$167	= .
                                    886 	.globl	C$Character.h$157$2_0$167
                                    887 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:157: moveX = 1;
      0002F2 F8 00            [12]  888 	ldhl	sp,	#0
      0002F4 36 01            [12]  889 	ld	(hl), #0x01
                           0002F6   890 	C$Character.h$163$1_0$165	= .
                                    891 	.globl	C$Character.h$163$1_0$165
                                    892 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:163: else if (buttons & J_DOWN)
      0002F6                        893 00108$:
                           0002F6   894 	C$Character.h$168$1_0$165	= .
                                    895 	.globl	C$Character.h$168$1_0$165
                                    896 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      0002F6 E6 10            [ 8]  897 	and	a, #0x10
      0002F8 F8 02            [12]  898 	ldhl	sp,	#2
      0002FA 22               [ 8]  899 	ld	(hl+), a
      0002FB 36 00            [12]  900 	ld	(hl), #0x00
                           0002FD   901 	C$Character.h$178$1_0$165	= .
                                    902 	.globl	C$Character.h$178$1_0$165
                                    903 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:178: character->hasJumped = 1;
      0002FD 21 0F 00         [12]  904 	ld	hl, #0x000f
      000300 09               [ 8]  905 	add	hl, bc
      000301 E5               [16]  906 	push	hl
      000302 7D               [ 4]  907 	ld	a, l
      000303 F8 06            [12]  908 	ldhl	sp,	#6
      000305 77               [ 8]  909 	ld	(hl), a
      000306 E1               [12]  910 	pop	hl
      000307 7C               [ 4]  911 	ld	a, h
      000308 F8 05            [12]  912 	ldhl	sp,	#5
      00030A 77               [ 8]  913 	ld	(hl), a
                           00030B   914 	C$Character.h$179$1_0$165	= .
                                    915 	.globl	C$Character.h$179$1_0$165
                                    916 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:179: character->jumpedFrames = 0;
      00030B 21 10 00         [12]  917 	ld	hl, #0x0010
      00030E 09               [ 8]  918 	add	hl, bc
      00030F E5               [16]  919 	push	hl
      000310 7D               [ 4]  920 	ld	a, l
      000311 F8 08            [12]  921 	ldhl	sp,	#8
      000313 77               [ 8]  922 	ld	(hl), a
      000314 E1               [12]  923 	pop	hl
      000315 7C               [ 4]  924 	ld	a, h
      000316 F8 07            [12]  925 	ldhl	sp,	#7
      000318 77               [ 8]  926 	ld	(hl), a
                           000319   927 	C$Character.h$168$1_0$165	= .
                                    928 	.globl	C$Character.h$168$1_0$165
                                    929 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:168: if ((buttons & J_A))
      000319 AF               [ 4]  930 	xor	a, a
      00031A F8 02            [12]  931 	ldhl	sp,	#2
      00031C B6               [ 8]  932 	or	a, (hl)
      00031D 28 21            [12]  933 	jr	Z, 00110$
                           00031F   934 	C$Character.h$171$2_0$170	= .
                                    935 	.globl	C$Character.h$171$2_0$170
                                    936 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:171: NR10_REG = 0x00;
                           00031F   937 	C$Character.h$172$2_0$170	= .
                                    938 	.globl	C$Character.h$172$2_0$170
                                    939 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:172: NR11_REG = 0x81;
                           00031F   940 	C$Character.h$173$2_0$170	= .
                                    941 	.globl	C$Character.h$173$2_0$170
                                    942 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:173: NR12_REG = 0x43;
                           00031F   943 	C$Character.h$174$2_0$170	= .
                                    944 	.globl	C$Character.h$174$2_0$170
                                    945 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:174: NR13_REG = 0x73;
                           00031F   946 	C$Character.h$175$2_0$170	= .
                                    947 	.globl	C$Character.h$175$2_0$170
                                    948 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:175: NR14_REG = 0x86;
                           00031F   949 	C$Character.h$178$2_0$170	= .
                                    950 	.globl	C$Character.h$178$2_0$170
                                    951 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:178: character->hasJumped = 1;
      00031F 23               [ 8]  952 	inc	hl
      000320 23               [ 8]  953 	inc	hl
      000321 AF               [ 4]  954 	xor	a, a
      000322 E0r00            [12]  955 	ldh	(_NR10_REG + 0), a
      000324 3E 81            [ 8]  956 	ld	a, #0x81
      000326 E0r00            [12]  957 	ldh	(_NR11_REG + 0), a
      000328 3E 43            [ 8]  958 	ld	a, #0x43
      00032A E0r00            [12]  959 	ldh	(_NR12_REG + 0), a
      00032C 3E 73            [ 8]  960 	ld	a, #0x73
      00032E E0r00            [12]  961 	ldh	(_NR13_REG + 0), a
      000330 3E 86            [ 8]  962 	ld	a, #0x86
      000332 E0r00            [12]  963 	ldh	(_NR14_REG + 0), a
      000334 2A               [ 8]  964 	ld	a,	(hl+)
      000335 66               [ 8]  965 	ld	h, (hl)
      000336 6F               [ 4]  966 	ld	l, a
      000337 36 01            [12]  967 	ld	(hl), #0x01
                           000339   968 	C$Character.h$179$2_0$170	= .
                                    969 	.globl	C$Character.h$179$2_0$170
                                    970 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:179: character->jumpedFrames = 0;
      000339 F8 06            [12]  971 	ldhl	sp,	#6
      00033B 2A               [ 8]  972 	ld	a,	(hl+)
      00033C 66               [ 8]  973 	ld	h, (hl)
      00033D 6F               [ 4]  974 	ld	l, a
      00033E 36 00            [12]  975 	ld	(hl), #0x00
      000340                        976 00110$:
                           000340   977 	C$Character.h$183$1_0$165	= .
                                    978 	.globl	C$Character.h$183$1_0$165
                                    979 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:183: if (character->hasJumped && (buttons & J_A))
      000340 F8 04            [12]  980 	ldhl	sp,#4
      000342 2A               [ 8]  981 	ld	a, (hl+)
      000343 5F               [ 4]  982 	ld	e, a
      000344 56               [ 8]  983 	ld	d, (hl)
      000345 1A               [ 8]  984 	ld	a, (de)
      000346 B7               [ 4]  985 	or	a, a
      000347 28 17            [12]  986 	jr	Z, 00112$
      000349 AF               [ 4]  987 	xor	a, a
      00034A F8 02            [12]  988 	ldhl	sp,	#2
      00034C B6               [ 8]  989 	or	a, (hl)
      00034D 28 11            [12]  990 	jr	Z, 00112$
                           00034F   991 	C$Character.h$186$2_0$171	= .
                                    992 	.globl	C$Character.h$186$2_0$171
                                    993 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:186: moveY = -1;
      00034F 2B               [ 8]  994 	dec	hl
      000350 36 FF            [12]  995 	ld	(hl), #0xff
                           000352   996 	C$Character.h$189$2_0$171	= .
                                    997 	.globl	C$Character.h$189$2_0$171
                                    998 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:189: character->jumpedFrames++;
      000352 F8 06            [12]  999 	ldhl	sp,#6
      000354 2A               [ 8] 1000 	ld	a, (hl+)
      000355 5F               [ 4] 1001 	ld	e, a
      000356 3A               [ 8] 1002 	ld	a, (hl-)
      000357 57               [ 4] 1003 	ld	d, a
      000358 1A               [ 8] 1004 	ld	a, (de)
      000359 3C               [ 4] 1005 	inc	a
      00035A F5               [16] 1006 	push	af
      00035B 2A               [ 8] 1007 	ld	a,	(hl+)
      00035C 66               [ 8] 1008 	ld	h, (hl)
      00035D 6F               [ 4] 1009 	ld	l, a
      00035E F1               [12] 1010 	pop	af
      00035F 77               [ 8] 1011 	ld	(hl), a
      000360                       1012 00112$:
                           000360  1013 	C$Character.h$193$1_0$165	= .
                                   1014 	.globl	C$Character.h$193$1_0$165
                                   1015 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:193: character->movementForceX = moveX;
      000360 21 0C 00         [12] 1016 	ld	hl, #0x000c
      000363 09               [ 8] 1017 	add	hl, bc
      000364 5D               [ 4] 1018 	ld	e, l
      000365 54               [ 4] 1019 	ld	d, h
      000366 F8 00            [12] 1020 	ldhl	sp,	#0
      000368 7E               [ 8] 1021 	ld	a, (hl)
      000369 12               [ 8] 1022 	ld	(de), a
                           00036A  1023 	C$Character.h$194$1_0$165	= .
                                   1024 	.globl	C$Character.h$194$1_0$165
                                   1025 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:194: character->movementForceY = moveY;
      00036A 21 0D 00         [12] 1026 	ld	hl, #0x000d
      00036D 09               [ 8] 1027 	add	hl, bc
      00036E 4D               [ 4] 1028 	ld	c, l
      00036F 44               [ 4] 1029 	ld	b, h
      000370 F8 01            [12] 1030 	ldhl	sp,	#1
      000372 7E               [ 8] 1031 	ld	a, (hl)
      000373 02               [ 8] 1032 	ld	(bc), a
                           000374  1033 	C$Character.h$195$1_0$165	= .
                                   1034 	.globl	C$Character.h$195$1_0$165
                                   1035 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:195: }
      000374 E8 08            [16] 1036 	add	sp, #8
                           000376  1037 	C$Character.h$195$1_0$165	= .
                                   1038 	.globl	C$Character.h$195$1_0$165
                           000376  1039 	XG$MoveCharacterWithJoypad$0$0	= .
                                   1040 	.globl	XG$MoveCharacterWithJoypad$0$0
      000376 C9               [16] 1041 	ret
                           000377  1042 	G$SetupCharacter$0$0	= .
                                   1043 	.globl	G$SetupCharacter$0$0
                           000377  1044 	C$Character.h$198$1_0$173	= .
                                   1045 	.globl	C$Character.h$198$1_0$173
                                   1046 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:198: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                   1047 ;	---------------------------------
                                   1048 ; Function SetupCharacter
                                   1049 ; ---------------------------------
      000377                       1050 _SetupCharacter::
      000377 3B               [ 8] 1051 	dec	sp
      000378 F8 00            [12] 1052 	ldhl	sp,	#0
      00037A 77               [ 8] 1053 	ld	(hl), a
                           00037B  1054 	C$Character.h$200$1_0$173	= .
                                   1055 	.globl	C$Character.h$200$1_0$173
                                   1056 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:200: character->tilemap = tilemap;
      00037B 21 11 00         [12] 1057 	ld	hl, #0x0011
      00037E 19               [ 8] 1058 	add	hl, de
      00037F 4D               [ 4] 1059 	ld	c, l
      000380 44               [ 4] 1060 	ld	b, h
      000381 F8 07            [12] 1061 	ldhl	sp,	#7
      000383 2A               [ 8] 1062 	ld	a, (hl+)
      000384 02               [ 8] 1063 	ld	(bc), a
      000385 03               [ 8] 1064 	inc	bc
      000386 7E               [ 8] 1065 	ld	a, (hl)
      000387 02               [ 8] 1066 	ld	(bc), a
                           000388  1067 	C$Character.h$201$1_0$173	= .
                                   1068 	.globl	C$Character.h$201$1_0$173
                                   1069 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:201: character->spriteId = spriteId;
      000388 F8 00            [12] 1070 	ldhl	sp,	#0
      00038A 7E               [ 8] 1071 	ld	a, (hl)
      00038B 12               [ 8] 1072 	ld	(de), a
                           00038C  1073 	C$Character.h$202$1_0$173	= .
                                   1074 	.globl	C$Character.h$202$1_0$173
                                   1075 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:202: character->spriteTileWidth = tileWidth;
      00038C 4B               [ 4] 1076 	ld	c, e
      00038D 42               [ 4] 1077 	ld	b, d
      00038E 03               [ 8] 1078 	inc	bc
      00038F F8 03            [12] 1079 	ldhl	sp,	#3
                           000391  1080 	C$Character.h$203$1_0$173	= .
                                   1081 	.globl	C$Character.h$203$1_0$173
                                   1082 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:203: character->spriteTileHeight = tileHeight;
      000391 2A               [ 8] 1083 	ld	a, (hl+)
      000392 02               [ 8] 1084 	ld	(bc), a
      000393 4B               [ 4] 1085 	ld	c, e
      000394 42               [ 4] 1086 	ld	b, d
      000395 03               [ 8] 1087 	inc	bc
      000396 03               [ 8] 1088 	inc	bc
      000397 7E               [ 8] 1089 	ld	a, (hl)
      000398 02               [ 8] 1090 	ld	(bc), a
                           000399  1091 	C$Character.h$204$1_0$173	= .
                                   1092 	.globl	C$Character.h$204$1_0$173
                                   1093 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:204: character->tilesetStart = tilesetStart;
      000399 21 05 00         [12] 1094 	ld	hl, #0x0005
      00039C 19               [ 8] 1095 	add	hl, de
      00039D 4D               [ 4] 1096 	ld	c, l
      00039E 44               [ 4] 1097 	ld	b, h
      00039F F8 05            [12] 1098 	ldhl	sp,	#5
                           0003A1  1099 	C$Character.h$205$1_0$173	= .
                                   1100 	.globl	C$Character.h$205$1_0$173
                                   1101 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:205: character->spriteFrames = totalFrames;
      0003A1 2A               [ 8] 1102 	ld	a, (hl+)
      0003A2 02               [ 8] 1103 	ld	(bc), a
      0003A3 4B               [ 4] 1104 	ld	c, e
      0003A4 42               [ 4] 1105 	ld	b, d
      0003A5 03               [ 8] 1106 	inc	bc
      0003A6 03               [ 8] 1107 	inc	bc
      0003A7 03               [ 8] 1108 	inc	bc
      0003A8 7E               [ 8] 1109 	ld	a, (hl)
      0003A9 02               [ 8] 1110 	ld	(bc), a
                           0003AA  1111 	C$Character.h$206$1_0$173	= .
                                   1112 	.globl	C$Character.h$206$1_0$173
                                   1113 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:206: character->underfootState = 0;
      0003AA 21 0E 00         [12] 1114 	ld	hl, #0x000e
      0003AD 19               [ 8] 1115 	add	hl, de
      0003AE 36 00            [12] 1116 	ld	(hl), #0x00
                           0003B0  1117 	C$Character.h$207$1_0$173	= .
                                   1118 	.globl	C$Character.h$207$1_0$173
                                   1119 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:207: character->jumpedFrames = 0;
      0003B0 21 10 00         [12] 1120 	ld	hl, #0x0010
      0003B3 19               [ 8] 1121 	add	hl, de
      0003B4 36 00            [12] 1122 	ld	(hl), #0x00
                           0003B6  1123 	C$Character.h$208$1_0$173	= .
                                   1124 	.globl	C$Character.h$208$1_0$173
                                   1125 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:208: character->hasJumped = 0;
      0003B6 21 0F 00         [12] 1126 	ld	hl, #0x000f
      0003B9 19               [ 8] 1127 	add	hl, de
      0003BA 36 00            [12] 1128 	ld	(hl), #0x00
                           0003BC  1129 	C$Character.h$210$1_0$173	= .
                                   1130 	.globl	C$Character.h$210$1_0$173
                                   1131 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:210: LoadSpriteFrame(character, 0);
      0003BC AF               [ 4] 1132 	xor	a, a
      0003BD CDr00r00         [24] 1133 	call	_LoadSpriteFrame
                           0003C0  1134 	C$Character.h$211$1_0$173	= .
                                   1135 	.globl	C$Character.h$211$1_0$173
                                   1136 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:211: }
      0003C0 33               [ 8] 1137 	inc	sp
      0003C1 E1               [12] 1138 	pop	hl
      0003C2 E8 06            [16] 1139 	add	sp, #6
      0003C4 E9               [ 4] 1140 	jp	(hl)
                           0003C5  1141 	G$ShowTitle$0$0	= .
                                   1142 	.globl	G$ShowTitle$0$0
                           0003C5  1143 	C$main.c$38$1_0$178	= .
                                   1144 	.globl	C$main.c$38$1_0$178
                                   1145 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:38: void ShowTitle(void)
                                   1146 ;	---------------------------------
                                   1147 ; Function ShowTitle
                                   1148 ; ---------------------------------
      0003C5                       1149 _ShowTitle::
                           0003C5  1150 	C$main.c$41$1_0$178	= .
                                   1151 	.globl	C$main.c$41$1_0$178
                                   1152 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:41: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0003C5 11r00r00         [12] 1153 	ld	de, #_SplashScreenSprite_tileset
      0003C8 D5               [16] 1154 	push	de
      0003C9 21 00 C8         [12] 1155 	ld	hl, #0xc800
      0003CC E5               [16] 1156 	push	hl
      0003CD CDr00r00         [24] 1157 	call	_set_bkg_data
      0003D0 E8 04            [16] 1158 	add	sp, #4
                           0003D2  1159 	C$main.c$44$1_0$178	= .
                                   1160 	.globl	C$main.c$44$1_0$178
                                   1161 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:44: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      0003D2 11r00r00         [12] 1162 	ld	de, #_SplashScreenSprite_tilemap
      0003D5 D5               [16] 1163 	push	de
      0003D6 21 14 12         [12] 1164 	ld	hl, #0x1214
      0003D9 E5               [16] 1165 	push	hl
      0003DA AF               [ 4] 1166 	xor	a, a
      0003DB 0F               [ 4] 1167 	rrca
      0003DC F5               [16] 1168 	push	af
      0003DD CDr00r00         [24] 1169 	call	_set_bkg_tiles
      0003E0 E8 06            [16] 1170 	add	sp, #6
                           0003E2  1171 	C$main.c$46$1_0$178	= .
                                   1172 	.globl	C$main.c$46$1_0$178
                                   1173 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:46: SHOW_BKG;
      0003E2 F0r00            [12] 1174 	ldh	a, (_LCDC_REG + 0)
      0003E4 F6 01            [ 8] 1175 	or	a, #0x01
      0003E6 E0r00            [12] 1176 	ldh	(_LCDC_REG + 0), a
                           0003E8  1177 	C$main.c$47$1_0$178	= .
                                   1178 	.globl	C$main.c$47$1_0$178
                                   1179 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:47: SHOW_SPRITES;
      0003E8 F0r00            [12] 1180 	ldh	a, (_LCDC_REG + 0)
      0003EA F6 02            [ 8] 1181 	or	a, #0x02
      0003EC E0r00            [12] 1182 	ldh	(_LCDC_REG + 0), a
                           0003EE  1183 	C$main.c$48$1_0$178	= .
                                   1184 	.globl	C$main.c$48$1_0$178
                                   1185 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:48: DISPLAY_ON;
      0003EE F0r00            [12] 1186 	ldh	a, (_LCDC_REG + 0)
      0003F0 F6 80            [ 8] 1187 	or	a, #0x80
      0003F2 E0r00            [12] 1188 	ldh	(_LCDC_REG + 0), a
                           0003F4  1189 	C$main.c$49$1_0$178	= .
                                   1190 	.globl	C$main.c$49$1_0$178
                                   1191 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: }
                           0003F4  1192 	C$main.c$49$1_0$178	= .
                                   1193 	.globl	C$main.c$49$1_0$178
                           0003F4  1194 	XG$ShowTitle$0$0	= .
                                   1195 	.globl	XG$ShowTitle$0$0
      0003F4 C9               [16] 1196 	ret
                           0003F5  1197 	G$SetupBackGround$0$0	= .
                                   1198 	.globl	G$SetupBackGround$0$0
                           0003F5  1199 	C$main.c$51$1_0$179	= .
                                   1200 	.globl	C$main.c$51$1_0$179
                                   1201 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:51: void SetupBackGround()
                                   1202 ;	---------------------------------
                                   1203 ; Function SetupBackGround
                                   1204 ; ---------------------------------
      0003F5                       1205 _SetupBackGround::
                           0003F5  1206 	C$main.c$54$1_0$179	= .
                                   1207 	.globl	C$main.c$54$1_0$179
                                   1208 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:54: set_bkg_data(0, BackGroundSprite_tileset_size, BackGroundSprite_tileset);
      0003F5 11r00r00         [12] 1209 	ld	de, #_BackGroundSprite_tileset
      0003F8 D5               [16] 1210 	push	de
      0003F9 21 00 35         [12] 1211 	ld	hl, #0x3500
      0003FC E5               [16] 1212 	push	hl
      0003FD CDr00r00         [24] 1213 	call	_set_bkg_data
      000400 E8 04            [16] 1214 	add	sp, #4
                           000402  1215 	C$main.c$57$1_0$179	= .
                                   1216 	.globl	C$main.c$57$1_0$179
                                   1217 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:57: set_bkg_tiles(0, 0, 40, 18, BackGroundSprite_tilemap);
      000402 11r00r00         [12] 1218 	ld	de, #_BackGroundSprite_tilemap
      000405 D5               [16] 1219 	push	de
      000406 21 28 12         [12] 1220 	ld	hl, #0x1228
      000409 E5               [16] 1221 	push	hl
      00040A AF               [ 4] 1222 	xor	a, a
      00040B 0F               [ 4] 1223 	rrca
      00040C F5               [16] 1224 	push	af
      00040D CDr00r00         [24] 1225 	call	_set_bkg_tiles
      000410 E8 06            [16] 1226 	add	sp, #6
                           000412  1227 	C$main.c$58$1_0$179	= .
                                   1228 	.globl	C$main.c$58$1_0$179
                                   1229 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:58: }
                           000412  1230 	C$main.c$58$1_0$179	= .
                                   1231 	.globl	C$main.c$58$1_0$179
                           000412  1232 	XG$SetupBackGround$0$0	= .
                                   1233 	.globl	XG$SetupBackGround$0$0
      000412 C9               [16] 1234 	ret
                           000413  1235 	G$DetectCollisions$0$0	= .
                                   1236 	.globl	G$DetectCollisions$0$0
                           000413  1237 	C$main.c$60$1_0$181	= .
                                   1238 	.globl	C$main.c$60$1_0$181
                                   1239 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:60: void DetectCollisions(Character *character, uint8_t *predictedX, uint8_t *predictedY)
                                   1240 ;	---------------------------------
                                   1241 ; Function DetectCollisions
                                   1242 ; ---------------------------------
      000413                       1243 _DetectCollisions::
                           000413  1244 	C$main.c$63$1_0$181	= .
                                   1245 	.globl	C$main.c$63$1_0$181
                                   1246 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: if (*predictedY >= GLOUND_LEVEL)
      000413 F8 02            [12] 1247 	ldhl	sp,	#2
      000415 2A               [ 8] 1248 	ld	a, (hl+)
      000416 4F               [ 4] 1249 	ld	c, a
      000417 46               [ 8] 1250 	ld	b, (hl)
      000418 0A               [ 8] 1251 	ld	a, (bc)
      000419 6F               [ 4] 1252 	ld	l, a
                                   1253 ;	spillPairReg hl
                                   1254 ;	spillPairReg hl
                           00041A  1255 	C$main.c$69$1_0$181	= .
                                   1256 	.globl	C$main.c$69$1_0$181
                                   1257 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:69: character->velocityY = 0;
      00041A 7B               [ 4] 1258 	ld	a, e
      00041B C6 09            [ 8] 1259 	add	a, #0x09
      00041D 5F               [ 4] 1260 	ld	e, a
      00041E 30 01            [12] 1261 	jr	NC, 00122$
      000420 14               [ 4] 1262 	inc	d
      000421                       1263 00122$:
                           000421  1264 	C$main.c$63$1_0$181	= .
                                   1265 	.globl	C$main.c$63$1_0$181
                                   1266 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: if (*predictedY >= GLOUND_LEVEL)
      000421 7D               [ 4] 1267 	ld	a, l
      000422 D6 82            [ 8] 1268 	sub	a, #0x82
      000424 38 07            [12] 1269 	jr	C, 00104$
                           000426  1270 	C$main.c$66$2_0$182	= .
                                   1271 	.globl	C$main.c$66$2_0$182
                                   1272 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:66: *predictedY = GLOUND_LEVEL; 
      000426 3E 82            [ 8] 1273 	ld	a, #0x82
      000428 02               [ 8] 1274 	ld	(bc), a
                           000429  1275 	C$main.c$69$2_0$182	= .
                                   1276 	.globl	C$main.c$69$2_0$182
                                   1277 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:69: character->velocityY = 0;
      000429 AF               [ 4] 1278 	xor	a, a
      00042A 12               [ 8] 1279 	ld	(de), a
      00042B 18 0A            [12] 1280 	jr	00106$
      00042D                       1281 00104$:
                           00042D  1282 	C$main.c$70$1_0$181	= .
                                   1283 	.globl	C$main.c$70$1_0$181
                                   1284 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:70: }else if(*predictedY < MAX_HEIGHT_LEVEL)
      00042D 7D               [ 4] 1285 	ld	a, l
      00042E D6 14            [ 8] 1286 	sub	a, #0x14
      000430 30 05            [12] 1287 	jr	NC, 00106$
                           000432  1288 	C$main.c$73$2_0$183	= .
                                   1289 	.globl	C$main.c$73$2_0$183
                                   1290 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:73: *predictedY = MAX_HEIGHT_LEVEL; 
      000432 3E 14            [ 8] 1291 	ld	a, #0x14
      000434 02               [ 8] 1292 	ld	(bc), a
                           000435  1293 	C$main.c$76$2_0$183	= .
                                   1294 	.globl	C$main.c$76$2_0$183
                                   1295 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:76: character->velocityY = 0;
      000435 AF               [ 4] 1296 	xor	a, a
      000436 12               [ 8] 1297 	ld	(de), a
      000437                       1298 00106$:
                           000437  1299 	C$main.c$78$1_0$181	= .
                                   1300 	.globl	C$main.c$78$1_0$181
                                   1301 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:78: }
      000437 E1               [12] 1302 	pop	hl
      000438 F1               [12] 1303 	pop	af
      000439 E9               [ 4] 1304 	jp	(hl)
                           00043A  1305 	G$MovementPhysics$0$0	= .
                                   1306 	.globl	G$MovementPhysics$0$0
                           00043A  1307 	C$main.c$80$1_0$185	= .
                                   1308 	.globl	C$main.c$80$1_0$185
                                   1309 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:80: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                   1310 ;	---------------------------------
                                   1311 ; Function MovementPhysics
                                   1312 ; ---------------------------------
      00043A                       1313 _MovementPhysics::
      00043A E8 F7            [16] 1314 	add	sp, #-9
      00043C F8 07            [12] 1315 	ldhl	sp,	#7
      00043E 7B               [ 4] 1316 	ld	a, e
      00043F 22               [ 8] 1317 	ld	(hl+), a
                           000440  1318 	C$main.c$83$1_1$185	= .
                                   1319 	.globl	C$main.c$83$1_1$185
                                   1320 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:83: if (character->movementForceY != 0)
      000440 7A               [ 4] 1321 	ld	a, d
      000441 32               [ 8] 1322 	ld	(hl-), a
      000442 2A               [ 8] 1323 	ld	a, (hl+)
      000443 5F               [ 4] 1324 	ld	e, a
      000444 56               [ 8] 1325 	ld	d, (hl)
      000445 21 0D 00         [12] 1326 	ld	hl, #0x000d
      000448 19               [ 8] 1327 	add	hl, de
      000449 E5               [16] 1328 	push	hl
      00044A 7D               [ 4] 1329 	ld	a, l
      00044B F8 04            [12] 1330 	ldhl	sp,	#4
      00044D 77               [ 8] 1331 	ld	(hl), a
      00044E E1               [12] 1332 	pop	hl
      00044F 7C               [ 4] 1333 	ld	a, h
      000450 F8 03            [12] 1334 	ldhl	sp,	#3
      000452 32               [ 8] 1335 	ld	(hl-), a
      000453 2A               [ 8] 1336 	ld	a, (hl+)
      000454 5F               [ 4] 1337 	ld	e, a
      000455 56               [ 8] 1338 	ld	d, (hl)
      000456 1A               [ 8] 1339 	ld	a, (de)
      000457 F8 06            [12] 1340 	ldhl	sp,	#6
                           000459  1341 	C$main.c$85$1_1$185	= .
                                   1342 	.globl	C$main.c$85$1_1$185
                                   1343 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:85: character->velocityY += character->movementForceY;
      000459 22               [ 8] 1344 	ld	(hl+), a
      00045A 2A               [ 8] 1345 	ld	a, (hl+)
      00045B 5F               [ 4] 1346 	ld	e, a
      00045C 56               [ 8] 1347 	ld	d, (hl)
      00045D 21 09 00         [12] 1348 	ld	hl, #0x0009
      000460 19               [ 8] 1349 	add	hl, de
      000461 33               [ 8] 1350 	inc	sp
      000462 33               [ 8] 1351 	inc	sp
      000463 E5               [16] 1352 	push	hl
                           000464  1353 	C$main.c$83$1_0$185	= .
                                   1354 	.globl	C$main.c$83$1_0$185
                                   1355 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:83: if (character->movementForceY != 0)
      000464 F8 06            [12] 1356 	ldhl	sp,	#6
      000466 7E               [ 8] 1357 	ld	a, (hl)
      000467 B7               [ 4] 1358 	or	a, a
      000468 28 0F            [12] 1359 	jr	Z, 00116$
                           00046A  1360 	C$main.c$85$2_0$186	= .
                                   1361 	.globl	C$main.c$85$2_0$186
                                   1362 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:85: character->velocityY += character->movementForceY;
      00046A D1               [12] 1363 	pop	de
      00046B D5               [16] 1364 	push	de
      00046C 1A               [ 8] 1365 	ld	a, (de)
      00046D 86               [ 8] 1366 	add	a, (hl)
      00046E 4F               [ 4] 1367 	ld	c, a
      00046F E1               [12] 1368 	pop	hl
      000470 E5               [16] 1369 	push	hl
      000471 71               [ 8] 1370 	ld	(hl), c
                           000472  1371 	C$main.c$86$2_0$186	= .
                                   1372 	.globl	C$main.c$86$2_0$186
                                   1373 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:86: jumpFrameCount = 0;
      000472 21r02r00         [12] 1374 	ld	hl, #_jumpFrameCount
      000475 36 00            [12] 1375 	ld	(hl), #0x00
      000477 18 57            [12] 1376 	jr	00117$
      000479                       1377 00116$:
                           000479  1378 	C$main.c$90$1_0$185	= .
                                   1379 	.globl	C$main.c$90$1_0$185
                                   1380 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:90: else if (character->underfootState & FOOT_IN_AIR)
      000479 F8 07            [12] 1381 	ldhl	sp,#7
      00047B 2A               [ 8] 1382 	ld	a, (hl+)
      00047C 5F               [ 4] 1383 	ld	e, a
      00047D 56               [ 8] 1384 	ld	d, (hl)
      00047E 21 0E 00         [12] 1385 	ld	hl, #0x000e
      000481 19               [ 8] 1386 	add	hl, de
      000482 4D               [ 4] 1387 	ld	c, l
      000483 44               [ 4] 1388 	ld	b, h
      000484 0A               [ 8] 1389 	ld	a, (bc)
      000485 CB 4F            [ 8] 1390 	bit	1, a
      000487 28 47            [12] 1391 	jr	Z, 00117$
                           000489  1392 	C$main.c$93$2_0$187	= .
                                   1393 	.globl	C$main.c$93$2_0$187
                                   1394 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:93: jumpFrameCount = (jumpFrameCount + 1) % 120;
      000489 21r02r00         [12] 1395 	ld	hl, #_jumpFrameCount
      00048C 5E               [ 8] 1396 	ld	e, (hl)
      00048D 16 00            [ 8] 1397 	ld	d, #0x00
      00048F 13               [ 8] 1398 	inc	de
      000490 01 78 00         [12] 1399 	ld	bc, #0x0078
      000493 CDr00r00         [24] 1400 	call	__modsint
      000496 21r02r00         [12] 1401 	ld	hl, #_jumpFrameCount
      000499 71               [ 8] 1402 	ld	(hl), c
                           00049A  1403 	C$main.c$96$2_0$187	= .
                                   1404 	.globl	C$main.c$96$2_0$187
                                   1405 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:96: if (jumpFrameCount < 3)
      00049A 7E               [ 8] 1406 	ld	a, (hl)
      00049B D6 03            [ 8] 1407 	sub	a, #0x03
      00049D 30 06            [12] 1408 	jr	NC, 00111$
                           00049F  1409 	C$main.c$97$2_0$187	= .
                                   1410 	.globl	C$main.c$97$2_0$187
                                   1411 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:97: character->velocityY = -2;
      00049F E1               [12] 1412 	pop	hl
      0004A0 36 FE            [12] 1413 	ld	(hl), #0xfe
      0004A2 E5               [16] 1414 	push	hl
      0004A3 18 2B            [12] 1415 	jr	00117$
      0004A5                       1416 00111$:
                           0004A5  1417 	C$main.c$98$2_0$187	= .
                                   1418 	.globl	C$main.c$98$2_0$187
                                   1419 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:98: else if (jumpFrameCount < 10)
      0004A5 FAr02r00         [16] 1420 	ld	a, (#_jumpFrameCount)
      0004A8 D6 0A            [ 8] 1421 	sub	a, #0x0a
      0004AA 30 06            [12] 1422 	jr	NC, 00108$
                           0004AC  1423 	C$main.c$99$2_0$187	= .
                                   1424 	.globl	C$main.c$99$2_0$187
                                   1425 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:99: character->velocityY = -1;
      0004AC E1               [12] 1426 	pop	hl
      0004AD 36 FF            [12] 1427 	ld	(hl), #0xff
      0004AF E5               [16] 1428 	push	hl
      0004B0 18 1E            [12] 1429 	jr	00117$
      0004B2                       1430 00108$:
                           0004B2  1431 	C$main.c$100$2_0$187	= .
                                   1432 	.globl	C$main.c$100$2_0$187
                                   1433 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:100: else if (jumpFrameCount < 14)
      0004B2 FAr02r00         [16] 1434 	ld	a, (#_jumpFrameCount)
      0004B5 D6 0E            [ 8] 1435 	sub	a, #0x0e
      0004B7 30 06            [12] 1436 	jr	NC, 00105$
                           0004B9  1437 	C$main.c$101$2_0$187	= .
                                   1438 	.globl	C$main.c$101$2_0$187
                                   1439 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:101: character->velocityY = 0;
      0004B9 E1               [12] 1440 	pop	hl
      0004BA 36 00            [12] 1441 	ld	(hl), #0x00
      0004BC E5               [16] 1442 	push	hl
      0004BD 18 11            [12] 1443 	jr	00117$
      0004BF                       1444 00105$:
                           0004BF  1445 	C$main.c$102$2_0$187	= .
                                   1446 	.globl	C$main.c$102$2_0$187
                                   1447 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:102: else if (jumpFrameCount < 20)
      0004BF FAr02r00         [16] 1448 	ld	a, (#_jumpFrameCount)
      0004C2 D6 14            [ 8] 1449 	sub	a, #0x14
      0004C4 30 06            [12] 1450 	jr	NC, 00102$
                           0004C6  1451 	C$main.c$103$2_0$187	= .
                                   1452 	.globl	C$main.c$103$2_0$187
                                   1453 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:103: character->velocityY = 1;
      0004C6 E1               [12] 1454 	pop	hl
      0004C7 36 01            [12] 1455 	ld	(hl), #0x01
      0004C9 E5               [16] 1456 	push	hl
      0004CA 18 04            [12] 1457 	jr	00117$
      0004CC                       1458 00102$:
                           0004CC  1459 	C$main.c$105$2_0$187	= .
                                   1460 	.globl	C$main.c$105$2_0$187
                                   1461 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:105: character->velocityY = 2;
      0004CC E1               [12] 1462 	pop	hl
      0004CD 36 02            [12] 1463 	ld	(hl), #0x02
      0004CF E5               [16] 1464 	push	hl
      0004D0                       1465 00117$:
                           0004D0  1466 	C$main.c$109$1_0$185	= .
                                   1467 	.globl	C$main.c$109$1_0$185
                                   1468 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:109: if (character->velocityY != 0 && character->velocityY < -3)
      0004D0 D1               [12] 1469 	pop	de
      0004D1 D5               [16] 1470 	push	de
      0004D2 1A               [ 8] 1471 	ld	a, (de)
      0004D3 B7               [ 4] 1472 	or	a,a
      0004D4 28 0A            [12] 1473 	jr	Z, 00119$
      0004D6 EE 80            [ 8] 1474 	xor	a, #0x80
      0004D8 D6 7D            [ 8] 1475 	sub	a, #0x7d
      0004DA 30 04            [12] 1476 	jr	NC, 00119$
                           0004DC  1477 	C$main.c$110$1_0$185	= .
                                   1478 	.globl	C$main.c$110$1_0$185
                                   1479 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:110: character->velocityY = -3;
      0004DC E1               [12] 1480 	pop	hl
      0004DD 36 FD            [12] 1481 	ld	(hl), #0xfd
      0004DF E5               [16] 1482 	push	hl
      0004E0                       1483 00119$:
                           0004E0  1484 	C$main.c$109$1_1$185	= .
                                   1485 	.globl	C$main.c$109$1_1$185
                                   1486 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:109: if (character->velocityY != 0 && character->velocityY < -3)
      0004E0 D1               [12] 1487 	pop	de
      0004E1 D5               [16] 1488 	push	de
      0004E2 1A               [ 8] 1489 	ld	a, (de)
                           0004E3  1490 	C$main.c$111$1_0$185	= .
                                   1491 	.globl	C$main.c$111$1_0$185
                                   1492 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:111: if (character->velocityY != 0 && character->velocityY > 3)
      0004E3 4F               [ 4] 1493 	ld	c, a
      0004E4 B7               [ 4] 1494 	or	a, a
      0004E5 28 1B            [12] 1495 	jr	Z, 00122$
      0004E7 59               [ 4] 1496 	ld	e, c
      0004E8 3E 03            [ 8] 1497 	ld	a,#0x03
      0004EA 57               [ 4] 1498 	ld	d,a
      0004EB 91               [ 4] 1499 	sub	a, c
      0004EC CB 7B            [ 8] 1500 	bit	7, e
      0004EE 28 07            [12] 1501 	jr	Z, 00197$
      0004F0 CB 7A            [ 8] 1502 	bit	7, d
      0004F2 20 08            [12] 1503 	jr	NZ, 00198$
      0004F4 BF               [ 4] 1504 	cp	a, a
      0004F5 18 05            [12] 1505 	jr	00198$
      0004F7                       1506 00197$:
      0004F7 CB 7A            [ 8] 1507 	bit	7, d
      0004F9 28 01            [12] 1508 	jr	Z, 00198$
      0004FB 37               [ 4] 1509 	scf
      0004FC                       1510 00198$:
      0004FC 30 04            [12] 1511 	jr	NC, 00122$
                           0004FE  1512 	C$main.c$112$1_0$185	= .
                                   1513 	.globl	C$main.c$112$1_0$185
                                   1514 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:112: character->velocityY = 3;
      0004FE E1               [12] 1515 	pop	hl
      0004FF 36 03            [12] 1516 	ld	(hl), #0x03
      000501 E5               [16] 1517 	push	hl
      000502                       1518 00122$:
                           000502  1519 	C$main.c$115$1_1$188	= .
                                   1520 	.globl	C$main.c$115$1_1$188
                                   1521 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:115: uint8_t predictedY = character->y + character->velocityY;
      000502 F8 07            [12] 1522 	ldhl	sp,#7
      000504 2A               [ 8] 1523 	ld	a, (hl+)
      000505 5F               [ 4] 1524 	ld	e, a
      000506 56               [ 8] 1525 	ld	d, (hl)
      000507 21 07 00         [12] 1526 	ld	hl, #0x0007
      00050A 19               [ 8] 1527 	add	hl, de
      00050B 4D               [ 4] 1528 	ld	c, l
      00050C 44               [ 4] 1529 	ld	b, h
      00050D 0A               [ 8] 1530 	ld	a, (bc)
      00050E F8 06            [12] 1531 	ldhl	sp,	#6
      000510 32               [ 8] 1532 	ld	(hl-), a
      000511 2B               [ 8] 1533 	dec	hl
      000512 D1               [12] 1534 	pop	de
      000513 D5               [16] 1535 	push	de
      000514 1A               [ 8] 1536 	ld	a, (de)
      000515 22               [ 8] 1537 	ld	(hl+), a
      000516 23               [ 8] 1538 	inc	hl
      000517 3A               [ 8] 1539 	ld	a, (hl-)
      000518 2B               [ 8] 1540 	dec	hl
      000519 86               [ 8] 1541 	add	a, (hl)
      00051A 23               [ 8] 1542 	inc	hl
      00051B 23               [ 8] 1543 	inc	hl
      00051C 77               [ 8] 1544 	ld	(hl), a
      00051D 3A               [ 8] 1545 	ld	a, (hl-)
      00051E 77               [ 8] 1546 	ld	(hl), a
                           00051F  1547 	C$main.c$118$1_1$188	= .
                                   1548 	.globl	C$main.c$118$1_1$188
                                   1549 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:118: DetectCollisions(character, &character->x, &predictedY);
      00051F F8 05            [12] 1550 	ldhl	sp,	#5
      000521 4D               [ 4] 1551 	ld	c, l
      000522 44               [ 4] 1552 	ld	b, h
      000523 F8 07            [12] 1553 	ldhl	sp,#7
      000525 2A               [ 8] 1554 	ld	a, (hl+)
      000526 5F               [ 4] 1555 	ld	e, a
      000527 56               [ 8] 1556 	ld	d, (hl)
      000528 21 06 00         [12] 1557 	ld	hl, #0x0006
      00052B 19               [ 8] 1558 	add	hl, de
      00052C 5D               [ 4] 1559 	ld	e, l
      00052D 54               [ 4] 1560 	ld	d, h
      00052E D5               [16] 1561 	push	de
      00052F C5               [16] 1562 	push	bc
      000530 4B               [ 4] 1563 	ld	c, e
      000531 42               [ 4] 1564 	ld	b, d
      000532 F8 0B            [12] 1565 	ldhl	sp,	#11
      000534 2A               [ 8] 1566 	ld	a, (hl+)
      000535 5F               [ 4] 1567 	ld	e, a
      000536 56               [ 8] 1568 	ld	d, (hl)
      000537 CDr13r04         [24] 1569 	call	_DetectCollisions
      00053A D1               [12] 1570 	pop	de
                           00053B  1571 	C$main.c$121$1_1$188	= .
                                   1572 	.globl	C$main.c$121$1_1$188
                                   1573 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: MoveCharacter(character, character->x, predictedY);
      00053B 1A               [ 8] 1574 	ld	a, (de)
      00053C 4F               [ 4] 1575 	ld	c, a
      00053D F8 05            [12] 1576 	ldhl	sp,	#5
      00053F 2A               [ 8] 1577 	ld	a, (hl+)
      000540 23               [ 8] 1578 	inc	hl
      000541 F5               [16] 1579 	push	af
      000542 33               [ 8] 1580 	inc	sp
      000543 79               [ 4] 1581 	ld	a, c
      000544 5E               [ 8] 1582 	ld	e, (hl)
      000545 23               [ 8] 1583 	inc	hl
      000546 56               [ 8] 1584 	ld	d, (hl)
      000547 CDr05r02         [24] 1585 	call	_MoveCharacter
                           00054A  1586 	C$main.c$124$1_1$188	= .
                                   1587 	.globl	C$main.c$124$1_1$188
                                   1588 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:124: lastMovementY = character->movementForceY;
      00054A F8 02            [12] 1589 	ldhl	sp,#2
      00054C 2A               [ 8] 1590 	ld	a, (hl+)
      00054D 5F               [ 4] 1591 	ld	e, a
      00054E 56               [ 8] 1592 	ld	d, (hl)
      00054F 1A               [ 8] 1593 	ld	a, (de)
      000550 EAr04r00         [16] 1594 	ld	(#_lastMovementY),a
                           000553  1595 	C$main.c$125$1_1$185	= .
                                   1596 	.globl	C$main.c$125$1_1$185
                                   1597 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:125: }
      000553 E8 09            [16] 1598 	add	sp, #9
                           000555  1599 	C$main.c$125$1_1$185	= .
                                   1600 	.globl	C$main.c$125$1_1$185
                           000555  1601 	XG$MovementPhysics$0$0	= .
                                   1602 	.globl	XG$MovementPhysics$0$0
      000555 C9               [16] 1603 	ret
                           000556  1604 	G$Hit$0$0	= .
                                   1605 	.globl	G$Hit$0$0
                           000556  1606 	C$main.c$127$1_1$190	= .
                                   1607 	.globl	C$main.c$127$1_1$190
                                   1608 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:127: BOOLEAN Hit(uint8_t playerX, uint8_t playerY, uint8_t objX, uint8_t objY)
                                   1609 ;	---------------------------------
                                   1610 ; Function Hit
                                   1611 ; ---------------------------------
      000556                       1612 _Hit::
      000556 E8 FB            [16] 1613 	add	sp, #-5
      000558 4F               [ 4] 1614 	ld	c, a
      000559 F8 04            [12] 1615 	ldhl	sp,	#4
      00055B 73               [ 8] 1616 	ld	(hl), e
                           00055C  1617 	C$main.c$129$1_0$190	= .
                                   1618 	.globl	C$main.c$129$1_0$190
                                   1619 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:129: return (playerX < objX + 8 && objX < playerX + 8) && (playerY < objY + 8 && objY < playerY + 8);
      00055C F8 07            [12] 1620 	ldhl	sp,	#7
      00055E 7E               [ 8] 1621 	ld	a, (hl)
      00055F F8 00            [12] 1622 	ldhl	sp,	#0
      000561 22               [ 8] 1623 	ld	(hl+), a
      000562 36 00            [12] 1624 	ld	(hl), #0x00
      000564 D1               [12] 1625 	pop	de
      000565 D5               [16] 1626 	push	de
      000566 21 08 00         [12] 1627 	ld	hl, #0x0008
      000569 19               [ 8] 1628 	add	hl, de
      00056A E5               [16] 1629 	push	hl
      00056B 7D               [ 4] 1630 	ld	a, l
      00056C F8 04            [12] 1631 	ldhl	sp,	#4
      00056E 77               [ 8] 1632 	ld	(hl), a
      00056F E1               [12] 1633 	pop	hl
      000570 7C               [ 4] 1634 	ld	a, h
      000571 F8 03            [12] 1635 	ldhl	sp,	#3
      000573 32               [ 8] 1636 	ld	(hl-), a
      000574 06 00            [ 8] 1637 	ld	b, #0x00
      000576 79               [ 4] 1638 	ld	a, c
      000577 96               [ 8] 1639 	sub	a, (hl)
      000578 23               [ 8] 1640 	inc	hl
      000579 78               [ 4] 1641 	ld	a, b
      00057A 9E               [ 8] 1642 	sbc	a, (hl)
      00057B 78               [ 4] 1643 	ld	a, b
      00057C 57               [ 4] 1644 	ld	d, a
      00057D 5E               [ 8] 1645 	ld	e, (hl)
      00057E CB 7B            [ 8] 1646 	bit	7, e
      000580 28 07            [12] 1647 	jr	Z, 00132$
      000582 CB 7A            [ 8] 1648 	bit	7, d
      000584 20 08            [12] 1649 	jr	NZ, 00133$
      000586 BF               [ 4] 1650 	cp	a, a
      000587 18 05            [12] 1651 	jr	00133$
      000589                       1652 00132$:
      000589 CB 7A            [ 8] 1653 	bit	7, d
      00058B 28 01            [12] 1654 	jr	Z, 00133$
      00058D 37               [ 4] 1655 	scf
      00058E                       1656 00133$:
      00058E 30 79            [12] 1657 	jr	NC, 00103$
      000590 21 08 00         [12] 1658 	ld	hl, #0x0008
      000593 09               [ 8] 1659 	add	hl, bc
      000594 4D               [ 4] 1660 	ld	c, l
      000595 44               [ 4] 1661 	ld	b, h
      000596 F8 00            [12] 1662 	ldhl	sp,	#0
      000598 2A               [ 8] 1663 	ld	a, (hl+)
      000599 91               [ 4] 1664 	sub	a, c
      00059A 7E               [ 8] 1665 	ld	a, (hl)
      00059B 98               [ 4] 1666 	sbc	a, b
      00059C 56               [ 8] 1667 	ld	d, (hl)
      00059D 78               [ 4] 1668 	ld	a, b
      00059E 5F               [ 4] 1669 	ld	e, a
      00059F CB 7B            [ 8] 1670 	bit	7, e
      0005A1 28 07            [12] 1671 	jr	Z, 00134$
      0005A3 CB 7A            [ 8] 1672 	bit	7, d
      0005A5 20 08            [12] 1673 	jr	NZ, 00135$
      0005A7 BF               [ 4] 1674 	cp	a, a
      0005A8 18 05            [12] 1675 	jr	00135$
      0005AA                       1676 00134$:
      0005AA CB 7A            [ 8] 1677 	bit	7, d
      0005AC 28 01            [12] 1678 	jr	Z, 00135$
      0005AE 37               [ 4] 1679 	scf
      0005AF                       1680 00135$:
      0005AF 30 58            [12] 1681 	jr	NC, 00103$
      0005B1 F8 08            [12] 1682 	ldhl	sp,	#8
      0005B3 7E               [ 8] 1683 	ld	a, (hl)
      0005B4 F8 00            [12] 1684 	ldhl	sp,	#0
      0005B6 22               [ 8] 1685 	ld	(hl+), a
      0005B7 36 00            [12] 1686 	ld	(hl), #0x00
      0005B9 D1               [12] 1687 	pop	de
      0005BA D5               [16] 1688 	push	de
      0005BB 21 08 00         [12] 1689 	ld	hl, #0x0008
      0005BE 19               [ 8] 1690 	add	hl, de
      0005BF E5               [16] 1691 	push	hl
      0005C0 7D               [ 4] 1692 	ld	a, l
      0005C1 F8 04            [12] 1693 	ldhl	sp,	#4
      0005C3 77               [ 8] 1694 	ld	(hl), a
      0005C4 E1               [12] 1695 	pop	hl
      0005C5 7C               [ 4] 1696 	ld	a, h
      0005C6 F8 03            [12] 1697 	ldhl	sp,	#3
      0005C8 22               [ 8] 1698 	ld	(hl+), a
      0005C9 3A               [ 8] 1699 	ld	a, (hl-)
      0005CA 2B               [ 8] 1700 	dec	hl
      0005CB 4F               [ 4] 1701 	ld	c, a
      0005CC 06 00            [ 8] 1702 	ld	b, #0x00
      0005CE 79               [ 4] 1703 	ld	a, c
      0005CF 96               [ 8] 1704 	sub	a, (hl)
      0005D0 23               [ 8] 1705 	inc	hl
      0005D1 78               [ 4] 1706 	ld	a, b
      0005D2 9E               [ 8] 1707 	sbc	a, (hl)
      0005D3 78               [ 4] 1708 	ld	a, b
      0005D4 57               [ 4] 1709 	ld	d, a
      0005D5 5E               [ 8] 1710 	ld	e, (hl)
      0005D6 CB 7B            [ 8] 1711 	bit	7, e
      0005D8 28 07            [12] 1712 	jr	Z, 00136$
      0005DA CB 7A            [ 8] 1713 	bit	7, d
      0005DC 20 08            [12] 1714 	jr	NZ, 00137$
      0005DE BF               [ 4] 1715 	cp	a, a
      0005DF 18 05            [12] 1716 	jr	00137$
      0005E1                       1717 00136$:
      0005E1 CB 7A            [ 8] 1718 	bit	7, d
      0005E3 28 01            [12] 1719 	jr	Z, 00137$
      0005E5 37               [ 4] 1720 	scf
      0005E6                       1721 00137$:
      0005E6 30 21            [12] 1722 	jr	NC, 00103$
      0005E8 21 08 00         [12] 1723 	ld	hl, #0x0008
      0005EB 09               [ 8] 1724 	add	hl, bc
      0005EC 4D               [ 4] 1725 	ld	c, l
      0005ED 44               [ 4] 1726 	ld	b, h
      0005EE F8 00            [12] 1727 	ldhl	sp,	#0
      0005F0 2A               [ 8] 1728 	ld	a, (hl+)
      0005F1 91               [ 4] 1729 	sub	a, c
      0005F2 7E               [ 8] 1730 	ld	a, (hl)
      0005F3 98               [ 4] 1731 	sbc	a, b
      0005F4 56               [ 8] 1732 	ld	d, (hl)
      0005F5 78               [ 4] 1733 	ld	a, b
      0005F6 5F               [ 4] 1734 	ld	e, a
      0005F7 CB 7B            [ 8] 1735 	bit	7, e
      0005F9 28 07            [12] 1736 	jr	Z, 00138$
      0005FB CB 7A            [ 8] 1737 	bit	7, d
      0005FD 20 08            [12] 1738 	jr	NZ, 00139$
      0005FF BF               [ 4] 1739 	cp	a, a
      000600 18 05            [12] 1740 	jr	00139$
      000602                       1741 00138$:
      000602 CB 7A            [ 8] 1742 	bit	7, d
      000604 28 01            [12] 1743 	jr	Z, 00139$
      000606 37               [ 4] 1744 	scf
      000607                       1745 00139$:
      000607 38 03            [12] 1746 	jr	C, 00104$
      000609                       1747 00103$:
      000609 AF               [ 4] 1748 	xor	a, a
      00060A 18 02            [12] 1749 	jr	00105$
      00060C                       1750 00104$:
      00060C 3E 01            [ 8] 1751 	ld	a, #0x01
      00060E                       1752 00105$:
                           00060E  1753 	C$main.c$130$1_0$190	= .
                                   1754 	.globl	C$main.c$130$1_0$190
                                   1755 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:130: }
      00060E E8 05            [16] 1756 	add	sp, #5
      000610 E1               [12] 1757 	pop	hl
      000611 C1               [12] 1758 	pop	bc
      000612 E9               [ 4] 1759 	jp	(hl)
                           000613  1760 	G$SetupBlock$0$0	= .
                                   1761 	.globl	G$SetupBlock$0$0
                           000613  1762 	C$main.c$132$1_0$192	= .
                                   1763 	.globl	C$main.c$132$1_0$192
                                   1764 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:132: void SetupBlock(Block* block)
                                   1765 ;	---------------------------------
                                   1766 ; Function SetupBlock
                                   1767 ; ---------------------------------
      000613                       1768 _SetupBlock::
      000613 E8 F2            [16] 1769 	add	sp, #-14
      000615 F8 09            [12] 1770 	ldhl	sp,	#9
      000617 7B               [ 4] 1771 	ld	a, e
      000618 22               [ 8] 1772 	ld	(hl+), a
      000619 72               [ 8] 1773 	ld	(hl), d
                           00061A  1774 	C$main.c$135$1_0$192	= .
                                   1775 	.globl	C$main.c$135$1_0$192
                                   1776 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:135: set_sprite_data(BirdSprite_tileset_size + 1, 4, blocksprite_tileset);
      00061A 11r00r00         [12] 1777 	ld	de, #_blocksprite_tileset
      00061D D5               [16] 1778 	push	de
      00061E 21 27 04         [12] 1779 	ld	hl, #0x427
      000621 E5               [16] 1780 	push	hl
      000622 CDr00r00         [24] 1781 	call	_set_sprite_data
      000625 E8 04            [16] 1782 	add	sp, #4
                           000627  1783 	C$main.c$137$6_0$197	= .
                                   1784 	.globl	C$main.c$137$6_0$197
                                   1785 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:137: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000627 F8 09            [12] 1786 	ldhl	sp,#9
      000629 2A               [ 8] 1787 	ld	a, (hl+)
      00062A 5F               [ 4] 1788 	ld	e, a
      00062B 56               [ 8] 1789 	ld	d, (hl)
      00062C 21 02 00         [12] 1790 	ld	hl, #0x0002
      00062F 19               [ 8] 1791 	add	hl, de
      000630 33               [ 8] 1792 	inc	sp
      000631 33               [ 8] 1793 	inc	sp
      000632 E5               [16] 1794 	push	hl
      000633 F8 09            [12] 1795 	ldhl	sp,#9
      000635 2A               [ 8] 1796 	ld	a, (hl+)
      000636 5F               [ 4] 1797 	ld	e, a
      000637 56               [ 8] 1798 	ld	d, (hl)
      000638 21 03 00         [12] 1799 	ld	hl, #0x0003
      00063B 19               [ 8] 1800 	add	hl, de
      00063C E5               [16] 1801 	push	hl
      00063D 7D               [ 4] 1802 	ld	a, l
      00063E F8 04            [12] 1803 	ldhl	sp,	#4
      000640 77               [ 8] 1804 	ld	(hl), a
      000641 E1               [12] 1805 	pop	hl
      000642 7C               [ 4] 1806 	ld	a, h
      000643 F8 03            [12] 1807 	ldhl	sp,	#3
      000645 77               [ 8] 1808 	ld	(hl), a
      000646 F8 0B            [12] 1809 	ldhl	sp,	#11
      000648 36 00            [12] 1810 	ld	(hl), #0x00
      00064A                       1811 00116$:
      00064A F8 0B            [12] 1812 	ldhl	sp,	#11
      00064C 7E               [ 8] 1813 	ld	a, (hl)
      00064D D6 06            [ 8] 1814 	sub	a, #0x06
      00064F D2rE1r07         [16] 1815 	jp	NC, 00118$
                           000652  1816 	C$main.c$139$3_0$194	= .
                                   1817 	.globl	C$main.c$139$3_0$194
                                   1818 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:139: uint8_t baseSpriteId = i * blockOffset;
      000652 7E               [ 8] 1819 	ld	a, (hl)
      000653 87               [ 4] 1820 	add	a, a
      000654 87               [ 4] 1821 	add	a, a
      000655 F8 04            [12] 1822 	ldhl	sp,	#4
      000657 77               [ 8] 1823 	ld	(hl), a
                                   1824 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:140: set_sprite_tile(baseSpriteId + 4, 39); 
      000658 2A               [ 8] 1825 	ld	a, (hl+)
      000659 23               [ 8] 1826 	inc	hl
      00065A 77               [ 8] 1827 	ld	(hl), a
      00065B 7E               [ 8] 1828 	ld	a, (hl)
      00065C C6 04            [ 8] 1829 	add	a, #0x04
      00065E F8 0D            [12] 1830 	ldhl	sp,	#13
      000660 77               [ 8] 1831 	ld	(hl), a
                                   1832 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000661 3A               [ 8] 1833 	ld	a, (hl-)
      000662 22               [ 8] 1834 	ld	(hl+), a
      000663 36 00            [12] 1835 	ld	(hl), #0x00
      000665 3E 02            [ 8] 1836 	ld	a, #0x02
      000667                       1837 00165$:
      000667 F8 0C            [12] 1838 	ldhl	sp,	#12
      000669 CB 26            [16] 1839 	sla	(hl)
      00066B 23               [ 8] 1840 	inc	hl
      00066C CB 16            [16] 1841 	rl	(hl)
      00066E 3D               [ 4] 1842 	dec	a
      00066F 20 F6            [12] 1843 	jr	NZ, 00165$
      000671 2B               [ 8] 1844 	dec	hl
      000672 2A               [ 8] 1845 	ld	a, (hl+)
      000673 5F               [ 4] 1846 	ld	e, a
      000674 56               [ 8] 1847 	ld	d, (hl)
      000675 21r00r00         [12] 1848 	ld	hl, #_shadow_OAM
      000678 19               [ 8] 1849 	add	hl, de
      000679 E5               [16] 1850 	push	hl
      00067A 7D               [ 4] 1851 	ld	a, l
      00067B F8 09            [12] 1852 	ldhl	sp,	#9
      00067D 77               [ 8] 1853 	ld	(hl), a
      00067E E1               [12] 1854 	pop	hl
      00067F 7C               [ 4] 1855 	ld	a, h
      000680 F8 08            [12] 1856 	ldhl	sp,	#8
      000682 32               [ 8] 1857 	ld	(hl-), a
      000683 2A               [ 8] 1858 	ld	a, (hl+)
      000684 5F               [ 4] 1859 	ld	e, a
      000685 56               [ 8] 1860 	ld	d, (hl)
      000686 21 02 00         [12] 1861 	ld	hl, #0x0002
      000689 19               [ 8] 1862 	add	hl, de
      00068A E5               [16] 1863 	push	hl
      00068B 7D               [ 4] 1864 	ld	a, l
      00068C F8 0E            [12] 1865 	ldhl	sp,	#14
      00068E 77               [ 8] 1866 	ld	(hl), a
      00068F E1               [12] 1867 	pop	hl
      000690 7C               [ 4] 1868 	ld	a, h
      000691 F8 0D            [12] 1869 	ldhl	sp,	#13
      000693 32               [ 8] 1870 	ld	(hl-), a
      000694 2A               [ 8] 1871 	ld	a,	(hl+)
      000695 66               [ 8] 1872 	ld	h, (hl)
      000696 6F               [ 4] 1873 	ld	l, a
      000697 36 27            [12] 1874 	ld	(hl), #0x27
                                   1875 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:141: set_sprite_tile(baseSpriteId + 5, 40); 
      000699 F8 06            [12] 1876 	ldhl	sp,	#6
      00069B 7E               [ 8] 1877 	ld	a, (hl)
      00069C C6 05            [ 8] 1878 	add	a, #0x05
      00069E F8 0D            [12] 1879 	ldhl	sp,	#13
      0006A0 77               [ 8] 1880 	ld	(hl), a
                                   1881 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0006A1 3A               [ 8] 1882 	ld	a, (hl-)
      0006A2 22               [ 8] 1883 	ld	(hl+), a
      0006A3 36 00            [12] 1884 	ld	(hl), #0x00
      0006A5 3E 02            [ 8] 1885 	ld	a, #0x02
      0006A7                       1886 00166$:
      0006A7 F8 0C            [12] 1887 	ldhl	sp,	#12
      0006A9 CB 26            [16] 1888 	sla	(hl)
      0006AB 23               [ 8] 1889 	inc	hl
      0006AC CB 16            [16] 1890 	rl	(hl)
      0006AE 3D               [ 4] 1891 	dec	a
      0006AF 20 F6            [12] 1892 	jr	NZ, 00166$
      0006B1 2B               [ 8] 1893 	dec	hl
      0006B2 2A               [ 8] 1894 	ld	a, (hl+)
      0006B3 5F               [ 4] 1895 	ld	e, a
      0006B4 56               [ 8] 1896 	ld	d, (hl)
      0006B5 21r00r00         [12] 1897 	ld	hl, #_shadow_OAM
      0006B8 19               [ 8] 1898 	add	hl, de
      0006B9 E5               [16] 1899 	push	hl
      0006BA 7D               [ 4] 1900 	ld	a, l
      0006BB F8 09            [12] 1901 	ldhl	sp,	#9
      0006BD 77               [ 8] 1902 	ld	(hl), a
      0006BE E1               [12] 1903 	pop	hl
      0006BF 7C               [ 4] 1904 	ld	a, h
      0006C0 F8 08            [12] 1905 	ldhl	sp,	#8
      0006C2 32               [ 8] 1906 	ld	(hl-), a
      0006C3 2A               [ 8] 1907 	ld	a, (hl+)
      0006C4 5F               [ 4] 1908 	ld	e, a
      0006C5 56               [ 8] 1909 	ld	d, (hl)
      0006C6 21 02 00         [12] 1910 	ld	hl, #0x0002
      0006C9 19               [ 8] 1911 	add	hl, de
      0006CA E5               [16] 1912 	push	hl
      0006CB 7D               [ 4] 1913 	ld	a, l
      0006CC F8 0E            [12] 1914 	ldhl	sp,	#14
      0006CE 77               [ 8] 1915 	ld	(hl), a
      0006CF E1               [12] 1916 	pop	hl
      0006D0 7C               [ 4] 1917 	ld	a, h
      0006D1 F8 0D            [12] 1918 	ldhl	sp,	#13
      0006D3 32               [ 8] 1919 	ld	(hl-), a
      0006D4 2A               [ 8] 1920 	ld	a,	(hl+)
      0006D5 66               [ 8] 1921 	ld	h, (hl)
      0006D6 6F               [ 4] 1922 	ld	l, a
      0006D7 36 28            [12] 1923 	ld	(hl), #0x28
                                   1924 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:142: set_sprite_tile(baseSpriteId + 6, 41); 
      0006D9 F8 06            [12] 1925 	ldhl	sp,	#6
      0006DB 7E               [ 8] 1926 	ld	a, (hl)
      0006DC C6 06            [ 8] 1927 	add	a, #0x06
      0006DE F8 0D            [12] 1928 	ldhl	sp,	#13
      0006E0 77               [ 8] 1929 	ld	(hl), a
                                   1930 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0006E1 3A               [ 8] 1931 	ld	a, (hl-)
      0006E2 22               [ 8] 1932 	ld	(hl+), a
      0006E3 36 00            [12] 1933 	ld	(hl), #0x00
      0006E5 3E 02            [ 8] 1934 	ld	a, #0x02
      0006E7                       1935 00167$:
      0006E7 F8 0C            [12] 1936 	ldhl	sp,	#12
      0006E9 CB 26            [16] 1937 	sla	(hl)
      0006EB 23               [ 8] 1938 	inc	hl
      0006EC CB 16            [16] 1939 	rl	(hl)
      0006EE 3D               [ 4] 1940 	dec	a
      0006EF 20 F6            [12] 1941 	jr	NZ, 00167$
      0006F1 2B               [ 8] 1942 	dec	hl
      0006F2 2A               [ 8] 1943 	ld	a, (hl+)
      0006F3 5F               [ 4] 1944 	ld	e, a
      0006F4 56               [ 8] 1945 	ld	d, (hl)
      0006F5 21r00r00         [12] 1946 	ld	hl, #_shadow_OAM
      0006F8 19               [ 8] 1947 	add	hl, de
      0006F9 E5               [16] 1948 	push	hl
      0006FA 7D               [ 4] 1949 	ld	a, l
      0006FB F8 09            [12] 1950 	ldhl	sp,	#9
      0006FD 77               [ 8] 1951 	ld	(hl), a
      0006FE E1               [12] 1952 	pop	hl
      0006FF 7C               [ 4] 1953 	ld	a, h
      000700 F8 08            [12] 1954 	ldhl	sp,	#8
      000702 32               [ 8] 1955 	ld	(hl-), a
      000703 2A               [ 8] 1956 	ld	a, (hl+)
      000704 5F               [ 4] 1957 	ld	e, a
      000705 56               [ 8] 1958 	ld	d, (hl)
      000706 21 02 00         [12] 1959 	ld	hl, #0x0002
      000709 19               [ 8] 1960 	add	hl, de
      00070A E5               [16] 1961 	push	hl
      00070B 7D               [ 4] 1962 	ld	a, l
      00070C F8 0E            [12] 1963 	ldhl	sp,	#14
      00070E 77               [ 8] 1964 	ld	(hl), a
      00070F E1               [12] 1965 	pop	hl
      000710 7C               [ 4] 1966 	ld	a, h
      000711 F8 0D            [12] 1967 	ldhl	sp,	#13
      000713 32               [ 8] 1968 	ld	(hl-), a
      000714 2A               [ 8] 1969 	ld	a,	(hl+)
      000715 66               [ 8] 1970 	ld	h, (hl)
      000716 6F               [ 4] 1971 	ld	l, a
      000717 36 29            [12] 1972 	ld	(hl), #0x29
                                   1973 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:143: set_sprite_tile(baseSpriteId + 7, 42);
      000719 F8 06            [12] 1974 	ldhl	sp,	#6
      00071B 7E               [ 8] 1975 	ld	a, (hl)
      00071C C6 07            [ 8] 1976 	add	a, #0x07
      00071E 4F               [ 4] 1977 	ld	c, a
                                   1978 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00071F F8 0C            [12] 1979 	ldhl	sp,	#12
      000721 79               [ 4] 1980 	ld	a, c
      000722 22               [ 8] 1981 	ld	(hl+), a
      000723 36 00            [12] 1982 	ld	(hl), #0x00
      000725 3E 02            [ 8] 1983 	ld	a, #0x02
      000727                       1984 00168$:
      000727 F8 0C            [12] 1985 	ldhl	sp,	#12
      000729 CB 26            [16] 1986 	sla	(hl)
      00072B 23               [ 8] 1987 	inc	hl
      00072C CB 16            [16] 1988 	rl	(hl)
      00072E 3D               [ 4] 1989 	dec	a
      00072F 20 F6            [12] 1990 	jr	NZ, 00168$
      000731 2B               [ 8] 1991 	dec	hl
      000732 2A               [ 8] 1992 	ld	a, (hl+)
      000733 5F               [ 4] 1993 	ld	e, a
      000734 56               [ 8] 1994 	ld	d, (hl)
      000735 21r00r00         [12] 1995 	ld	hl, #_shadow_OAM
      000738 19               [ 8] 1996 	add	hl, de
      000739 E5               [16] 1997 	push	hl
      00073A 7D               [ 4] 1998 	ld	a, l
      00073B F8 09            [12] 1999 	ldhl	sp,	#9
      00073D 77               [ 8] 2000 	ld	(hl), a
      00073E E1               [12] 2001 	pop	hl
      00073F 7C               [ 4] 2002 	ld	a, h
      000740 F8 08            [12] 2003 	ldhl	sp,	#8
      000742 32               [ 8] 2004 	ld	(hl-), a
      000743 2A               [ 8] 2005 	ld	a, (hl+)
      000744 5F               [ 4] 2006 	ld	e, a
      000745 56               [ 8] 2007 	ld	d, (hl)
      000746 21 02 00         [12] 2008 	ld	hl, #0x0002
      000749 19               [ 8] 2009 	add	hl, de
      00074A E5               [16] 2010 	push	hl
      00074B 7D               [ 4] 2011 	ld	a, l
      00074C F8 0E            [12] 2012 	ldhl	sp,	#14
      00074E 77               [ 8] 2013 	ld	(hl), a
      00074F E1               [12] 2014 	pop	hl
      000750 7C               [ 4] 2015 	ld	a, h
      000751 F8 0D            [12] 2016 	ldhl	sp,	#13
      000753 32               [ 8] 2017 	ld	(hl-), a
      000754 2A               [ 8] 2018 	ld	a,	(hl+)
      000755 66               [ 8] 2019 	ld	h, (hl)
      000756 6F               [ 4] 2020 	ld	l, a
      000757 36 2A            [12] 2021 	ld	(hl), #0x2a
                           000759  2022 	C$main.c$145$2_0$192	= .
                                   2023 	.globl	C$main.c$145$2_0$192
                                   2024 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:145: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      000759 F8 0C            [12] 2025 	ldhl	sp,	#12
      00075B 36 00            [12] 2026 	ld	(hl), #0x00
      00075D                       2027 00113$:
      00075D F8 02            [12] 2028 	ldhl	sp,#2
      00075F 2A               [ 8] 2029 	ld	a, (hl+)
      000760 5F               [ 4] 2030 	ld	e, a
      000761 56               [ 8] 2031 	ld	d, (hl)
      000762 1A               [ 8] 2032 	ld	a, (de)
      000763 47               [ 4] 2033 	ld	b, a
      000764 F8 0C            [12] 2034 	ldhl	sp,	#12
      000766 7E               [ 8] 2035 	ld	a, (hl)
      000767 90               [ 4] 2036 	sub	a, b
      000768 28 71            [12] 2037 	jr	Z, 00117$
                           00076A  2038 	C$main.c$147$7_0$198	= .
                                   2039 	.globl	C$main.c$147$7_0$198
                                   2040 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:147: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      00076A F8 04            [12] 2041 	ldhl	sp,	#4
      00076C 7E               [ 8] 2042 	ld	a, (hl)
      00076D F8 0C            [12] 2043 	ldhl	sp,	#12
      00076F 86               [ 8] 2044 	add	a, (hl)
      000770 F8 05            [12] 2045 	ldhl	sp,	#5
      000772 77               [ 8] 2046 	ld	(hl), a
      000773 F8 0D            [12] 2047 	ldhl	sp,	#13
      000775 36 00            [12] 2048 	ld	(hl), #0x00
      000777                       2049 00110$:
      000777 D1               [12] 2050 	pop	de
      000778 D5               [16] 2051 	push	de
      000779 1A               [ 8] 2052 	ld	a, (de)
      00077A F8 08            [12] 2053 	ldhl	sp,	#8
      00077C 77               [ 8] 2054 	ld	(hl), a
      00077D F8 0D            [12] 2055 	ldhl	sp,	#13
      00077F 7E               [ 8] 2056 	ld	a, (hl)
      000780 F8 08            [12] 2057 	ldhl	sp,	#8
      000782 96               [ 8] 2058 	sub	a, (hl)
      000783 28 51            [12] 2059 	jr	Z, 00114$
                           000785  2060 	C$main.c$149$2_0$192	= .
                                   2061 	.globl	C$main.c$149$2_0$192
                                   2062 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:149: uint8_t index = baseSpriteId + iy + (ix * block->blockWidth);
      000785 F8 08            [12] 2063 	ldhl	sp,	#8
      000787 5E               [ 8] 2064 	ld	e, (hl)
      000788 F8 0D            [12] 2065 	ldhl	sp,	#13
      00078A 7E               [ 8] 2066 	ld	a, (hl)
      00078B CDr00r00         [24] 2067 	call	__muluchar
      00078E F8 08            [12] 2068 	ldhl	sp,#8
      000790 71               [ 8] 2069 	ld	(hl), c
      000791 7E               [ 8] 2070 	ld	a, (hl)
      000792 F8 05            [12] 2071 	ldhl	sp,	#5
      000794 86               [ 8] 2072 	add	a, (hl)
      000795 23               [ 8] 2073 	inc	hl
      000796 77               [ 8] 2074 	ld	(hl), a
                                   2075 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:150: move_sprite(index, block[i].x + (ix * 8), block[i].y + (iy * 8));       
      000797 F8 0B            [12] 2076 	ldhl	sp,	#11
      000799 7E               [ 8] 2077 	ld	a, (hl)
      00079A F8 07            [12] 2078 	ldhl	sp,	#7
      00079C 22               [ 8] 2079 	ld	(hl+), a
      00079D AF               [ 4] 2080 	xor	a, a
      00079E 32               [ 8] 2081 	ld	(hl-), a
      00079F 2A               [ 8] 2082 	ld	a, (hl+)
      0007A0 56               [ 8] 2083 	ld	d, (hl)
      0007A1 23               [ 8] 2084 	inc	hl
      0007A2 87               [ 4] 2085 	add	a, a
      0007A3 CB 12            [ 8] 2086 	rl	d
      0007A5 87               [ 4] 2087 	add	a, a
      0007A6 CB 12            [ 8] 2088 	rl	d
      0007A8 5F               [ 4] 2089 	ld	e, a
      0007A9 2A               [ 8] 2090 	ld	a,	(hl+)
      0007AA 66               [ 8] 2091 	ld	h, (hl)
      0007AB 6F               [ 4] 2092 	ld	l, a
      0007AC 19               [ 8] 2093 	add	hl, de
                                   2094 ;	spillPairReg hl
                                   2095 ;	spillPairReg hl
      0007AD 5D               [ 4] 2096 	ld	e,l
      0007AE 54               [ 4] 2097 	ld	d,h
                                   2098 ;	spillPairReg hl
                                   2099 ;	spillPairReg hl
      0007AF 23               [ 8] 2100 	inc	hl
      0007B0 4E               [ 8] 2101 	ld	c, (hl)
      0007B1 F8 0C            [12] 2102 	ldhl	sp,	#12
      0007B3 2A               [ 8] 2103 	ld	a, (hl+)
      0007B4 87               [ 4] 2104 	add	a, a
      0007B5 87               [ 4] 2105 	add	a, a
      0007B6 87               [ 4] 2106 	add	a, a
      0007B7 81               [ 4] 2107 	add	a, c
      0007B8 47               [ 4] 2108 	ld	b, a
      0007B9 1A               [ 8] 2109 	ld	a, (de)
      0007BA 4F               [ 4] 2110 	ld	c, a
      0007BB 7E               [ 8] 2111 	ld	a, (hl)
      0007BC 87               [ 4] 2112 	add	a, a
      0007BD 87               [ 4] 2113 	add	a, a
      0007BE 87               [ 4] 2114 	add	a, a
      0007BF 81               [ 4] 2115 	add	a, c
      0007C0 4F               [ 4] 2116 	ld	c, a
                                   2117 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0007C1 F8 06            [12] 2118 	ldhl	sp,	#6
      0007C3 5E               [ 8] 2119 	ld	e, (hl)
      0007C4 16 00            [ 8] 2120 	ld	d, #0x00
      0007C6 6B               [ 4] 2121 	ld	l, e
      0007C7 62               [ 4] 2122 	ld	h, d
      0007C8 29               [ 8] 2123 	add	hl, hl
      0007C9 29               [ 8] 2124 	add	hl, hl
      0007CA 11r00r00         [12] 2125 	ld	de, #_shadow_OAM
      0007CD 19               [ 8] 2126 	add	hl, de
                                   2127 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      0007CE 78               [ 4] 2128 	ld	a, b
      0007CF 22               [ 8] 2129 	ld	(hl+), a
      0007D0 71               [ 8] 2130 	ld	(hl), c
                           0007D1  2131 	C$main.c$147$6_0$197	= .
                                   2132 	.globl	C$main.c$147$6_0$197
                                   2133 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:147: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      0007D1 F8 0D            [12] 2134 	ldhl	sp,	#13
      0007D3 34               [12] 2135 	inc	(hl)
      0007D4 18 A1            [12] 2136 	jr	00110$
      0007D6                       2137 00114$:
                           0007D6  2138 	C$main.c$145$4_0$195	= .
                                   2139 	.globl	C$main.c$145$4_0$195
                                   2140 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:145: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      0007D6 F8 0C            [12] 2141 	ldhl	sp,	#12
      0007D8 34               [12] 2142 	inc	(hl)
      0007D9 18 82            [12] 2143 	jr	00113$
      0007DB                       2144 00117$:
                           0007DB  2145 	C$main.c$137$2_0$193	= .
                                   2146 	.globl	C$main.c$137$2_0$193
                                   2147 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:137: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0007DB F8 0B            [12] 2148 	ldhl	sp,	#11
      0007DD 34               [12] 2149 	inc	(hl)
      0007DE C3r4Ar06         [16] 2150 	jp	00116$
      0007E1                       2151 00118$:
                           0007E1  2152 	C$main.c$154$2_0$192	= .
                                   2153 	.globl	C$main.c$154$2_0$192
                                   2154 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:154: }
      0007E1 E8 0E            [16] 2155 	add	sp, #14
                           0007E3  2156 	C$main.c$154$2_0$192	= .
                                   2157 	.globl	C$main.c$154$2_0$192
                           0007E3  2158 	XG$SetupBlock$0$0	= .
                                   2159 	.globl	XG$SetupBlock$0$0
      0007E3 C9               [16] 2160 	ret
                           0007E4  2161 	G$ScrollBlock$0$0	= .
                                   2162 	.globl	G$ScrollBlock$0$0
                           0007E4  2163 	C$main.c$156$2_0$215	= .
                                   2164 	.globl	C$main.c$156$2_0$215
                                   2165 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:156: void ScrollBlock()
                                   2166 ;	---------------------------------
                                   2167 ; Function ScrollBlock
                                   2168 ; ---------------------------------
      0007E4                       2169 _ScrollBlock::
      0007E4 E8 F9            [16] 2170 	add	sp, #-7
                           0007E6  2171 	C$main.c$158$3_0$216	= .
                                   2172 	.globl	C$main.c$158$3_0$216
                                   2173 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:158: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0007E6 F8 04            [12] 2174 	ldhl	sp,	#4
      0007E8 36 00            [12] 2175 	ld	(hl), #0x00
      0007EA                       2176 00114$:
      0007EA F8 04            [12] 2177 	ldhl	sp,	#4
      0007EC 7E               [ 8] 2178 	ld	a, (hl)
      0007ED D6 06            [ 8] 2179 	sub	a, #0x06
      0007EF D2rBEr08         [16] 2180 	jp	NC, 00116$
                           0007F2  2181 	C$main.c$160$3_0$216	= .
                                   2182 	.globl	C$main.c$160$3_0$216
                                   2183 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:160: uint8_t baseSpriteId = i * BLOCK_SPRITE_OFFSET;
      0007F2 7E               [ 8] 2184 	ld	a, (hl)
      0007F3 87               [ 4] 2185 	add	a, a
      0007F4 87               [ 4] 2186 	add	a, a
      0007F5 F8 00            [12] 2187 	ldhl	sp,	#0
      0007F7 77               [ 8] 2188 	ld	(hl), a
                           0007F8  2189 	C$main.c$161$3_0$216	= .
                                   2190 	.globl	C$main.c$161$3_0$216
                                   2191 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:161: block[i].x -= 1;
      0007F8 F8 04            [12] 2192 	ldhl	sp,	#4
      0007FA 2A               [ 8] 2193 	ld	a, (hl+)
      0007FB 22               [ 8] 2194 	ld	(hl+), a
      0007FC AF               [ 4] 2195 	xor	a, a
      0007FD 32               [ 8] 2196 	ld	(hl-), a
      0007FE 7E               [ 8] 2197 	ld	a, (hl)
      0007FF F8 02            [12] 2198 	ldhl	sp,	#2
      000801 22               [ 8] 2199 	ld	(hl+), a
      000802 36 00            [12] 2200 	ld	(hl), #0x00
      000804 3E 02            [ 8] 2201 	ld	a, #0x02
      000806                       2202 00170$:
      000806 F8 02            [12] 2203 	ldhl	sp,	#2
      000808 CB 26            [16] 2204 	sla	(hl)
      00080A 23               [ 8] 2205 	inc	hl
      00080B CB 16            [16] 2206 	rl	(hl)
      00080D 3D               [ 4] 2207 	dec	a
      00080E 20 F6            [12] 2208 	jr	NZ, 00170$
      000810 2B               [ 8] 2209 	dec	hl
      000811 2A               [ 8] 2210 	ld	a, (hl+)
      000812 5F               [ 4] 2211 	ld	e, a
      000813 56               [ 8] 2212 	ld	d, (hl)
      000814 21r13r00         [12] 2213 	ld	hl, #_block
      000817 19               [ 8] 2214 	add	hl, de
      000818 E5               [16] 2215 	push	hl
      000819 7D               [ 4] 2216 	ld	a, l
      00081A F8 07            [12] 2217 	ldhl	sp,	#7
      00081C 77               [ 8] 2218 	ld	(hl), a
      00081D E1               [12] 2219 	pop	hl
      00081E 7C               [ 4] 2220 	ld	a, h
      00081F F8 06            [12] 2221 	ldhl	sp,	#6
      000821 32               [ 8] 2222 	ld	(hl-), a
      000822 2A               [ 8] 2223 	ld	a, (hl+)
      000823 5F               [ 4] 2224 	ld	e, a
      000824 56               [ 8] 2225 	ld	d, (hl)
      000825 1A               [ 8] 2226 	ld	a, (de)
      000826 4F               [ 4] 2227 	ld	c, a
      000827 0D               [ 4] 2228 	dec	c
      000828 3A               [ 8] 2229 	ld	a, (hl-)
      000829 6E               [ 8] 2230 	ld	l, (hl)
      00082A 67               [ 4] 2231 	ld	h, a
      00082B 71               [ 8] 2232 	ld	(hl), c
                           00082C  2233 	C$main.c$162$2_0$215	= .
                                   2234 	.globl	C$main.c$162$2_0$215
                                   2235 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:162: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      00082C F8 05            [12] 2236 	ldhl	sp,	#5
      00082E 36 00            [12] 2237 	ld	(hl), #0x00
      000830                       2238 00111$:
      000830 21r16r00         [12] 2239 	ld	hl, #(_block + 3)
      000833 46               [ 8] 2240 	ld	b, (hl)
      000834 F8 05            [12] 2241 	ldhl	sp,	#5
      000836 7E               [ 8] 2242 	ld	a, (hl)
      000837 90               [ 4] 2243 	sub	a, b
      000838 CArB8r08         [16] 2244 	jp	Z,00115$
                           00083B  2245 	C$main.c$164$7_0$220	= .
                                   2246 	.globl	C$main.c$164$7_0$220
                                   2247 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:164: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      00083B F8 00            [12] 2248 	ldhl	sp,	#0
      00083D 7E               [ 8] 2249 	ld	a, (hl)
      00083E F8 05            [12] 2250 	ldhl	sp,	#5
      000840 86               [ 8] 2251 	add	a, (hl)
      000841 F8 01            [12] 2252 	ldhl	sp,	#1
      000843 77               [ 8] 2253 	ld	(hl), a
      000844 F8 06            [12] 2254 	ldhl	sp,	#6
      000846 36 00            [12] 2255 	ld	(hl), #0x00
      000848                       2256 00108$:
      000848 FAr15r00         [16] 2257 	ld	a, (#(_block + 2) + 0)
      00084B F8 03            [12] 2258 	ldhl	sp,	#3
      00084D 77               [ 8] 2259 	ld	(hl), a
      00084E F8 06            [12] 2260 	ldhl	sp,	#6
      000850 7E               [ 8] 2261 	ld	a, (hl)
      000851 F8 03            [12] 2262 	ldhl	sp,	#3
      000853 96               [ 8] 2263 	sub	a, (hl)
      000854 28 5C            [12] 2264 	jr	Z, 00112$
                           000856  2265 	C$main.c$166$2_0$215	= .
                                   2266 	.globl	C$main.c$166$2_0$215
                                   2267 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:166: uint8_t index = baseSpriteId + iy + (ix * block->blockWidth);
      000856 F8 03            [12] 2268 	ldhl	sp,	#3
      000858 5E               [ 8] 2269 	ld	e, (hl)
      000859 F8 06            [12] 2270 	ldhl	sp,	#6
      00085B 7E               [ 8] 2271 	ld	a, (hl)
      00085C CDr00r00         [24] 2272 	call	__muluchar
      00085F 79               [ 4] 2273 	ld	a, c
      000860 F8 01            [12] 2274 	ldhl	sp,	#1
      000862 86               [ 8] 2275 	add	a, (hl)
                                   2276 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      000863 6F               [ 4] 2277 	ld	l, a
      000864 01r00r00         [12] 2278 	ld	bc, #_shadow_OAM+0
                                   2279 ;	spillPairReg hl
                                   2280 ;	spillPairReg hl
      000867 26 00            [ 8] 2281 	ld	h, #0x00
                                   2282 ;	spillPairReg hl
                                   2283 ;	spillPairReg hl
      000869 29               [ 8] 2284 	add	hl, hl
      00086A 29               [ 8] 2285 	add	hl, hl
      00086B 09               [ 8] 2286 	add	hl, bc
                                   2287 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1894: itm->y+=y, itm->x+=x;
      00086C 7E               [ 8] 2288 	ld	a, (hl)
      00086D 22               [ 8] 2289 	ld	(hl+), a
      00086E 35               [12] 2290 	dec	(hl)
      00086F 7E               [ 8] 2291 	ld	a, (hl)
                           000870  2292 	C$main.c$168$7_0$220	= .
                                   2293 	.globl	C$main.c$168$7_0$220
                                   2294 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:168: if(block[i].x <= -128)
      000870 F8 04            [12] 2295 	ldhl	sp,	#4
      000872 7E               [ 8] 2296 	ld	a, (hl)
      000873 16 00            [ 8] 2297 	ld	d, #0x00
      000875 87               [ 4] 2298 	add	a, a
      000876 CB 12            [ 8] 2299 	rl	d
      000878 87               [ 4] 2300 	add	a, a
      000879 CB 12            [ 8] 2301 	rl	d
      00087B 5F               [ 4] 2302 	ld	e, a
      00087C 21r13r00         [12] 2303 	ld	hl, #_block
      00087F 19               [ 8] 2304 	add	hl, de
      000880 E5               [16] 2305 	push	hl
      000881 7D               [ 4] 2306 	ld	a, l
      000882 F8 04            [12] 2307 	ldhl	sp,	#4
      000884 77               [ 8] 2308 	ld	(hl), a
      000885 E1               [12] 2309 	pop	hl
      000886 7C               [ 4] 2310 	ld	a, h
      000887 F8 03            [12] 2311 	ldhl	sp,	#3
      000889 32               [ 8] 2312 	ld	(hl-), a
      00088A 2A               [ 8] 2313 	ld	a, (hl+)
      00088B 5F               [ 4] 2314 	ld	e, a
      00088C 56               [ 8] 2315 	ld	d, (hl)
      00088D 1A               [ 8] 2316 	ld	a, (de)
      00088E 4F               [ 4] 2317 	ld	c, a
      00088F 59               [ 4] 2318 	ld	e, c
      000890 3E 80            [ 8] 2319 	ld	a,#0x80
      000892 57               [ 4] 2320 	ld	d,a
      000893 91               [ 4] 2321 	sub	a, c
      000894 CB 7B            [ 8] 2322 	bit	7, e
      000896 28 07            [12] 2323 	jr	Z, 00174$
      000898 CB 7A            [ 8] 2324 	bit	7, d
      00089A 20 08            [12] 2325 	jr	NZ, 00175$
      00089C BF               [ 4] 2326 	cp	a, a
      00089D 18 05            [12] 2327 	jr	00175$
      00089F                       2328 00174$:
      00089F CB 7A            [ 8] 2329 	bit	7, d
      0008A1 28 01            [12] 2330 	jr	Z, 00175$
      0008A3 37               [ 4] 2331 	scf
      0008A4                       2332 00175$:
      0008A4 38 07            [12] 2333 	jr	C, 00109$
                           0008A6  2334 	C$main.c$170$8_0$221	= .
                                   2335 	.globl	C$main.c$170$8_0$221
                                   2336 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:170: block[i].x = 127;
      0008A6 F8 02            [12] 2337 	ldhl	sp,	#2
      0008A8 2A               [ 8] 2338 	ld	a,	(hl+)
      0008A9 66               [ 8] 2339 	ld	h, (hl)
      0008AA 6F               [ 4] 2340 	ld	l, a
      0008AB 36 7F            [12] 2341 	ld	(hl), #0x7f
      0008AD                       2342 00109$:
                           0008AD  2343 	C$main.c$164$6_0$219	= .
                                   2344 	.globl	C$main.c$164$6_0$219
                                   2345 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:164: for (uint8_t ix = 0; ix != block->blockWidth; ix++)
      0008AD F8 06            [12] 2346 	ldhl	sp,	#6
      0008AF 34               [12] 2347 	inc	(hl)
      0008B0 18 96            [12] 2348 	jr	00108$
      0008B2                       2349 00112$:
                           0008B2  2350 	C$main.c$162$4_0$217	= .
                                   2351 	.globl	C$main.c$162$4_0$217
                                   2352 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:162: for (uint8_t iy = 0; iy != block->blockHeight; iy++)
      0008B2 F8 05            [12] 2353 	ldhl	sp,	#5
      0008B4 34               [12] 2354 	inc	(hl)
      0008B5 C3r30r08         [16] 2355 	jp	00111$
      0008B8                       2356 00115$:
                           0008B8  2357 	C$main.c$158$2_0$215	= .
                                   2358 	.globl	C$main.c$158$2_0$215
                                   2359 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:158: for(uint8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0008B8 F8 04            [12] 2360 	ldhl	sp,	#4
      0008BA 34               [12] 2361 	inc	(hl)
      0008BB C3rEAr07         [16] 2362 	jp	00114$
      0008BE                       2363 00116$:
                           0008BE  2364 	C$main.c$175$2_0$215	= .
                                   2365 	.globl	C$main.c$175$2_0$215
                                   2366 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:175: }
      0008BE E8 07            [16] 2367 	add	sp, #7
                           0008C0  2368 	C$main.c$175$2_0$215	= .
                                   2369 	.globl	C$main.c$175$2_0$215
                           0008C0  2370 	XG$ScrollBlock$0$0	= .
                                   2371 	.globl	XG$ScrollBlock$0$0
      0008C0 C9               [16] 2372 	ret
                           0008C1  2373 	G$main$0$0	= .
                                   2374 	.globl	G$main$0$0
                           0008C1  2375 	C$main.c$177$2_0$226	= .
                                   2376 	.globl	C$main.c$177$2_0$226
                                   2377 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:177: void main(void)
                                   2378 ;	---------------------------------
                                   2379 ; Function main
                                   2380 ; ---------------------------------
      0008C1                       2381 _main::
      0008C1 E8 FC            [16] 2382 	add	sp, #-4
                           0008C3  2383 	C$main.c$180$1_0$226	= .
                                   2384 	.globl	C$main.c$180$1_0$226
                                   2385 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:180: NR52_REG = 0x80; // 1000 0000 turns on sound
      0008C3 3E 80            [ 8] 2386 	ld	a, #0x80
      0008C5 E0r00            [12] 2387 	ldh	(_NR52_REG + 0), a
                           0008C7  2388 	C$main.c$181$1_0$226	= .
                                   2389 	.globl	C$main.c$181$1_0$226
                                   2390 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:181: NR50_REG = 0x77; // sets the volume for both left and right channel to max
      0008C7 3E 77            [ 8] 2391 	ld	a, #0x77
      0008C9 E0r00            [12] 2392 	ldh	(_NR50_REG + 0), a
                           0008CB  2393 	C$main.c$182$1_0$226	= .
                                   2394 	.globl	C$main.c$182$1_0$226
                                   2395 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:182: NR51_REG = 0xFF; // select which chanels using
      0008CB 3E FF            [ 8] 2396 	ld	a, #0xff
      0008CD E0r00            [12] 2397 	ldh	(_NR51_REG + 0), a
                           0008CF  2398 	C$main.c$184$1_0$226	= .
                                   2399 	.globl	C$main.c$184$1_0$226
                                   2400 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:184: ShowTitle();
      0008CF CDrC5r03         [24] 2401 	call	_ShowTitle
                           0008D2  2402 	C$main.c$185$1_0$226	= .
                                   2403 	.globl	C$main.c$185$1_0$226
                                   2404 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:185: waitpad(J_A);	
      0008D2 3E 10            [ 8] 2405 	ld	a, #0x10
      0008D4 CDr00r00         [24] 2406 	call	_waitpad
                           0008D7  2407 	C$main.c$188$1_0$226	= .
                                   2408 	.globl	C$main.c$188$1_0$226
                                   2409 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:188: initarand(__rand_seed);
      0008D7 21r00r00         [12] 2410 	ld	hl, #___rand_seed
      0008DA 2A               [ 8] 2411 	ld	a, (hl+)
      0008DB 5F               [ 4] 2412 	ld	e, a
      0008DC 56               [ 8] 2413 	ld	d, (hl)
      0008DD D5               [16] 2414 	push	de
      0008DE CDr00r00         [24] 2415 	call	_initarand
      0008E1 E1               [12] 2416 	pop	hl
                           0008E2  2417 	C$main.c$190$1_0$226	= .
                                   2418 	.globl	C$main.c$190$1_0$226
                                   2419 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:190: SetupBackGround();
      0008E2 CDrF5r03         [24] 2420 	call	_SetupBackGround
                           0008E5  2421 	C$main.c$192$1_0$226	= .
                                   2422 	.globl	C$main.c$192$1_0$226
                                   2423 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:192: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      0008E5 11r00r00         [12] 2424 	ld	de, #_BirdSprite_tileset
      0008E8 D5               [16] 2425 	push	de
      0008E9 21 00 26         [12] 2426 	ld	hl, #0x2600
      0008EC E5               [16] 2427 	push	hl
      0008ED CDr00r00         [24] 2428 	call	_set_sprite_data
      0008F0 E8 04            [16] 2429 	add	sp, #4
                           0008F2  2430 	C$main.c$194$1_0$226	= .
                                   2431 	.globl	C$main.c$194$1_0$226
                                   2432 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:194: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      0008F2 11r00r00         [12] 2433 	ld	de, #_BirdSprite_tilemap
      0008F5 D5               [16] 2434 	push	de
      0008F6 3E 08            [ 8] 2435 	ld	a, #0x08
      0008F8 F5               [16] 2436 	push	af
      0008F9 33               [ 8] 2437 	inc	sp
      0008FA AF               [ 4] 2438 	xor	a, a
      0008FB 67               [ 4] 2439 	ld	h, a
      0008FC 2E 02            [ 8] 2440 	ld	l, #0x02
      0008FE E5               [16] 2441 	push	hl
      0008FF 3E 02            [ 8] 2442 	ld	a, #0x02
      000901 F5               [16] 2443 	push	af
      000902 33               [ 8] 2444 	inc	sp
      000903 AF               [ 4] 2445 	xor	a, a
      000904 11r00r00         [12] 2446 	ld	de, #_player
      000907 CDr77r03         [24] 2447 	call	_SetupCharacter
                           00090A  2448 	C$main.c$196$1_0$226	= .
                                   2449 	.globl	C$main.c$196$1_0$226
                                   2450 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:196: MoveCharacter(&player, 16, 56);
      00090A 3E 38            [ 8] 2451 	ld	a, #0x38
      00090C F5               [16] 2452 	push	af
      00090D 33               [ 8] 2453 	inc	sp
      00090E 3E 10            [ 8] 2454 	ld	a, #0x10
      000910 11r00r00         [12] 2455 	ld	de, #_player
      000913 CDr05r02         [24] 2456 	call	_MoveCharacter
                           000916  2457 	C$main.c$199$3_0$227	= .
                                   2458 	.globl	C$main.c$199$3_0$227
                                   2459 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:199: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000916 0E 00            [ 8] 2460 	ld	c, #0x00
      000918                       2461 00111$:
      000918 79               [ 4] 2462 	ld	a, c
      000919 EE 80            [ 8] 2463 	xor	a, #0x80
      00091B D6 86            [ 8] 2464 	sub	a, #0x86
      00091D 30 4E            [12] 2465 	jr	NC, 00101$
                           00091F  2466 	C$main.c$201$3_0$228	= .
                                   2467 	.globl	C$main.c$201$3_0$228
                                   2468 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:201: block[i].x = 60 * (i + 1);
      00091F 79               [ 4] 2469 	ld	a, c
      000920 6F               [ 4] 2470 	ld	l, a
                                   2471 ;	spillPairReg hl
                                   2472 ;	spillPairReg hl
      000921 07               [ 4] 2473 	rlca
      000922 9F               [ 4] 2474 	sbc	a, a
      000923 67               [ 4] 2475 	ld	h, a
                                   2476 ;	spillPairReg hl
                                   2477 ;	spillPairReg hl
      000924 29               [ 8] 2478 	add	hl, hl
      000925 29               [ 8] 2479 	add	hl, hl
      000926 5D               [ 4] 2480 	ld	e, l
      000927 54               [ 4] 2481 	ld	d, h
      000928 21r13r00         [12] 2482 	ld	hl, #_block
      00092B 19               [ 8] 2483 	add	hl, de
      00092C E5               [16] 2484 	push	hl
      00092D 7D               [ 4] 2485 	ld	a, l
      00092E F8 03            [12] 2486 	ldhl	sp,	#3
      000930 77               [ 8] 2487 	ld	(hl), a
      000931 E1               [12] 2488 	pop	hl
      000932 7C               [ 4] 2489 	ld	a, h
      000933 F8 02            [12] 2490 	ldhl	sp,	#2
      000935 22               [ 8] 2491 	ld	(hl+), a
      000936 79               [ 4] 2492 	ld	a, c
      000937 3C               [ 4] 2493 	inc	a
      000938 77               [ 8] 2494 	ld	(hl), a
      000939 3A               [ 8] 2495 	ld	a, (hl-)
      00093A 4F               [ 4] 2496 	ld	c, a
      00093B 87               [ 4] 2497 	add	a, a
      00093C 87               [ 4] 2498 	add	a, a
      00093D 87               [ 4] 2499 	add	a, a
      00093E 87               [ 4] 2500 	add	a, a
      00093F 91               [ 4] 2501 	sub	a, c
      000940 87               [ 4] 2502 	add	a, a
      000941 87               [ 4] 2503 	add	a, a
      000942 4F               [ 4] 2504 	ld	c, a
      000943 3A               [ 8] 2505 	ld	a, (hl-)
      000944 6E               [ 8] 2506 	ld	l, (hl)
      000945 67               [ 4] 2507 	ld	h, a
      000946 71               [ 8] 2508 	ld	(hl), c
                           000947  2509 	C$main.c$202$3_0$228	= .
                                   2510 	.globl	C$main.c$202$3_0$228
                                   2511 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:202: block[i].y = 20 * (i + 1);
      000947 F8 01            [12] 2512 	ldhl	sp,	#1
      000949 2A               [ 8] 2513 	ld	a, (hl+)
      00094A 4F               [ 4] 2514 	ld	c, a
      00094B 2A               [ 8] 2515 	ld	a, (hl+)
      00094C 47               [ 4] 2516 	ld	b, a
      00094D 03               [ 8] 2517 	inc	bc
                           00094E  2518 	C$main.c$203$3_0$228	= .
                                   2519 	.globl	C$main.c$203$3_0$228
                                   2520 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:203: block[i].blockWidth = 2;
      00094E 3A               [ 8] 2521 	ld	a, (hl-)
      00094F 2B               [ 8] 2522 	dec	hl
      000950 5F               [ 4] 2523 	ld	e, a
      000951 87               [ 4] 2524 	add	a, a
      000952 87               [ 4] 2525 	add	a, a
      000953 83               [ 4] 2526 	add	a, e
      000954 87               [ 4] 2527 	add	a, a
      000955 87               [ 4] 2528 	add	a, a
      000956 02               [ 8] 2529 	ld	(bc), a
      000957 2A               [ 8] 2530 	ld	a, (hl+)
      000958 4F               [ 4] 2531 	ld	c, a
                           000959  2532 	C$main.c$204$3_0$228	= .
                                   2533 	.globl	C$main.c$204$3_0$228
                                   2534 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:204: block[i].blockHeight = 2;
      000959 3A               [ 8] 2535 	ld	a, (hl-)
      00095A 47               [ 4] 2536 	ld	b, a
      00095B 03               [ 8] 2537 	inc	bc
      00095C 03               [ 8] 2538 	inc	bc
      00095D 3E 02            [ 8] 2539 	ld	a, #0x02
      00095F 02               [ 8] 2540 	ld	(bc), a
      000960 2A               [ 8] 2541 	ld	a, (hl+)
      000961 4F               [ 4] 2542 	ld	c, a
                           000962  2543 	C$main.c$199$2_0$227	= .
                                   2544 	.globl	C$main.c$199$2_0$227
                                   2545 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:199: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000962 2A               [ 8] 2546 	ld	a, (hl+)
      000963 47               [ 4] 2547 	ld	b, a
      000964 03               [ 8] 2548 	inc	bc
      000965 03               [ 8] 2549 	inc	bc
      000966 03               [ 8] 2550 	inc	bc
      000967 3E 02            [ 8] 2551 	ld	a, #0x02
      000969 02               [ 8] 2552 	ld	(bc), a
      00096A 4E               [ 8] 2553 	ld	c, (hl)
      00096B 18 AB            [12] 2554 	jr	00111$
      00096D                       2555 00101$:
                           00096D  2556 	C$main.c$207$1_0$226	= .
                                   2557 	.globl	C$main.c$207$1_0$226
                                   2558 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:207: SetupBlock(block);
      00096D 11r13r00         [12] 2559 	ld	de, #_block
      000970 CDr13r06         [24] 2560 	call	_SetupBlock
                           000973  2561 	C$main.c$209$1_0$226	= .
                                   2562 	.globl	C$main.c$209$1_0$226
                                   2563 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:209: SHOW_BKG;
      000973 F0r00            [12] 2564 	ldh	a, (_LCDC_REG + 0)
      000975 F6 01            [ 8] 2565 	or	a, #0x01
      000977 E0r00            [12] 2566 	ldh	(_LCDC_REG + 0), a
                           000979  2567 	C$main.c$210$1_0$226	= .
                                   2568 	.globl	C$main.c$210$1_0$226
                                   2569 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:210: SHOW_SPRITES;
      000979 F0r00            [12] 2570 	ldh	a, (_LCDC_REG + 0)
      00097B F6 02            [ 8] 2571 	or	a, #0x02
      00097D E0r00            [12] 2572 	ldh	(_LCDC_REG + 0), a
                           00097F  2573 	C$main.c$211$1_0$226	= .
                                   2574 	.globl	C$main.c$211$1_0$226
                                   2575 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:211: DISPLAY_ON;
      00097F F0r00            [12] 2576 	ldh	a, (_LCDC_REG + 0)
      000981 F6 80            [ 8] 2577 	or	a, #0x80
      000983 E0r00            [12] 2578 	ldh	(_LCDC_REG + 0), a
                           000985  2579 	C$main.c$213$2_0$229	= .
                                   2580 	.globl	C$main.c$213$2_0$229
                                   2581 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:213: BOOLEAN gameLoop = 1;
      000985 F8 02            [12] 2582 	ldhl	sp,	#2
      000987 36 01            [12] 2583 	ld	(hl), #0x01
                           000989  2584 	C$main.c$215$2_1$230	= .
                                   2585 	.globl	C$main.c$215$2_1$230
                                   2586 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:215: while(gameLoop)
      000989                       2587 00105$:
      000989 F8 02            [12] 2588 	ldhl	sp,	#2
      00098B 7E               [ 8] 2589 	ld	a, (hl)
      00098C B7               [ 4] 2590 	or	a, a
      00098D CAr10r0A         [16] 2591 	jp	Z, 00107$
                           000990  2592 	C$main.c$217$2_1$230	= .
                                   2593 	.globl	C$main.c$217$2_1$230
                                   2594 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:217: player.underfootState = player.y >= GLOUND_LEVEL ? FOOT_ON_LAND : FOOT_IN_AIR;
      000990 FAr07r00         [16] 2595 	ld	a, (#(_player + 7) + 0)
      000993 D6 82            [ 8] 2596 	sub	a, #0x82
      000995 38 09            [12] 2597 	jr	C, 00118$
      000997 2B               [ 8] 2598 	dec	hl
      000998 2B               [ 8] 2599 	dec	hl
      000999 3E 01            [ 8] 2600 	ld	a, #0x01
      00099B 22               [ 8] 2601 	ld	(hl+), a
      00099C AF               [ 4] 2602 	xor	a, a
      00099D 77               [ 8] 2603 	ld	(hl), a
      00099E 18 07            [12] 2604 	jr	00119$
      0009A0                       2605 00118$:
      0009A0 F8 00            [12] 2606 	ldhl	sp,	#0
      0009A2 3E 02            [ 8] 2607 	ld	a, #0x02
      0009A4 22               [ 8] 2608 	ld	(hl+), a
      0009A5 AF               [ 4] 2609 	xor	a, a
      0009A6 77               [ 8] 2610 	ld	(hl), a
      0009A7                       2611 00119$:
      0009A7 F8 00            [12] 2612 	ldhl	sp,	#0
      0009A9 7E               [ 8] 2613 	ld	a, (hl)
      0009AA EAr0Er00         [16] 2614 	ld	(#(_player + 14)),a
                           0009AD  2615 	C$main.c$218$2_1$230	= .
                                   2616 	.globl	C$main.c$218$2_1$230
                                   2617 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:218: MoveCharacterWithJoypad(&player);
      0009AD 11r00r00         [12] 2618 	ld	de, #_player
      0009B0 CDrD6r02         [24] 2619 	call	_MoveCharacterWithJoypad
                           0009B3  2620 	C$main.c$219$2_1$230	= .
                                   2621 	.globl	C$main.c$219$2_1$230
                                   2622 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:219: MovementPhysics(&player, 3);
      0009B3 3E 03            [ 8] 2623 	ld	a, #0x03
      0009B5 11r00r00         [12] 2624 	ld	de, #_player
      0009B8 CDr3Ar04         [24] 2625 	call	_MovementPhysics
                           0009BB  2626 	C$main.c$220$2_1$230	= .
                                   2627 	.globl	C$main.c$220$2_1$230
                                   2628 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:220: LoadNextSpriteFrame(&player);
      0009BB 11r00r00         [12] 2629 	ld	de, #_player
      0009BE CDrB3r01         [24] 2630 	call	_LoadNextSpriteFrame
                                   2631 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1392: SCX_REG+=x, SCY_REG+=y;
      0009C1 F0r00            [12] 2632 	ldh	a, (_SCX_REG + 0)
      0009C3 3C               [ 4] 2633 	inc	a
      0009C4 E0r00            [12] 2634 	ldh	(_SCX_REG + 0), a
                           0009C6  2635 	C$main.c$223$2_1$230	= .
                                   2636 	.globl	C$main.c$223$2_1$230
                                   2637 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:223: ScrollBlock();
      0009C6 CDrE4r07         [24] 2638 	call	_ScrollBlock
                           0009C9  2639 	C$main.c$225$1_1$226	= .
                                   2640 	.globl	C$main.c$225$1_1$226
                                   2641 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:225: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      0009C9 0E 00            [ 8] 2642 	ld	c, #0x00
      0009CB                       2643 00114$:
      0009CB 79               [ 4] 2644 	ld	a, c
      0009CC EE 80            [ 8] 2645 	xor	a, #0x80
      0009CE D6 86            [ 8] 2646 	sub	a, #0x86
      0009D0 30 38            [12] 2647 	jr	NC, 00104$
                           0009D2  2648 	C$main.c$227$4_1$232	= .
                                   2649 	.globl	C$main.c$227$4_1$232
                                   2650 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:227: if(Hit(player.x, player.y, block[i].x, block[i].y))
      0009D2 79               [ 4] 2651 	ld	a, c
      0009D3 6F               [ 4] 2652 	ld	l, a
                                   2653 ;	spillPairReg hl
                                   2654 ;	spillPairReg hl
      0009D4 07               [ 4] 2655 	rlca
      0009D5 9F               [ 4] 2656 	sbc	a, a
      0009D6 67               [ 4] 2657 	ld	h, a
      0009D7 29               [ 8] 2658 	add	hl, hl
      0009D8 29               [ 8] 2659 	add	hl, hl
      0009D9 11r13r00         [12] 2660 	ld	de, #_block
      0009DC 19               [ 8] 2661 	add	hl, de
      0009DD 5D               [ 4] 2662 	ld	e, l
      0009DE 54               [ 4] 2663 	ld	d, h
      0009DF 13               [ 8] 2664 	inc	de
      0009E0 1A               [ 8] 2665 	ld	a, (de)
      0009E1 46               [ 8] 2666 	ld	b, (hl)
      0009E2 21r07r00         [12] 2667 	ld	hl, #(_player + 7)
      0009E5 F5               [16] 2668 	push	af
      0009E6 7E               [ 8] 2669 	ld	a, (hl)
      0009E7 F8 05            [12] 2670 	ldhl	sp,	#5
      0009E9 77               [ 8] 2671 	ld	(hl), a
      0009EA F1               [12] 2672 	pop	af
      0009EB 21r06r00         [12] 2673 	ld	hl, #(_player + 6)
      0009EE 6E               [ 8] 2674 	ld	l, (hl)
                                   2675 ;	spillPairReg hl
      0009EF C5               [16] 2676 	push	bc
      0009F0 F5               [16] 2677 	push	af
      0009F1 33               [ 8] 2678 	inc	sp
      0009F2 C5               [16] 2679 	push	bc
      0009F3 33               [ 8] 2680 	inc	sp
      0009F4 E5               [16] 2681 	push	hl
      0009F5 F8 09            [12] 2682 	ldhl	sp,	#9
      0009F7 5E               [ 8] 2683 	ld	e, (hl)
      0009F8 E1               [12] 2684 	pop	hl
      0009F9 7D               [ 4] 2685 	ld	a, l
      0009FA CDr56r05         [24] 2686 	call	_Hit
      0009FD C1               [12] 2687 	pop	bc
      0009FE B7               [ 4] 2688 	or	a, a
      0009FF 28 06            [12] 2689 	jr	Z, 00115$
                           000A01  2690 	C$main.c$229$5_1$233	= .
                                   2691 	.globl	C$main.c$229$5_1$233
                                   2692 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:229: gameLoop= 0;
      000A01 F8 02            [12] 2693 	ldhl	sp,	#2
      000A03 36 00            [12] 2694 	ld	(hl), #0x00
                           000A05  2695 	C$main.c$230$5_1$233	= .
                                   2696 	.globl	C$main.c$230$5_1$233
                                   2697 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:230: break;
      000A05 18 03            [12] 2698 	jr	00104$
      000A07                       2699 00115$:
                           000A07  2700 	C$main.c$225$3_1$231	= .
                                   2701 	.globl	C$main.c$225$3_1$231
                                   2702 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:225: for(int8_t i = 0; i < MAX_BLOCK_COUNT; i++)
      000A07 0C               [ 4] 2703 	inc	c
      000A08 18 C1            [12] 2704 	jr	00114$
      000A0A                       2705 00104$:
                           000A0A  2706 	C$main.c$233$2_1$230	= .
                                   2707 	.globl	C$main.c$233$2_1$230
                                   2708 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:233: wait_vbl_done();
      000A0A CDr00r00         [24] 2709 	call	_wait_vbl_done
      000A0D C3r89r09         [16] 2710 	jp	00105$
      000A10                       2711 00107$:
                           000A10  2712 	C$main.c$235$1_1$229	= .
                                   2713 	.globl	C$main.c$235$1_1$229
                                   2714 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:235: HIDE_SPRITES;
      000A10 F0r00            [12] 2715 	ldh	a, (_LCDC_REG + 0)
      000A12 E6 FD            [ 8] 2716 	and	a, #0xfd
      000A14 E0r00            [12] 2717 	ldh	(_LCDC_REG + 0), a
                                   2718 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1378: SCX_REG=x, SCY_REG=y;
      000A16 AF               [ 4] 2719 	xor	a, a
      000A17 E0r00            [12] 2720 	ldh	(_SCX_REG + 0), a
      000A19 AF               [ 4] 2721 	xor	a, a
      000A1A E0r00            [12] 2722 	ldh	(_SCY_REG + 0), a
                           000A1C  2723 	C$main.c$237$1_1$229	= .
                                   2724 	.globl	C$main.c$237$1_1$229
                                   2725 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:237: printf("GameOver");
      000A1C 11r27r0A         [12] 2726 	ld	de, #___str_0
      000A1F D5               [16] 2727 	push	de
      000A20 CDr00r00         [24] 2728 	call	_printf
      000A23 E1               [12] 2729 	pop	hl
                           000A24  2730 	C$main.c$238$1_1$226	= .
                                   2731 	.globl	C$main.c$238$1_1$226
                                   2732 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:238: }
      000A24 E8 04            [16] 2733 	add	sp, #4
                           000A26  2734 	C$main.c$238$1_1$226	= .
                                   2735 	.globl	C$main.c$238$1_1$226
                           000A26  2736 	XG$main$0$0	= .
                                   2737 	.globl	XG$main$0$0
      000A26 C9               [16] 2738 	ret
                           000A27  2739 Fmain$__str_0$0_0$0 == .
      000A27                       2740 ___str_0:
      000A27 47 61 6D 65 4F 76 65  2741 	.ascii "GameOver"
             72
      000A2F 00                    2742 	.db 0x00
                                   2743 	.area _CODE
                                   2744 	.area _INITIALIZER
                           000000  2745 Fmain$__xinit_movementFrameCount$0_0$0 == .
      000000                       2746 __xinit__movementFrameCount:
      000000 00                    2747 	.db #0x00	; 0
                           000001  2748 Fmain$__xinit_animationFrameCount$0_0$0 == .
      000001                       2749 __xinit__animationFrameCount:
      000001 00                    2750 	.db #0x00	; 0
                           000002  2751 Fmain$__xinit_jumpFrameCount$0_0$0 == .
      000002                       2752 __xinit__jumpFrameCount:
      000002 00                    2753 	.db #0x00	; 0
                           000003  2754 Fmain$__xinit_lastMovementX$0_0$0 == .
      000003                       2755 __xinit__lastMovementX:
      000003 00                    2756 	.db #0x00	;  0
                           000004  2757 Fmain$__xinit_lastMovementY$0_0$0 == .
      000004                       2758 __xinit__lastMovementY:
      000004 00                    2759 	.db #0x00	;  0
                           000005  2760 Fmain$__xinit_slowingX$0_0$0 == .
      000005                       2761 __xinit__slowingX:
      000005 00                    2762 	.db #0x00	;  0
                                   2763 	.area _CABS (ABS)
