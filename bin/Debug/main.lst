                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _MovementPhysics
                                     13 	.globl _SetupCharacter
                                     14 	.globl _MoveCharacterWithJoypad
                                     15 	.globl _ScrollCharacter
                                     16 	.globl _MoveCharacter
                                     17 	.globl _LoadSpriteFrame
                                     18 	.globl _set_sprite_data
                                     19 	.globl _set_bkg_tiles
                                     20 	.globl _set_bkg_data
                                     21 	.globl _wait_vbl_done
                                     22 	.globl _joypad
                                     23 	.globl _slowingX
                                     24 	.globl _lastMovementY
                                     25 	.globl _lastMovementX
                                     26 	.globl _frameCount
                                     27 	.globl _player
                                     28 	.globl _showTitle
                                     29 	.globl _SetupBackGround
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
                           000000    37 G$player$0_0$0==.
      000000                         38 _player::
      000000                         39 	.ds 19
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _INITIALIZED
                           000000    44 G$frameCount$0_0$0==.
      000000                         45 _frameCount::
      000000                         46 	.ds 1
                           000001    47 G$lastMovementX$0_0$0==.
      000001                         48 _lastMovementX::
      000001                         49 	.ds 1
                           000002    50 G$lastMovementY$0_0$0==.
      000002                         51 _lastMovementY::
      000002                         52 	.ds 1
                           000003    53 G$slowingX$0_0$0==.
      000003                         54 _slowingX::
      000003                         55 	.ds 1
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DABS (ABS)
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _GSINIT
                                     65 	.area _GSFINAL
                                     66 	.area _GSINIT
                                     67 ;--------------------------------------------------------
                                     68 ; Home
                                     69 ;--------------------------------------------------------
                                     70 	.area _HOME
                                     71 	.area _HOME
                                     72 ;--------------------------------------------------------
                                     73 ; code
                                     74 ;--------------------------------------------------------
                                     75 	.area _CODE
                           000000    76 	G$LoadSpriteFrame$0$0	= .
                                     77 	.globl	G$LoadSpriteFrame$0$0
                           000000    78 	C$Character.h$64$0_0$130	= .
                                     79 	.globl	C$Character.h$64$0_0$130
                                     80 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:64: void LoadSpriteFrame(Character* character, uint8_t frame)
                                     81 ;	---------------------------------
                                     82 ; Function LoadSpriteFrame
                                     83 ; ---------------------------------
      000000                         84 _LoadSpriteFrame::
      000000 E8 E9            [16]   85 	add	sp, #-23
      000002 F8 13            [12]   86 	ldhl	sp,	#19
      000004 73               [ 8]   87 	ld	(hl), e
      000005 23               [ 8]   88 	inc	hl
      000006 72               [ 8]   89 	ld	(hl), d
                           000007    90 	C$Character.h$66$1_0$130	= .
                                     91 	.globl	C$Character.h$66$1_0$130
                                     92 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:66: character->spriteCurrentFrame = frame;
      000007 2B               [ 8]   93 	dec	hl
      000008 47               [ 4]   94 	ld	b, a
      000009 2A               [ 8]   95 	ld	a, (hl+)
      00000A 5F               [ 4]   96 	ld	e, a
      00000B 56               [ 8]   97 	ld	d, (hl)
      00000C 21 04 00         [12]   98 	ld	hl, #0x0004
      00000F 19               [ 8]   99 	add	hl, de
      000010 5D               [ 4]  100 	ld	e, l
      000011 54               [ 4]  101 	ld	d, h
      000012 78               [ 4]  102 	ld	a, b
      000013 12               [ 8]  103 	ld	(de), a
                           000014   104 	C$Character.h$68$1_1$131	= .
                                    105 	.globl	C$Character.h$68$1_1$131
                                    106 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:68: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      000014 F8 13            [12]  107 	ldhl	sp,#19
      000016 2A               [ 8]  108 	ld	a, (hl+)
      000017 5F               [ 4]  109 	ld	e, a
      000018 56               [ 8]  110 	ld	d, (hl)
      000019 6B               [ 4]  111 	ld	l, e
      00001A 62               [ 4]  112 	ld	h, d
      00001B 23               [ 8]  113 	inc	hl
      00001C 33               [ 8]  114 	inc	sp
      00001D 33               [ 8]  115 	inc	sp
      00001E 5D               [ 4]  116 	ld	e, l
      00001F 54               [ 4]  117 	ld	d, h
      000020 D5               [16]  118 	push	de
      000021 1A               [ 8]  119 	ld	a, (de)
      000022 4F               [ 4]  120 	ld	c, a
      000023 F8 13            [12]  121 	ldhl	sp,#19
      000025 2A               [ 8]  122 	ld	a, (hl+)
      000026 5F               [ 4]  123 	ld	e, a
      000027 56               [ 8]  124 	ld	d, (hl)
      000028 21 02 00         [12]  125 	ld	hl, #0x0002
      00002B 19               [ 8]  126 	add	hl, de
      00002C E5               [16]  127 	push	hl
      00002D 7D               [ 4]  128 	ld	a, l
      00002E F8 04            [12]  129 	ldhl	sp,	#4
      000030 77               [ 8]  130 	ld	(hl), a
      000031 E1               [12]  131 	pop	hl
      000032 7C               [ 4]  132 	ld	a, h
      000033 F8 03            [12]  133 	ldhl	sp,	#3
      000035 32               [ 8]  134 	ld	(hl-), a
      000036 2A               [ 8]  135 	ld	a, (hl+)
      000037 5F               [ 4]  136 	ld	e, a
      000038 56               [ 8]  137 	ld	d, (hl)
      000039 1A               [ 8]  138 	ld	a, (de)
      00003A 6F               [ 4]  139 	ld	l, a
                                    140 ;	spillPairReg hl
                                    141 ;	spillPairReg hl
      00003B C5               [16]  142 	push	bc
      00003C 5D               [ 4]  143 	ld	e, l
      00003D 79               [ 4]  144 	ld	a, c
                           00003E   145 	C$Character.h$71$2_1$130	= .
                                    146 	.globl	C$Character.h$71$2_1$130
                                    147 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      00003E CDr00r00         [24]  148 	call	__muluchar
      000041 F1               [12]  149 	pop	af
      000042 47               [ 4]  150 	ld	b, a
      000043 F8 13            [12]  151 	ldhl	sp,#19
      000045 2A               [ 8]  152 	ld	a, (hl+)
      000046 5F               [ 4]  153 	ld	e, a
      000047 56               [ 8]  154 	ld	d, (hl)
      000048 21 0A 00         [12]  155 	ld	hl, #0x000a
      00004B 19               [ 8]  156 	add	hl, de
      00004C E5               [16]  157 	push	hl
      00004D 7D               [ 4]  158 	ld	a, l
      00004E F8 06            [12]  159 	ldhl	sp,	#6
      000050 77               [ 8]  160 	ld	(hl), a
      000051 E1               [12]  161 	pop	hl
      000052 7C               [ 4]  162 	ld	a, h
      000053 F8 05            [12]  163 	ldhl	sp,	#5
      000055 77               [ 8]  164 	ld	(hl), a
      000056 F8 13            [12]  165 	ldhl	sp,#19
      000058 2A               [ 8]  166 	ld	a, (hl+)
      000059 5F               [ 4]  167 	ld	e, a
      00005A 56               [ 8]  168 	ld	d, (hl)
      00005B 21 0B 00         [12]  169 	ld	hl, #0x000b
      00005E 19               [ 8]  170 	add	hl, de
      00005F E5               [16]  171 	push	hl
      000060 7D               [ 4]  172 	ld	a, l
      000061 F8 08            [12]  173 	ldhl	sp,	#8
      000063 77               [ 8]  174 	ld	(hl), a
      000064 E1               [12]  175 	pop	hl
      000065 7C               [ 4]  176 	ld	a, h
      000066 F8 07            [12]  177 	ldhl	sp,	#7
      000068 77               [ 8]  178 	ld	(hl), a
      000069 F8 13            [12]  179 	ldhl	sp,#19
      00006B 2A               [ 8]  180 	ld	a, (hl+)
      00006C 5F               [ 4]  181 	ld	e, a
      00006D 56               [ 8]  182 	ld	d, (hl)
      00006E 21 11 00         [12]  183 	ld	hl, #0x0011
      000071 19               [ 8]  184 	add	hl, de
      000072 E5               [16]  185 	push	hl
      000073 7D               [ 4]  186 	ld	a, l
      000074 F8 0A            [12]  187 	ldhl	sp,	#10
      000076 77               [ 8]  188 	ld	(hl), a
      000077 E1               [12]  189 	pop	hl
      000078 7C               [ 4]  190 	ld	a, h
      000079 F8 09            [12]  191 	ldhl	sp,	#9
      00007B 77               [ 8]  192 	ld	(hl), a
      00007C 59               [ 4]  193 	ld	e, c
      00007D 78               [ 4]  194 	ld	a, b
      00007E CDr00r00         [24]  195 	call	__muluchar
      000081 F8 0A            [12]  196 	ldhl	sp,	#10
      000083 79               [ 4]  197 	ld	a, c
      000084 22               [ 8]  198 	ld	(hl+), a
      000085 70               [ 8]  199 	ld	(hl), b
      000086 F8 13            [12]  200 	ldhl	sp,#19
      000088 2A               [ 8]  201 	ld	a, (hl+)
      000089 5F               [ 4]  202 	ld	e, a
      00008A 56               [ 8]  203 	ld	d, (hl)
      00008B 21 05 00         [12]  204 	ld	hl, #0x0005
      00008E 19               [ 8]  205 	add	hl, de
      00008F E5               [16]  206 	push	hl
      000090 7D               [ 4]  207 	ld	a, l
      000091 F8 0E            [12]  208 	ldhl	sp,	#14
      000093 77               [ 8]  209 	ld	(hl), a
      000094 E1               [12]  210 	pop	hl
      000095 7C               [ 4]  211 	ld	a, h
      000096 F8 0D            [12]  212 	ldhl	sp,	#13
      000098 77               [ 8]  213 	ld	(hl), a
      000099 F8 15            [12]  214 	ldhl	sp,	#21
      00009B 36 00            [12]  215 	ld	(hl), #0x00
      00009D                        216 00109$:
      00009D F8 02            [12]  217 	ldhl	sp,#2
      00009F 2A               [ 8]  218 	ld	a, (hl+)
      0000A0 5F               [ 4]  219 	ld	e, a
      0000A1 56               [ 8]  220 	ld	d, (hl)
      0000A2 1A               [ 8]  221 	ld	a, (de)
      0000A3 47               [ 4]  222 	ld	b, a
      0000A4 F8 15            [12]  223 	ldhl	sp,	#21
      0000A6 7E               [ 8]  224 	ld	a, (hl)
      0000A7 90               [ 4]  225 	sub	a, b
      0000A8 CArA7r01         [16]  226 	jp	Z,00111$
                           0000AB   227 	C$Character.h$72$2_1$130	= .
                                    228 	.globl	C$Character.h$72$2_1$130
                                    229 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000AB F8 16            [12]  230 	ldhl	sp,	#22
      0000AD 36 00            [12]  231 	ld	(hl), #0x00
      0000AF                        232 00106$:
                           0000AF   233 	C$Character.h$68$2_1$130	= .
                                    234 	.globl	C$Character.h$68$2_1$130
                                    235 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:68: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
      0000AF D1               [12]  236 	pop	de
      0000B0 D5               [16]  237 	push	de
      0000B1 1A               [ 8]  238 	ld	a, (de)
      0000B2 F8 10            [12]  239 	ldhl	sp,	#16
      0000B4 77               [ 8]  240 	ld	(hl), a
                           0000B5   241 	C$Character.h$72$3_1$133	= .
                                    242 	.globl	C$Character.h$72$3_1$133
                                    243 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      0000B5 F8 16            [12]  244 	ldhl	sp,	#22
      0000B7 7E               [ 8]  245 	ld	a, (hl)
      0000B8 F8 10            [12]  246 	ldhl	sp,	#16
      0000BA 96               [ 8]  247 	sub	a, (hl)
      0000BB CArA1r01         [16]  248 	jp	Z,00110$
                           0000BE   249 	C$Character.h$75$2_1$130	= .
                                    250 	.globl	C$Character.h$75$2_1$130
                                    251 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:75: uint8_t ix = character->spriteFlippedX ? character->spriteTileWidth - 1 - x : x;
      0000BE F8 04            [12]  252 	ldhl	sp,#4
      0000C0 2A               [ 8]  253 	ld	a, (hl+)
      0000C1 5F               [ 4]  254 	ld	e, a
      0000C2 56               [ 8]  255 	ld	d, (hl)
      0000C3 1A               [ 8]  256 	ld	a, (de)
      0000C4 F8 11            [12]  257 	ldhl	sp,	#17
      0000C6 77               [ 8]  258 	ld	(hl), a
      0000C7 7E               [ 8]  259 	ld	a, (hl)
      0000C8 B7               [ 4]  260 	or	a, a
      0000C9 28 09            [12]  261 	jr	Z, 00113$
      0000CB 2B               [ 8]  262 	dec	hl
      0000CC 7E               [ 8]  263 	ld	a, (hl)
      0000CD 3D               [ 4]  264 	dec	a
      0000CE F8 16            [12]  265 	ldhl	sp,	#22
      0000D0 4E               [ 8]  266 	ld	c, (hl)
      0000D1 91               [ 4]  267 	sub	a, c
      0000D2 18 03            [12]  268 	jr	00114$
      0000D4                        269 00113$:
      0000D4 F8 16            [12]  270 	ldhl	sp,	#22
      0000D6 7E               [ 8]  271 	ld	a, (hl)
      0000D7                        272 00114$:
      0000D7 4F               [ 4]  273 	ld	c, a
                           0000D8   274 	C$Character.h$76$2_1$130	= .
                                    275 	.globl	C$Character.h$76$2_1$130
                                    276 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:76: uint8_t iy = character->spriteFlippedY ? character->spriteTileHeight - 1 - y : y;
      0000D8 F8 06            [12]  277 	ldhl	sp,#6
      0000DA 2A               [ 8]  278 	ld	a, (hl+)
      0000DB 5F               [ 4]  279 	ld	e, a
      0000DC 56               [ 8]  280 	ld	d, (hl)
      0000DD 1A               [ 8]  281 	ld	a, (de)
      0000DE F8 12            [12]  282 	ldhl	sp,	#18
      0000E0 77               [ 8]  283 	ld	(hl), a
      0000E1 7E               [ 8]  284 	ld	a, (hl)
      0000E2 B7               [ 4]  285 	or	a, a
      0000E3 28 0D            [12]  286 	jr	Z, 00115$
      0000E5 F8 02            [12]  287 	ldhl	sp,#2
      0000E7 2A               [ 8]  288 	ld	a, (hl+)
      0000E8 5F               [ 4]  289 	ld	e, a
      0000E9 56               [ 8]  290 	ld	d, (hl)
      0000EA 1A               [ 8]  291 	ld	a, (de)
      0000EB 3D               [ 4]  292 	dec	a
      0000EC F8 15            [12]  293 	ldhl	sp,	#21
      0000EE 46               [ 8]  294 	ld	b, (hl)
      0000EF 90               [ 4]  295 	sub	a, b
      0000F0 18 03            [12]  296 	jr	00116$
      0000F2                        297 00115$:
      0000F2 F8 15            [12]  298 	ldhl	sp,	#21
      0000F4 7E               [ 8]  299 	ld	a, (hl)
      0000F5                        300 00116$:
      0000F5 47               [ 4]  301 	ld	b, a
                           0000F6   302 	C$Character.h$79$4_1$134	= .
                                    303 	.globl	C$Character.h$79$4_1$134
                                    304 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:79: spriteId = character->spriteId + ix + (iy * character->spriteTileWidth);
      0000F6 F8 13            [12]  305 	ldhl	sp,#19
      0000F8 2A               [ 8]  306 	ld	a, (hl+)
      0000F9 5F               [ 4]  307 	ld	e, a
      0000FA 56               [ 8]  308 	ld	d, (hl)
      0000FB 1A               [ 8]  309 	ld	a, (de)
      0000FC 81               [ 4]  310 	add	a, c
      0000FD 4F               [ 4]  311 	ld	c, a
      0000FE C5               [16]  312 	push	bc
      0000FF F8 12            [12]  313 	ldhl	sp,	#18
      000101 5E               [ 8]  314 	ld	e, (hl)
      000102 78               [ 4]  315 	ld	a, b
      000103 CDr00r00         [24]  316 	call	__muluchar
      000106 79               [ 4]  317 	ld	a, c
      000107 C1               [12]  318 	pop	bc
      000108 81               [ 4]  319 	add	a, c
      000109 F8 0E            [12]  320 	ldhl	sp,	#14
      00010B 77               [ 8]  321 	ld	(hl), a
                                    322 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:82: set_sprite_prop(spriteId, (character->spriteFlippedX ? S_FLIPX : 0) |  (character->spriteFlippedY ? S_FLIPY : 0));
      00010C F8 11            [12]  323 	ldhl	sp,	#17
      00010E 7E               [ 8]  324 	ld	a, (hl)
      00010F B7               [ 4]  325 	or	a, a
      000110 28 09            [12]  326 	jr	Z, 00117$
      000112 2B               [ 8]  327 	dec	hl
      000113 2B               [ 8]  328 	dec	hl
      000114 3E 20            [ 8]  329 	ld	a, #0x20
      000116 22               [ 8]  330 	ld	(hl+), a
      000117 AF               [ 4]  331 	xor	a, a
      000118 77               [ 8]  332 	ld	(hl), a
      000119 18 05            [12]  333 	jr	00118$
      00011B                        334 00117$:
      00011B AF               [ 4]  335 	xor	a, a
      00011C F8 0F            [12]  336 	ldhl	sp,	#15
      00011E 22               [ 8]  337 	ld	(hl+), a
      00011F 77               [ 8]  338 	ld	(hl), a
      000120                        339 00118$:
      000120 F8 12            [12]  340 	ldhl	sp,	#18
      000122 7E               [ 8]  341 	ld	a, (hl)
      000123 B7               [ 4]  342 	or	a, a
      000124 28 08            [12]  343 	jr	Z, 00119$
      000126 2B               [ 8]  344 	dec	hl
      000127 3E 40            [ 8]  345 	ld	a, #0x40
      000129 22               [ 8]  346 	ld	(hl+), a
      00012A AF               [ 4]  347 	xor	a, a
      00012B 77               [ 8]  348 	ld	(hl), a
      00012C 18 05            [12]  349 	jr	00120$
      00012E                        350 00119$:
      00012E AF               [ 4]  351 	xor	a, a
      00012F F8 11            [12]  352 	ldhl	sp,	#17
      000131 22               [ 8]  353 	ld	(hl+), a
      000132 77               [ 8]  354 	ld	(hl), a
      000133                        355 00120$:
      000133 F8 0F            [12]  356 	ldhl	sp,	#15
      000135 2A               [ 8]  357 	ld	a, (hl+)
      000136 23               [ 8]  358 	inc	hl
      000137 4E               [ 8]  359 	ld	c, (hl)
      000138 B1               [ 4]  360 	or	a, c
      000139 5F               [ 4]  361 	ld	e, a
                                    362 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1850: shadow_OAM[nb].prop=prop;
      00013A F8 0E            [12]  363 	ldhl	sp,	#14
      00013C 4E               [ 8]  364 	ld	c, (hl)
      00013D 06 00            [ 8]  365 	ld	b, #0x00
      00013F CB 21            [ 8]  366 	sla	c
      000141 CB 10            [ 8]  367 	rl	b
      000143 CB 21            [ 8]  368 	sla	c
      000145 CB 10            [ 8]  369 	rl	b
      000147 21r01r00         [12]  370 	ld	hl,#_shadow_OAM + 1
      00014A 09               [ 8]  371 	add	hl,bc
      00014B 23               [ 8]  372 	inc	hl
      00014C 23               [ 8]  373 	inc	hl
      00014D 73               [ 8]  374 	ld	(hl), e
                                    375 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:85: set_sprite_tile(spriteId, character->tilemap[x + (y * character->spriteTileWidth) + (frame * spriteCount)] + character->tilesetStart);
      00014E F8 08            [12]  376 	ldhl	sp,#8
      000150 2A               [ 8]  377 	ld	a, (hl+)
      000151 5F               [ 4]  378 	ld	e, a
      000152 56               [ 8]  379 	ld	d, (hl)
      000153 1A               [ 8]  380 	ld	a, (de)
      000154 F8 0F            [12]  381 	ldhl	sp,	#15
      000156 22               [ 8]  382 	ld	(hl+), a
      000157 13               [ 8]  383 	inc	de
      000158 1A               [ 8]  384 	ld	a, (de)
      000159 77               [ 8]  385 	ld	(hl), a
      00015A F8 16            [12]  386 	ldhl	sp,	#22
      00015C 7E               [ 8]  387 	ld	a, (hl)
      00015D F8 11            [12]  388 	ldhl	sp,	#17
      00015F 22               [ 8]  389 	ld	(hl+), a
      000160 36 00            [12]  390 	ld	(hl), #0x00
      000162 D1               [12]  391 	pop	de
      000163 D5               [16]  392 	push	de
      000164 1A               [ 8]  393 	ld	a, (de)
      000165 6F               [ 4]  394 	ld	l, a
                                    395 ;	spillPairReg hl
                                    396 ;	spillPairReg hl
      000166 C5               [16]  397 	push	bc
      000167 5D               [ 4]  398 	ld	e, l
      000168 F8 17            [12]  399 	ldhl	sp,	#23
      00016A 7E               [ 8]  400 	ld	a, (hl)
      00016B CDr00r00         [24]  401 	call	__muluchar
      00016E 59               [ 4]  402 	ld	e, c
      00016F 50               [ 4]  403 	ld	d, b
      000170 C1               [12]  404 	pop	bc
      000171 F8 11            [12]  405 	ldhl	sp,	#17
      000173 2A               [ 8]  406 	ld	a,	(hl+)
      000174 66               [ 8]  407 	ld	h, (hl)
      000175 6F               [ 4]  408 	ld	l, a
      000176 19               [ 8]  409 	add	hl, de
      000177 5D               [ 4]  410 	ld	e, l
      000178 54               [ 4]  411 	ld	d, h
      000179 F8 0A            [12]  412 	ldhl	sp,	#10
      00017B 2A               [ 8]  413 	ld	a,	(hl+)
      00017C 66               [ 8]  414 	ld	h, (hl)
      00017D 6F               [ 4]  415 	ld	l, a
      00017E 19               [ 8]  416 	add	hl, de
      00017F 5D               [ 4]  417 	ld	e, l
      000180 54               [ 4]  418 	ld	d, h
      000181 F8 0F            [12]  419 	ldhl	sp,	#15
      000183 2A               [ 8]  420 	ld	a,	(hl+)
      000184 66               [ 8]  421 	ld	h, (hl)
      000185 6F               [ 4]  422 	ld	l, a
      000186 19               [ 8]  423 	add	hl, de
      000187 5D               [ 4]  424 	ld	e, l
      000188 54               [ 4]  425 	ld	d, h
      000189 1A               [ 8]  426 	ld	a, (de)
      00018A F8 0C            [12]  427 	ldhl	sp,#12
      00018C 5E               [ 8]  428 	ld	e, (hl)
      00018D 23               [ 8]  429 	inc	hl
      00018E 56               [ 8]  430 	ld	d, (hl)
      00018F F5               [16]  431 	push	af
      000190 1A               [ 8]  432 	ld	a, (de)
      000191 6F               [ 4]  433 	ld	l, a
                                    434 ;	spillPairReg hl
                                    435 ;	spillPairReg hl
      000192 F1               [12]  436 	pop	af
      000193 85               [ 4]  437 	add	a, l
      000194 5F               [ 4]  438 	ld	e, a
                                    439 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      000195 21r01r00         [12]  440 	ld	hl,#_shadow_OAM + 1
      000198 09               [ 8]  441 	add	hl,bc
      000199 23               [ 8]  442 	inc	hl
      00019A 73               [ 8]  443 	ld	(hl), e
                           00019B   444 	C$Character.h$72$3_1$133	= .
                                    445 	.globl	C$Character.h$72$3_1$133
                                    446 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:72: for (uint8_t x = 0; x != character->spriteTileWidth; x++)
      00019B F8 16            [12]  447 	ldhl	sp,	#22
      00019D 34               [12]  448 	inc	(hl)
      00019E C3rAFr00         [16]  449 	jp	00106$
      0001A1                        450 00110$:
                           0001A1   451 	C$Character.h$71$2_1$132	= .
                                    452 	.globl	C$Character.h$71$2_1$132
                                    453 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:71: for (uint8_t y = 0; y != character->spriteTileHeight; y++)
      0001A1 F8 15            [12]  454 	ldhl	sp,	#21
      0001A3 34               [12]  455 	inc	(hl)
      0001A4 C3r9Dr00         [16]  456 	jp	00109$
      0001A7                        457 00111$:
                           0001A7   458 	C$Character.h$87$2_1$130	= .
                                    459 	.globl	C$Character.h$87$2_1$130
                                    460 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:87: }
      0001A7 E8 17            [16]  461 	add	sp, #23
                           0001A9   462 	C$Character.h$87$2_1$130	= .
                                    463 	.globl	C$Character.h$87$2_1$130
                           0001A9   464 	XG$LoadSpriteFrame$0$0	= .
                                    465 	.globl	XG$LoadSpriteFrame$0$0
      0001A9 C9               [16]  466 	ret
                           0001AA   467 	G$MoveCharacter$0$0	= .
                                    468 	.globl	G$MoveCharacter$0$0
                           0001AA   469 	C$Character.h$89$2_1$142	= .
                                    470 	.globl	C$Character.h$89$2_1$142
                                    471 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:89: void MoveCharacter(Character *character, uint8_t x, uint8_t y)
                                    472 ;	---------------------------------
                                    473 ; Function MoveCharacter
                                    474 ; ---------------------------------
      0001AA                        475 _MoveCharacter::
      0001AA E8 F8            [16]  476 	add	sp, #-8
      0001AC 4B               [ 4]  477 	ld	c, e
      0001AD 42               [ 4]  478 	ld	b, d
      0001AE F8 05            [12]  479 	ldhl	sp,	#5
      0001B0 77               [ 8]  480 	ld	(hl), a
                           0001B1   481 	C$Character.h$92$1_0$142	= .
                                    482 	.globl	C$Character.h$92$1_0$142
                                    483 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:92: character->x = x;
      0001B1 21 06 00         [12]  484 	ld	hl, #0x0006
      0001B4 09               [ 8]  485 	add	hl, bc
      0001B5 5D               [ 4]  486 	ld	e, l
      0001B6 54               [ 4]  487 	ld	d, h
      0001B7 F8 05            [12]  488 	ldhl	sp,	#5
      0001B9 7E               [ 8]  489 	ld	a, (hl)
      0001BA 12               [ 8]  490 	ld	(de), a
                           0001BB   491 	C$Character.h$93$1_0$142	= .
                                    492 	.globl	C$Character.h$93$1_0$142
                                    493 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:93: character->y = y;
      0001BB 21 07 00         [12]  494 	ld	hl, #0x0007
      0001BE 09               [ 8]  495 	add	hl, bc
      0001BF 5D               [ 4]  496 	ld	e, l
      0001C0 54               [ 4]  497 	ld	d, h
      0001C1 F8 0A            [12]  498 	ldhl	sp,	#10
      0001C3 7E               [ 8]  499 	ld	a, (hl)
      0001C4 12               [ 8]  500 	ld	(de), a
                           0001C5   501 	C$Character.h$95$4_0$145	= .
                                    502 	.globl	C$Character.h$95$4_0$145
                                    503 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      0001C5 69               [ 4]  504 	ld	l, c
      0001C6 60               [ 4]  505 	ld	h, b
      0001C7 23               [ 8]  506 	inc	hl
      0001C8 33               [ 8]  507 	inc	sp
      0001C9 33               [ 8]  508 	inc	sp
      0001CA E5               [16]  509 	push	hl
      0001CB 21 02 00         [12]  510 	ld	hl, #0x0002
      0001CE 09               [ 8]  511 	add	hl, bc
      0001CF E5               [16]  512 	push	hl
      0001D0 7D               [ 4]  513 	ld	a, l
      0001D1 F8 04            [12]  514 	ldhl	sp,	#4
      0001D3 77               [ 8]  515 	ld	(hl), a
      0001D4 E1               [12]  516 	pop	hl
      0001D5 7C               [ 4]  517 	ld	a, h
      0001D6 F8 03            [12]  518 	ldhl	sp,	#3
      0001D8 77               [ 8]  519 	ld	(hl), a
      0001D9 F8 06            [12]  520 	ldhl	sp,	#6
      0001DB 36 00            [12]  521 	ld	(hl), #0x00
      0001DD                        522 00108$:
      0001DD F8 02            [12]  523 	ldhl	sp,#2
      0001DF 2A               [ 8]  524 	ld	a, (hl+)
      0001E0 5F               [ 4]  525 	ld	e, a
      0001E1 56               [ 8]  526 	ld	d, (hl)
      0001E2 1A               [ 8]  527 	ld	a, (de)
      0001E3 F8 07            [12]  528 	ldhl	sp,	#7
      0001E5 32               [ 8]  529 	ld	(hl-), a
      0001E6 2A               [ 8]  530 	ld	a, (hl+)
      0001E7 96               [ 8]  531 	sub	a, (hl)
      0001E8 28 5B            [12]  532 	jr	Z, 00110$
                           0001EA   533 	C$Character.h$97$2_0$142	= .
                                    534 	.globl	C$Character.h$97$2_0$142
                                    535 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:97: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      0001EA F8 07            [12]  536 	ldhl	sp,	#7
      0001EC 36 00            [12]  537 	ld	(hl), #0x00
      0001EE                        538 00105$:
      0001EE D1               [12]  539 	pop	de
      0001EF D5               [16]  540 	push	de
      0001F0 1A               [ 8]  541 	ld	a, (de)
      0001F1 F8 04            [12]  542 	ldhl	sp,	#4
      0001F3 77               [ 8]  543 	ld	(hl), a
      0001F4 F8 07            [12]  544 	ldhl	sp,	#7
      0001F6 7E               [ 8]  545 	ld	a, (hl)
      0001F7 F8 04            [12]  546 	ldhl	sp,	#4
      0001F9 96               [ 8]  547 	sub	a, (hl)
      0001FA 28 44            [12]  548 	jr	Z, 00109$
                           0001FC   549 	C$Character.h$100$5_0$146	= .
                                    550 	.globl	C$Character.h$100$5_0$146
                                    551 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:100: uint8_t index = character->spriteId + ix + (iy * character->spriteTileWidth);
      0001FC 0A               [ 8]  552 	ld	a, (bc)
      0001FD F8 07            [12]  553 	ldhl	sp,	#7
      0001FF 86               [ 8]  554 	add	a, (hl)
      000200 57               [ 4]  555 	ld	d, a
      000201 C5               [16]  556 	push	bc
      000202 D5               [16]  557 	push	de
      000203 F8 08            [12]  558 	ldhl	sp,	#8
      000205 2A               [ 8]  559 	ld	a, (hl+)
      000206 23               [ 8]  560 	inc	hl
      000207 5F               [ 4]  561 	ld	e, a
      000208 7E               [ 8]  562 	ld	a, (hl)
      000209 CDr00r00         [24]  563 	call	__muluchar
      00020C 79               [ 4]  564 	ld	a, c
      00020D D1               [12]  565 	pop	de
      00020E C1               [12]  566 	pop	bc
      00020F 82               [ 4]  567 	add	a, d
      000210 5F               [ 4]  568 	ld	e, a
                                    569 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:103: move_sprite(index, x + (ix * 8), y + (iy * 8));       
      000211 F8 06            [12]  570 	ldhl	sp,	#6
      000213 7E               [ 8]  571 	ld	a, (hl)
      000214 87               [ 4]  572 	add	a, a
      000215 87               [ 4]  573 	add	a, a
      000216 87               [ 4]  574 	add	a, a
      000217 F8 0A            [12]  575 	ldhl	sp,	#10
      000219 56               [ 8]  576 	ld	d, (hl)
      00021A 82               [ 4]  577 	add	a, d
      00021B 57               [ 4]  578 	ld	d, a
      00021C F8 07            [12]  579 	ldhl	sp,	#7
      00021E 3A               [ 8]  580 	ld	a, (hl-)
      00021F 2B               [ 8]  581 	dec	hl
      000220 87               [ 4]  582 	add	a, a
      000221 87               [ 4]  583 	add	a, a
      000222 87               [ 4]  584 	add	a, a
      000223 6E               [ 8]  585 	ld	l, (hl)
                                    586 ;	spillPairReg hl
                                    587 ;	spillPairReg hl
      000224 85               [ 4]  588 	add	a, l
      000225 F8 04            [12]  589 	ldhl	sp,	#4
      000227 77               [ 8]  590 	ld	(hl), a
                                    591 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000228 26 00            [ 8]  592 	ld	h, #0x00
                                    593 ;	spillPairReg hl
                                    594 ;	spillPairReg hl
      00022A 6B               [ 4]  595 	ld	l, e
      00022B 29               [ 8]  596 	add	hl, hl
      00022C 29               [ 8]  597 	add	hl, hl
      00022D D5               [16]  598 	push	de
      00022E 11r00r00         [12]  599 	ld	de, #_shadow_OAM
      000231 19               [ 8]  600 	add	hl, de
      000232 D1               [12]  601 	pop	de
                                    602 ;c:\gbdk_dev\resources\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000233 7A               [ 4]  603 	ld	a, d
      000234 22               [ 8]  604 	ld	(hl+), a
      000235 5D               [ 4]  605 	ld	e, l
      000236 54               [ 4]  606 	ld	d, h
      000237 F8 04            [12]  607 	ldhl	sp,	#4
      000239 7E               [ 8]  608 	ld	a, (hl)
      00023A 12               [ 8]  609 	ld	(de), a
                           00023B   610 	C$Character.h$97$4_0$145	= .
                                    611 	.globl	C$Character.h$97$4_0$145
                                    612 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:97: for (uint8_t ix = 0; ix != character->spriteTileWidth; ix++)
      00023B F8 07            [12]  613 	ldhl	sp,	#7
      00023D 34               [12]  614 	inc	(hl)
      00023E 18 AE            [12]  615 	jr	00105$
      000240                        616 00109$:
                           000240   617 	C$Character.h$95$2_0$143	= .
                                    618 	.globl	C$Character.h$95$2_0$143
                                    619 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:95: for (uint8_t iy = 0; iy != character->spriteTileHeight; iy++)
      000240 F8 06            [12]  620 	ldhl	sp,	#6
      000242 34               [12]  621 	inc	(hl)
      000243 18 98            [12]  622 	jr	00108$
      000245                        623 00110$:
                           000245   624 	C$Character.h$106$2_0$142	= .
                                    625 	.globl	C$Character.h$106$2_0$142
                                    626 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:106: }
      000245 E8 08            [16]  627 	add	sp, #8
      000247 E1               [12]  628 	pop	hl
      000248 33               [ 8]  629 	inc	sp
      000249 E9               [ 4]  630 	jp	(hl)
                           00024A   631 	G$ScrollCharacter$0$0	= .
                                    632 	.globl	G$ScrollCharacter$0$0
                           00024A   633 	C$Character.h$108$2_0$151	= .
                                    634 	.globl	C$Character.h$108$2_0$151
                                    635 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:108: void ScrollCharacter(Character *character, int8_t x, int8_t y)
                                    636 ;	---------------------------------
                                    637 ; Function ScrollCharacter
                                    638 ; ---------------------------------
      00024A                        639 _ScrollCharacter::
      00024A D5               [16]  640 	push	de
      00024B 4F               [ 4]  641 	ld	c, a
                           00024C   642 	C$Character.h$110$1_0$151	= .
                                    643 	.globl	C$Character.h$110$1_0$151
                                    644 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:110: character->x += x;
      00024C D1               [12]  645 	pop	de
      00024D D5               [16]  646 	push	de
      00024E 21 06 00         [12]  647 	ld	hl, #0x0006
      000251 19               [ 8]  648 	add	hl, de
      000252 5D               [ 4]  649 	ld	e, l
      000253 54               [ 4]  650 	ld	d, h
      000254 1A               [ 8]  651 	ld	a, (de)
      000255 81               [ 4]  652 	add	a, c
      000256 12               [ 8]  653 	ld	(de), a
                           000257   654 	C$Character.h$111$1_0$151	= .
                                    655 	.globl	C$Character.h$111$1_0$151
                                    656 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:111: character->y += y;
      000257 D5               [16]  657 	push	de
      000258 F8 02            [12]  658 	ldhl	sp,#2
      00025A 2A               [ 8]  659 	ld	a, (hl+)
      00025B 5F               [ 4]  660 	ld	e, a
      00025C 56               [ 8]  661 	ld	d, (hl)
      00025D 21 07 00         [12]  662 	ld	hl, #0x0007
      000260 19               [ 8]  663 	add	hl, de
      000261 D1               [12]  664 	pop	de
      000262 4D               [ 4]  665 	ld	c, l
      000263 44               [ 4]  666 	ld	b, h
      000264 0A               [ 8]  667 	ld	a, (bc)
      000265 F8 04            [12]  668 	ldhl	sp,	#4
      000267 86               [ 8]  669 	add	a, (hl)
                           000268   670 	C$Character.h$113$1_0$151	= .
                                    671 	.globl	C$Character.h$113$1_0$151
                                    672 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:113: MoveCharacter(character, character->x, character->y);
      000268 02               [ 8]  673 	ld	(bc), a
      000269 47               [ 4]  674 	ld	b, a
      00026A 1A               [ 8]  675 	ld	a, (de)
      00026B 4F               [ 4]  676 	ld	c, a
      00026C C5               [16]  677 	push	bc
      00026D 33               [ 8]  678 	inc	sp
      00026E 79               [ 4]  679 	ld	a, c
      00026F F8 01            [12]  680 	ldhl	sp,	#1
      000271 5E               [ 8]  681 	ld	e, (hl)
      000272 23               [ 8]  682 	inc	hl
      000273 56               [ 8]  683 	ld	d, (hl)
                           000274   684 	C$Character.h$114$1_0$151	= .
                                    685 	.globl	C$Character.h$114$1_0$151
                                    686 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:114: }
      000274 CDrAAr01         [24]  687 	call	_MoveCharacter
      000277 E1               [12]  688 	pop	hl
      000278 E1               [12]  689 	pop	hl
      000279 33               [ 8]  690 	inc	sp
      00027A E9               [ 4]  691 	jp	(hl)
                           00027B   692 	G$MoveCharacterWithJoypad$0$0	= .
                                    693 	.globl	G$MoveCharacterWithJoypad$0$0
                           00027B   694 	C$Character.h$116$1_0$153	= .
                                    695 	.globl	C$Character.h$116$1_0$153
                                    696 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:116: void MoveCharacterWithJoypad(Character *character)
                                    697 ;	---------------------------------
                                    698 ; Function MoveCharacterWithJoypad
                                    699 ; ---------------------------------
      00027B                        700 _MoveCharacterWithJoypad::
      00027B D5               [16]  701 	push	de
                           00027C   702 	C$Character.h$119$1_0$153	= .
                                    703 	.globl	C$Character.h$119$1_0$153
                                    704 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:119: uint8_t buttons = joypad();
      00027C CDr00r00         [24]  705 	call	_joypad
                           00027F   706 	C$Character.h$121$1_0$153	= .
                                    707 	.globl	C$Character.h$121$1_0$153
                                    708 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:121: int8_t moveX = 0;
                           00027F   709 	C$Character.h$122$1_0$153	= .
                                    710 	.globl	C$Character.h$122$1_0$153
                                    711 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:122: int8_t moveY = 0;
      00027F 01 00 00         [12]  712 	ld	bc, #0x0
                           000282   713 	C$Character.h$124$1_0$153	= .
                                    714 	.globl	C$Character.h$124$1_0$153
                                    715 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:124: if (buttons & J_LEFT)
      000282 CB 4F            [ 8]  716 	bit	1, a
      000284 28 04            [12]  717 	jr	Z, 00104$
                           000286   718 	C$Character.h$126$2_0$154	= .
                                    719 	.globl	C$Character.h$126$2_0$154
                                    720 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:126: moveX = -1;
      000286 0E FF            [ 8]  721 	ld	c, #0xff
      000288 18 06            [12]  722 	jr	00105$
      00028A                        723 00104$:
                           00028A   724 	C$Character.h$128$1_0$153	= .
                                    725 	.globl	C$Character.h$128$1_0$153
                                    726 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:128: else if (buttons & J_RIGHT)
      00028A CB 47            [ 8]  727 	bit	0, a
      00028C 28 02            [12]  728 	jr	Z, 00105$
                           00028E   729 	C$Character.h$130$2_0$155	= .
                                    730 	.globl	C$Character.h$130$2_0$155
                                    731 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:130: moveX = 1;
      00028E 0E 01            [ 8]  732 	ld	c, #0x01
      000290                        733 00105$:
                           000290   734 	C$Character.h$133$1_0$153	= .
                                    735 	.globl	C$Character.h$133$1_0$153
                                    736 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:133: if (buttons & J_UP)
      000290 CB 57            [ 8]  737 	bit	2, a
      000292 28 04            [12]  738 	jr	Z, 00110$
                           000294   739 	C$Character.h$135$2_0$156	= .
                                    740 	.globl	C$Character.h$135$2_0$156
                                    741 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:135: moveY = -1;
      000294 06 FF            [ 8]  742 	ld	b, #0xff
      000296 18 06            [12]  743 	jr	00111$
      000298                        744 00110$:
                           000298   745 	C$Character.h$137$1_0$153	= .
                                    746 	.globl	C$Character.h$137$1_0$153
                                    747 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:137: else if (buttons & J_DOWN)
      000298 CB 5F            [ 8]  748 	bit	3, a
      00029A 28 02            [12]  749 	jr	Z, 00111$
                           00029C   750 	C$Character.h$139$2_0$157	= .
                                    751 	.globl	C$Character.h$139$2_0$157
                                    752 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:139: moveY = 1;
      00029C 06 01            [ 8]  753 	ld	b, #0x01
                           00029E   754 	C$Character.h$142$1_0$153	= .
                                    755 	.globl	C$Character.h$142$1_0$153
                                    756 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:142: else if (buttons & J_A)
      00029E                        757 00111$:
                           00029E   758 	C$Character.h$148$1_0$153	= .
                                    759 	.globl	C$Character.h$148$1_0$153
                                    760 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:148: character->movementForceX = moveX;
      00029E D1               [12]  761 	pop	de
      00029F D5               [16]  762 	push	de
      0002A0 21 0C 00         [12]  763 	ld	hl, #0x000c
      0002A3 19               [ 8]  764 	add	hl, de
      0002A4 5D               [ 4]  765 	ld	e, l
      0002A5 54               [ 4]  766 	ld	d, h
      0002A6 79               [ 4]  767 	ld	a, c
      0002A7 12               [ 8]  768 	ld	(de), a
                           0002A8   769 	C$Character.h$149$1_0$153	= .
                                    770 	.globl	C$Character.h$149$1_0$153
                                    771 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:149: character->movementForceY = moveY;
      0002A8 D1               [12]  772 	pop	de
      0002A9 D5               [16]  773 	push	de
      0002AA 21 0D 00         [12]  774 	ld	hl, #0x000d
      0002AD 19               [ 8]  775 	add	hl, de
      0002AE 5D               [ 4]  776 	ld	e, l
      0002AF 54               [ 4]  777 	ld	d, h
      0002B0 78               [ 4]  778 	ld	a, b
      0002B1 12               [ 8]  779 	ld	(de), a
                           0002B2   780 	C$Character.h$150$1_0$153	= .
                                    781 	.globl	C$Character.h$150$1_0$153
                                    782 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:150: }
      0002B2 33               [ 8]  783 	inc	sp
      0002B3 33               [ 8]  784 	inc	sp
                           0002B4   785 	C$Character.h$150$1_0$153	= .
                                    786 	.globl	C$Character.h$150$1_0$153
                           0002B4   787 	XG$MoveCharacterWithJoypad$0$0	= .
                                    788 	.globl	XG$MoveCharacterWithJoypad$0$0
      0002B4 C9               [16]  789 	ret
                           0002B5   790 	G$SetupCharacter$0$0	= .
                                    791 	.globl	G$SetupCharacter$0$0
                           0002B5   792 	C$Character.h$153$1_0$160	= .
                                    793 	.globl	C$Character.h$153$1_0$160
                                    794 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:153: void SetupCharacter(Character* character, uint8_t spriteId, uint8_t tileWidth, uint8_t tileHeight, uint8_t tilesetStart, uint8_t totalFrames, const unsigned char* tilemap)
                                    795 ;	---------------------------------
                                    796 ; Function SetupCharacter
                                    797 ; ---------------------------------
      0002B5                        798 _SetupCharacter::
      0002B5 3B               [ 8]  799 	dec	sp
      0002B6 F8 00            [12]  800 	ldhl	sp,	#0
      0002B8 77               [ 8]  801 	ld	(hl), a
                           0002B9   802 	C$Character.h$155$1_0$160	= .
                                    803 	.globl	C$Character.h$155$1_0$160
                                    804 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:155: character->tilemap = tilemap;
      0002B9 21 11 00         [12]  805 	ld	hl, #0x0011
      0002BC 19               [ 8]  806 	add	hl, de
      0002BD 4D               [ 4]  807 	ld	c, l
      0002BE 44               [ 4]  808 	ld	b, h
      0002BF F8 07            [12]  809 	ldhl	sp,	#7
      0002C1 2A               [ 8]  810 	ld	a, (hl+)
      0002C2 02               [ 8]  811 	ld	(bc), a
      0002C3 03               [ 8]  812 	inc	bc
      0002C4 7E               [ 8]  813 	ld	a, (hl)
      0002C5 02               [ 8]  814 	ld	(bc), a
                           0002C6   815 	C$Character.h$156$1_0$160	= .
                                    816 	.globl	C$Character.h$156$1_0$160
                                    817 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:156: character->spriteId = spriteId;
      0002C6 F8 00            [12]  818 	ldhl	sp,	#0
      0002C8 7E               [ 8]  819 	ld	a, (hl)
      0002C9 12               [ 8]  820 	ld	(de), a
                           0002CA   821 	C$Character.h$157$1_0$160	= .
                                    822 	.globl	C$Character.h$157$1_0$160
                                    823 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:157: character->spriteTileWidth = tileWidth;
      0002CA 4B               [ 4]  824 	ld	c, e
      0002CB 42               [ 4]  825 	ld	b, d
      0002CC 03               [ 8]  826 	inc	bc
      0002CD F8 03            [12]  827 	ldhl	sp,	#3
                           0002CF   828 	C$Character.h$158$1_0$160	= .
                                    829 	.globl	C$Character.h$158$1_0$160
                                    830 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:158: character->spriteTileHeight = tileHeight;
      0002CF 2A               [ 8]  831 	ld	a, (hl+)
      0002D0 02               [ 8]  832 	ld	(bc), a
      0002D1 4B               [ 4]  833 	ld	c, e
      0002D2 42               [ 4]  834 	ld	b, d
      0002D3 03               [ 8]  835 	inc	bc
      0002D4 03               [ 8]  836 	inc	bc
      0002D5 7E               [ 8]  837 	ld	a, (hl)
      0002D6 02               [ 8]  838 	ld	(bc), a
                           0002D7   839 	C$Character.h$159$1_0$160	= .
                                    840 	.globl	C$Character.h$159$1_0$160
                                    841 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:159: character->tilesetStart = tilesetStart;
      0002D7 21 05 00         [12]  842 	ld	hl, #0x0005
      0002DA 19               [ 8]  843 	add	hl, de
      0002DB 4D               [ 4]  844 	ld	c, l
      0002DC 44               [ 4]  845 	ld	b, h
      0002DD F8 05            [12]  846 	ldhl	sp,	#5
                           0002DF   847 	C$Character.h$160$1_0$160	= .
                                    848 	.globl	C$Character.h$160$1_0$160
                                    849 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:160: character->spriteFrames = totalFrames;
      0002DF 2A               [ 8]  850 	ld	a, (hl+)
      0002E0 02               [ 8]  851 	ld	(bc), a
      0002E1 4B               [ 4]  852 	ld	c, e
      0002E2 42               [ 4]  853 	ld	b, d
      0002E3 03               [ 8]  854 	inc	bc
      0002E4 03               [ 8]  855 	inc	bc
      0002E5 03               [ 8]  856 	inc	bc
      0002E6 7E               [ 8]  857 	ld	a, (hl)
      0002E7 02               [ 8]  858 	ld	(bc), a
                           0002E8   859 	C$Character.h$162$1_0$160	= .
                                    860 	.globl	C$Character.h$162$1_0$160
                                    861 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:162: LoadSpriteFrame(character, 0);
      0002E8 AF               [ 4]  862 	xor	a, a
      0002E9 CDr00r00         [24]  863 	call	_LoadSpriteFrame
                           0002EC   864 	C$Character.h$163$1_0$160	= .
                                    865 	.globl	C$Character.h$163$1_0$160
                                    866 ;C:\gbdk_dev\Project\GB_PROJECT\source\Character.h:163: }
      0002EC 33               [ 8]  867 	inc	sp
      0002ED E1               [12]  868 	pop	hl
      0002EE E8 06            [16]  869 	add	sp, #6
      0002F0 E9               [ 4]  870 	jp	(hl)
                           0002F1   871 	G$showTitle$0$0	= .
                                    872 	.globl	G$showTitle$0$0
                           0002F1   873 	C$main.c$17$1_0$164	= .
                                    874 	.globl	C$main.c$17$1_0$164
                                    875 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:17: void showTitle(void)
                                    876 ;	---------------------------------
                                    877 ; Function showTitle
                                    878 ; ---------------------------------
      0002F1                        879 _showTitle::
                           0002F1   880 	C$main.c$20$1_0$164	= .
                                    881 	.globl	C$main.c$20$1_0$164
                                    882 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:20: set_bkg_data(0, SplashScreenSprite_tileset_size, SplashScreenSprite_tileset);
      0002F1 11r00r00         [12]  883 	ld	de, #_SplashScreenSprite_tileset
      0002F4 D5               [16]  884 	push	de
      0002F5 21 00 C8         [12]  885 	ld	hl, #0xc800
      0002F8 E5               [16]  886 	push	hl
      0002F9 CDr00r00         [24]  887 	call	_set_bkg_data
      0002FC E8 04            [16]  888 	add	sp, #4
                           0002FE   889 	C$main.c$23$1_0$164	= .
                                    890 	.globl	C$main.c$23$1_0$164
                                    891 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:23: set_bkg_tiles(0, 0, 20, 18, SplashScreenSprite_tilemap);
      0002FE 11r00r00         [12]  892 	ld	de, #_SplashScreenSprite_tilemap
      000301 D5               [16]  893 	push	de
      000302 21 14 12         [12]  894 	ld	hl, #0x1214
      000305 E5               [16]  895 	push	hl
      000306 AF               [ 4]  896 	xor	a, a
      000307 0F               [ 4]  897 	rrca
      000308 F5               [16]  898 	push	af
      000309 CDr00r00         [24]  899 	call	_set_bkg_tiles
      00030C E8 06            [16]  900 	add	sp, #6
                           00030E   901 	C$main.c$26$1_0$164	= .
                                    902 	.globl	C$main.c$26$1_0$164
                                    903 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:26: SHOW_BKG;
      00030E F0r00            [12]  904 	ldh	a, (_LCDC_REG + 0)
      000310 F6 01            [ 8]  905 	or	a, #0x01
      000312 E0r00            [12]  906 	ldh	(_LCDC_REG + 0), a
                           000314   907 	C$main.c$27$1_0$164	= .
                                    908 	.globl	C$main.c$27$1_0$164
                                    909 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:27: DISPLAY_ON;
      000314 F0r00            [12]  910 	ldh	a, (_LCDC_REG + 0)
      000316 F6 80            [ 8]  911 	or	a, #0x80
      000318 E0r00            [12]  912 	ldh	(_LCDC_REG + 0), a
                           00031A   913 	C$main.c$28$1_0$164	= .
                                    914 	.globl	C$main.c$28$1_0$164
                                    915 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:28: }
                           00031A   916 	C$main.c$28$1_0$164	= .
                                    917 	.globl	C$main.c$28$1_0$164
                           00031A   918 	XG$showTitle$0$0	= .
                                    919 	.globl	XG$showTitle$0$0
      00031A C9               [16]  920 	ret
                           00031B   921 	G$SetupBackGround$0$0	= .
                                    922 	.globl	G$SetupBackGround$0$0
                           00031B   923 	C$main.c$30$1_0$166	= .
                                    924 	.globl	C$main.c$30$1_0$166
                                    925 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:30: void SetupBackGround()
                                    926 ;	---------------------------------
                                    927 ; Function SetupBackGround
                                    928 ; ---------------------------------
      00031B                        929 _SetupBackGround::
                           00031B   930 	C$main.c$33$1_0$166	= .
                                    931 	.globl	C$main.c$33$1_0$166
                                    932 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:33: }
                           00031B   933 	C$main.c$33$1_0$166	= .
                                    934 	.globl	C$main.c$33$1_0$166
                           00031B   935 	XG$SetupBackGround$0$0	= .
                                    936 	.globl	XG$SetupBackGround$0$0
      00031B C9               [16]  937 	ret
                           00031C   938 	G$MovementPhysics$0$0	= .
                                    939 	.globl	G$MovementPhysics$0$0
                           00031C   940 	C$main.c$35$1_0$168	= .
                                    941 	.globl	C$main.c$35$1_0$168
                                    942 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:35: void MovementPhysics(Character *character, uint8_t slowDownFrames)
                                    943 ;	---------------------------------
                                    944 ; Function MovementPhysics
                                    945 ; ---------------------------------
      00031C                        946 _MovementPhysics::
      00031C E8 FC            [16]  947 	add	sp, #-4
      00031E F8 02            [12]  948 	ldhl	sp,	#2
      000320 73               [ 8]  949 	ld	(hl), e
      000321 23               [ 8]  950 	inc	hl
      000322 72               [ 8]  951 	ld	(hl), d
                           000323   952 	C$main.c$44$1_1$168	= .
                                    953 	.globl	C$main.c$44$1_1$168
                                    954 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:44: (lastMovementX != 0 && character->movementForceX == 0) ||
      000323 2B               [ 8]  955 	dec	hl
      000324 4F               [ 4]  956 	ld	c, a
      000325 2A               [ 8]  957 	ld	a, (hl+)
      000326 5F               [ 4]  958 	ld	e, a
      000327 56               [ 8]  959 	ld	d, (hl)
      000328 21 0C 00         [12]  960 	ld	hl, #0x000c
      00032B 19               [ 8]  961 	add	hl, de
      00032C 33               [ 8]  962 	inc	sp
      00032D 33               [ 8]  963 	inc	sp
      00032E 5D               [ 4]  964 	ld	e, l
      00032F 54               [ 4]  965 	ld	d, h
      000330 D5               [16]  966 	push	de
      000331 1A               [ 8]  967 	ld	a, (de)
      000332 47               [ 4]  968 	ld	b, a
      000333 FAr01r00         [16]  969 	ld	a, (#_lastMovementX)
      000336 B7               [ 4]  970 	or	a, a
      000337 28 04            [12]  971 	jr	Z, 00105$
      000339 78               [ 4]  972 	ld	a, b
      00033A B7               [ 4]  973 	or	a, a
      00033B 28 09            [12]  974 	jr	Z, 00101$
      00033D                        975 00105$:
                           00033D   976 	C$main.c$46$1_0$168	= .
                                    977 	.globl	C$main.c$46$1_0$168
                                    978 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:46: (lastMovementX == 0 && character->movementForceX != 0))
      00033D FAr01r00         [16]  979 	ld	a, (#_lastMovementX)
      000340 B7               [ 4]  980 	or	a,a
      000341 20 08            [12]  981 	jr	NZ, 00102$
      000343 B0               [ 4]  982 	or	a,b
      000344 28 05            [12]  983 	jr	Z, 00102$
      000346                        984 00101$:
                           000346   985 	C$main.c$49$2_0$169	= .
                                    986 	.globl	C$main.c$49$2_0$169
                                    987 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:49: frameCount = 0;
      000346 21r00r00         [12]  988 	ld	hl, #_frameCount
      000349 36 00            [12]  989 	ld	(hl), #0x00
      00034B                        990 00102$:
                           00034B   991 	C$main.c$53$1_0$168	= .
                                    992 	.globl	C$main.c$53$1_0$168
                                    993 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:53: if (lastMovementX != 0 && character->movementForceX == 0)
      00034B 21r01r00         [12]  994 	ld	hl, #_lastMovementX
      00034E 7E               [ 8]  995 	ld	a, (hl)
      00034F B7               [ 4]  996 	or	a, a
      000350 28 28            [12]  997 	jr	Z, 00107$
      000352 D1               [12]  998 	pop	de
      000353 D5               [16]  999 	push	de
      000354 1A               [ 8] 1000 	ld	a, (de)
      000355 B7               [ 4] 1001 	or	a, a
      000356 20 22            [12] 1002 	jr	NZ, 00107$
                           000358  1003 	C$main.c$54$1_0$168	= .
                                   1004 	.globl	C$main.c$54$1_0$168
                                   1005 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:54: slowingX = lastMovementX > 0 ? 1 : -1;
      000358 5E               [ 8] 1006 	ld	e, (hl)
      000359 AF               [ 4] 1007 	xor	a, a
      00035A 57               [ 4] 1008 	ld	d, a
      00035B 96               [ 8] 1009 	sub	a, (hl)
      00035C CB 7B            [ 8] 1010 	bit	7, e
      00035E 28 07            [12] 1011 	jr	Z, 00205$
      000360 CB 7A            [ 8] 1012 	bit	7, d
      000362 20 08            [12] 1013 	jr	NZ, 00206$
      000364 BF               [ 4] 1014 	cp	a, a
      000365 18 05            [12] 1015 	jr	00206$
      000367                       1016 00205$:
      000367 CB 7A            [ 8] 1017 	bit	7, d
      000369 28 01            [12] 1018 	jr	Z, 00206$
      00036B 37               [ 4] 1019 	scf
      00036C                       1020 00206$:
      00036C 30 05            [12] 1021 	jr	NC, 00126$
      00036E 11 01 00         [12] 1022 	ld	de, #0x0001
      000371 18 03            [12] 1023 	jr	00127$
      000373                       1024 00126$:
      000373 11 FF FF         [12] 1025 	ld	de, #0xffff
      000376                       1026 00127$:
      000376 21r03r00         [12] 1027 	ld	hl, #_slowingX
      000379 73               [ 8] 1028 	ld	(hl), e
      00037A                       1029 00107$:
                           00037A  1030 	C$main.c$57$1_0$168	= .
                                   1031 	.globl	C$main.c$57$1_0$168
                                   1032 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:57: if (character->movementForceX != 0)
      00037A D1               [12] 1033 	pop	de
      00037B D5               [16] 1034 	push	de
      00037C 1A               [ 8] 1035 	ld	a, (de)
      00037D 47               [ 4] 1036 	ld	b, a
                           00037E  1037 	C$main.c$63$1_1$168	= .
                                   1038 	.globl	C$main.c$63$1_1$168
                                   1039 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: character->velocityX = 0;
      00037E F8 02            [12] 1040 	ldhl	sp,#2
      000380 2A               [ 8] 1041 	ld	a, (hl+)
      000381 5F               [ 4] 1042 	ld	e, a
      000382 56               [ 8] 1043 	ld	d, (hl)
      000383 21 08 00         [12] 1044 	ld	hl, #0x0008
      000386 19               [ 8] 1045 	add	hl, de
      000387 5D               [ 4] 1046 	ld	e, l
      000388 54               [ 4] 1047 	ld	d, h
                           000389  1048 	C$main.c$57$1_0$168	= .
                                   1049 	.globl	C$main.c$57$1_0$168
                                   1050 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:57: if (character->movementForceX != 0)
      000389 78               [ 4] 1051 	ld	a, b
      00038A B7               [ 4] 1052 	or	a, a
      00038B 28 21            [12] 1053 	jr	Z, 00122$
                           00038D  1054 	C$main.c$60$2_0$170	= .
                                   1055 	.globl	C$main.c$60$2_0$170
                                   1056 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:60: if (frameCount == 2 || frameCount == 6)
      00038D FAr00r00         [16] 1057 	ld	a,(#_frameCount)
      000390 FE 02            [ 8] 1058 	cp	a,#0x02
      000392 28 04            [12] 1059 	jr	Z, 00109$
      000394 D6 06            [ 8] 1060 	sub	a, #0x06
      000396 20 04            [12] 1061 	jr	NZ, 00110$
      000398                       1062 00109$:
                           000398  1063 	C$main.c$63$3_0$171	= .
                                   1064 	.globl	C$main.c$63$3_0$171
                                   1065 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:63: character->velocityX = 0;
      000398 AF               [ 4] 1066 	xor	a, a
      000399 12               [ 8] 1067 	ld	(de), a
      00039A 18 02            [12] 1068 	jr	00111$
      00039C                       1069 00110$:
                           00039C  1070 	C$main.c$68$3_0$172	= .
                                   1071 	.globl	C$main.c$68$3_0$172
                                   1072 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:68: character->velocityX = character->movementForceX;
      00039C 78               [ 4] 1073 	ld	a, b
      00039D 12               [ 8] 1074 	ld	(de), a
      00039E                       1075 00111$:
                           00039E  1076 	C$main.c$72$2_0$170	= .
                                   1077 	.globl	C$main.c$72$2_0$170
                                   1078 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:72: frameCount++;
      00039E 21r00r00         [12] 1079 	ld	hl, #_frameCount
      0003A1 34               [12] 1080 	inc	(hl)
                           0003A2  1081 	C$main.c$75$2_0$170	= .
                                   1082 	.globl	C$main.c$75$2_0$170
                                   1083 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:75: if (frameCount == PLAYER_ANIMATION_FRAMES)
      0003A2 7E               [ 8] 1084 	ld	a, (hl)
      0003A3 D6 08            [ 8] 1085 	sub	a, #0x08
      0003A5 20 30            [12] 1086 	jr	NZ, 00123$
                           0003A7  1087 	C$main.c$77$3_0$173	= .
                                   1088 	.globl	C$main.c$77$3_0$173
                                   1089 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:77: frameCount = 0;
      0003A7 21r00r00         [12] 1090 	ld	hl, #_frameCount
      0003AA 36 00            [12] 1091 	ld	(hl), #0x00
      0003AC 18 29            [12] 1092 	jr	00123$
      0003AE                       1093 00122$:
                           0003AE  1094 	C$main.c$83$2_0$174	= .
                                   1095 	.globl	C$main.c$83$2_0$174
                                   1096 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:83: if (slowingX && frameCount < slowDownFrames)
      0003AE FAr03r00         [16] 1097 	ld	a, (#_slowingX)
      0003B1 B7               [ 4] 1098 	or	a, a
      0003B2 28 23            [12] 1099 	jr	Z, 00123$
      0003B4 21r00r00         [12] 1100 	ld	hl, #_frameCount
      0003B7 7E               [ 8] 1101 	ld	a, (hl)
      0003B8 91               [ 4] 1102 	sub	a, c
      0003B9 30 1C            [12] 1103 	jr	NC, 00123$
                           0003BB  1104 	C$main.c$85$3_0$175	= .
                                   1105 	.globl	C$main.c$85$3_0$175
                                   1106 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:85: frameCount++;
      0003BB 34               [12] 1107 	inc	(hl)
                           0003BC  1108 	C$main.c$88$3_0$175	= .
                                   1109 	.globl	C$main.c$88$3_0$175
                                   1110 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:88: if (frameCount == slowDownFrames - 1)
      0003BC 06 00            [ 8] 1111 	ld	b, #0x00
      0003BE 0B               [ 8] 1112 	dec	bc
      0003BF 6E               [ 8] 1113 	ld	l, (hl)
                                   1114 ;	spillPairReg hl
                                   1115 ;	spillPairReg hl
      0003C0 26 00            [ 8] 1116 	ld	h, #0x00
                                   1117 ;	spillPairReg hl
                                   1118 ;	spillPairReg hl
      0003C2 7D               [ 4] 1119 	ld	a, l
      0003C3 91               [ 4] 1120 	sub	a, c
      0003C4 20 0D            [12] 1121 	jr	NZ, 00116$
      0003C6 7C               [ 4] 1122 	ld	a, h
      0003C7 90               [ 4] 1123 	sub	a, b
      0003C8 20 09            [12] 1124 	jr	NZ, 00116$
                           0003CA  1125 	C$main.c$90$4_0$176	= .
                                   1126 	.globl	C$main.c$90$4_0$176
                                   1127 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:90: character->velocityX = 0;
      0003CA AF               [ 4] 1128 	xor	a, a
      0003CB 12               [ 8] 1129 	ld	(de), a
                           0003CC  1130 	C$main.c$91$4_0$176	= .
                                   1131 	.globl	C$main.c$91$4_0$176
                                   1132 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:91: slowingX = 0;
      0003CC 21r03r00         [12] 1133 	ld	hl, #_slowingX
      0003CF 36 00            [12] 1134 	ld	(hl), #0x00
      0003D1 18 04            [12] 1135 	jr	00123$
      0003D3                       1136 00116$:
                           0003D3  1137 	C$main.c$95$3_0$175	= .
                                   1138 	.globl	C$main.c$95$3_0$175
                                   1139 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:95: character->velocityX = slowingX;
      0003D3 FAr03r00         [16] 1140 	ld	a, (#_slowingX)
      0003D6 12               [ 8] 1141 	ld	(de), a
      0003D7                       1142 00123$:
                           0003D7  1143 	C$main.c$100$1_1$177	= .
                                   1144 	.globl	C$main.c$100$1_1$177
                                   1145 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:100: uint8_t predictedX = character->x + character->velocityX;
      0003D7 D5               [16] 1146 	push	de
      0003D8 F8 04            [12] 1147 	ldhl	sp,#4
      0003DA 2A               [ 8] 1148 	ld	a, (hl+)
      0003DB 5F               [ 4] 1149 	ld	e, a
      0003DC 56               [ 8] 1150 	ld	d, (hl)
      0003DD 21 06 00         [12] 1151 	ld	hl, #0x0006
      0003E0 19               [ 8] 1152 	add	hl, de
      0003E1 D1               [12] 1153 	pop	de
      0003E2 4D               [ 4] 1154 	ld	c, l
      0003E3 44               [ 4] 1155 	ld	b, h
      0003E4 0A               [ 8] 1156 	ld	a, (bc)
      0003E5 4F               [ 4] 1157 	ld	c, a
      0003E6 1A               [ 8] 1158 	ld	a, (de)
      0003E7 81               [ 4] 1159 	add	a, c
      0003E8 4F               [ 4] 1160 	ld	c, a
                           0003E9  1161 	C$main.c$103$1_1$177	= .
                                   1162 	.globl	C$main.c$103$1_1$177
                                   1163 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:103: MoveCharacter(character, predictedX, character->y);
      0003E9 F8 02            [12] 1164 	ldhl	sp,#2
      0003EB 2A               [ 8] 1165 	ld	a, (hl+)
      0003EC 5F               [ 4] 1166 	ld	e, a
      0003ED 56               [ 8] 1167 	ld	d, (hl)
      0003EE 21 07 00         [12] 1168 	ld	hl, #0x0007
      0003F1 19               [ 8] 1169 	add	hl, de
      0003F2 5D               [ 4] 1170 	ld	e, l
      0003F3 54               [ 4] 1171 	ld	d, h
      0003F4 1A               [ 8] 1172 	ld	a, (de)
      0003F5 F5               [16] 1173 	push	af
      0003F6 33               [ 8] 1174 	inc	sp
      0003F7 79               [ 4] 1175 	ld	a, c
      0003F8 F8 03            [12] 1176 	ldhl	sp,	#3
      0003FA 5E               [ 8] 1177 	ld	e, (hl)
      0003FB 23               [ 8] 1178 	inc	hl
      0003FC 56               [ 8] 1179 	ld	d, (hl)
      0003FD CDrAAr01         [24] 1180 	call	_MoveCharacter
                           000400  1181 	C$main.c$106$1_1$177	= .
                                   1182 	.globl	C$main.c$106$1_1$177
                                   1183 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:106: lastMovementX = character->movementForceX;
      000400 D1               [12] 1184 	pop	de
      000401 D5               [16] 1185 	push	de
      000402 1A               [ 8] 1186 	ld	a, (de)
      000403 EAr01r00         [16] 1187 	ld	(#_lastMovementX),a
                           000406  1188 	C$main.c$107$1_1$177	= .
                                   1189 	.globl	C$main.c$107$1_1$177
                                   1190 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:107: lastMovementY = character->movementForceY;
      000406 F8 02            [12] 1191 	ldhl	sp,#2
      000408 2A               [ 8] 1192 	ld	a, (hl+)
      000409 5F               [ 4] 1193 	ld	e, a
      00040A 56               [ 8] 1194 	ld	d, (hl)
      00040B 21 0D 00         [12] 1195 	ld	hl, #0x000d
      00040E 19               [ 8] 1196 	add	hl, de
      00040F 4D               [ 4] 1197 	ld	c, l
      000410 44               [ 4] 1198 	ld	b, h
      000411 0A               [ 8] 1199 	ld	a, (bc)
      000412 EAr02r00         [16] 1200 	ld	(#_lastMovementY),a
                           000415  1201 	C$main.c$108$1_1$168	= .
                                   1202 	.globl	C$main.c$108$1_1$168
                                   1203 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:108: }
      000415 E8 04            [16] 1204 	add	sp, #4
                           000417  1205 	C$main.c$108$1_1$168	= .
                                   1206 	.globl	C$main.c$108$1_1$168
                           000417  1207 	XG$MovementPhysics$0$0	= .
                                   1208 	.globl	XG$MovementPhysics$0$0
      000417 C9               [16] 1209 	ret
                           000418  1210 	G$main$0$0	= .
                                   1211 	.globl	G$main$0$0
                           000418  1212 	C$main.c$110$1_1$179	= .
                                   1213 	.globl	C$main.c$110$1_1$179
                                   1214 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:110: void main(void)
                                   1215 ;	---------------------------------
                                   1216 ; Function main
                                   1217 ; ---------------------------------
      000418                       1218 _main::
                           000418  1219 	C$main.c$112$1_0$179	= .
                                   1220 	.globl	C$main.c$112$1_0$179
                                   1221 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:112: SetupBackGround();
      000418 CDr1Br03         [24] 1222 	call	_SetupBackGround
                           00041B  1223 	C$main.c$114$1_0$179	= .
                                   1224 	.globl	C$main.c$114$1_0$179
                                   1225 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:114: set_sprite_data(0, BirdSprite_tileset_size, BirdSprite_tileset);
      00041B 11r00r00         [12] 1226 	ld	de, #_BirdSprite_tileset
      00041E D5               [16] 1227 	push	de
      00041F 21 00 26         [12] 1228 	ld	hl, #0x2600
      000422 E5               [16] 1229 	push	hl
      000423 CDr00r00         [24] 1230 	call	_set_sprite_data
      000426 E8 04            [16] 1231 	add	sp, #4
                           000428  1232 	C$main.c$116$1_0$179	= .
                                   1233 	.globl	C$main.c$116$1_0$179
                                   1234 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:116: SetupCharacter(&player, 0, 2, 2, 0, 8, BirdSprite_tilemap);
      000428 11r00r00         [12] 1235 	ld	de, #_BirdSprite_tilemap
      00042B D5               [16] 1236 	push	de
      00042C 3E 08            [ 8] 1237 	ld	a, #0x08
      00042E F5               [16] 1238 	push	af
      00042F 33               [ 8] 1239 	inc	sp
      000430 AF               [ 4] 1240 	xor	a, a
      000431 67               [ 4] 1241 	ld	h, a
      000432 2E 02            [ 8] 1242 	ld	l, #0x02
      000434 E5               [16] 1243 	push	hl
      000435 3E 02            [ 8] 1244 	ld	a, #0x02
      000437 F5               [16] 1245 	push	af
      000438 33               [ 8] 1246 	inc	sp
      000439 AF               [ 4] 1247 	xor	a, a
      00043A 11r00r00         [12] 1248 	ld	de, #_player
      00043D CDrB5r02         [24] 1249 	call	_SetupCharacter
                           000440  1250 	C$main.c$118$1_0$179	= .
                                   1251 	.globl	C$main.c$118$1_0$179
                                   1252 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:118: MoveCharacter(&player, 8, 56);
      000440 3E 38            [ 8] 1253 	ld	a, #0x38
      000442 F5               [16] 1254 	push	af
      000443 33               [ 8] 1255 	inc	sp
      000444 3E 08            [ 8] 1256 	ld	a, #0x08
      000446 11r00r00         [12] 1257 	ld	de, #_player
      000449 CDrAAr01         [24] 1258 	call	_MoveCharacter
                           00044C  1259 	C$main.c$120$1_0$179	= .
                                   1260 	.globl	C$main.c$120$1_0$179
                                   1261 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:120: SHOW_BKG;
      00044C F0r00            [12] 1262 	ldh	a, (_LCDC_REG + 0)
      00044E F6 01            [ 8] 1263 	or	a, #0x01
      000450 E0r00            [12] 1264 	ldh	(_LCDC_REG + 0), a
                           000452  1265 	C$main.c$121$1_0$179	= .
                                   1266 	.globl	C$main.c$121$1_0$179
                                   1267 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:121: SHOW_SPRITES;
      000452 F0r00            [12] 1268 	ldh	a, (_LCDC_REG + 0)
      000454 F6 02            [ 8] 1269 	or	a, #0x02
      000456 E0r00            [12] 1270 	ldh	(_LCDC_REG + 0), a
                           000458  1271 	C$main.c$122$1_0$179	= .
                                   1272 	.globl	C$main.c$122$1_0$179
                                   1273 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:122: DISPLAY_ON;
      000458 F0r00            [12] 1274 	ldh	a, (_LCDC_REG + 0)
      00045A F6 80            [ 8] 1275 	or	a, #0x80
      00045C E0r00            [12] 1276 	ldh	(_LCDC_REG + 0), a
                           00045E  1277 	C$main.c$124$1_0$179	= .
                                   1278 	.globl	C$main.c$124$1_0$179
                                   1279 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:124: while(1)
      00045E                       1280 00102$:
                           00045E  1281 	C$main.c$126$2_0$180	= .
                                   1282 	.globl	C$main.c$126$2_0$180
                                   1283 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:126: MoveCharacterWithJoypad(&player);
      00045E 11r00r00         [12] 1284 	ld	de, #_player
      000461 CDr7Br02         [24] 1285 	call	_MoveCharacterWithJoypad
                           000464  1286 	C$main.c$127$2_0$180	= .
                                   1287 	.globl	C$main.c$127$2_0$180
                                   1288 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:127: MovementPhysics(&player, 3);
      000464 3E 03            [ 8] 1289 	ld	a, #0x03
      000466 11r00r00         [12] 1290 	ld	de, #_player
      000469 CDr1Cr03         [24] 1291 	call	_MovementPhysics
                           00046C  1292 	C$main.c$128$2_0$180	= .
                                   1293 	.globl	C$main.c$128$2_0$180
                                   1294 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:128: wait_vbl_done();
      00046C CDr00r00         [24] 1295 	call	_wait_vbl_done
                           00046F  1296 	C$main.c$130$1_0$179	= .
                                   1297 	.globl	C$main.c$130$1_0$179
                                   1298 ;C:\gbdk_dev\Project\GB_PROJECT\source\main.c:130: }
                           00046F  1299 	C$main.c$130$1_0$179	= .
                                   1300 	.globl	C$main.c$130$1_0$179
                           00046F  1301 	XG$main$0$0	= .
                                   1302 	.globl	XG$main$0$0
      00046F 18 ED            [12] 1303 	jr	00102$
                                   1304 	.area _CODE
                                   1305 	.area _INITIALIZER
                           000000  1306 Fmain$__xinit_frameCount$0_0$0 == .
      000000                       1307 __xinit__frameCount:
      000000 00                    1308 	.db #0x00	; 0
                           000001  1309 Fmain$__xinit_lastMovementX$0_0$0 == .
      000001                       1310 __xinit__lastMovementX:
      000001 00                    1311 	.db #0x00	;  0
                           000002  1312 Fmain$__xinit_lastMovementY$0_0$0 == .
      000002                       1313 __xinit__lastMovementY:
      000002 00                    1314 	.db #0x00	;  0
                           000003  1315 Fmain$__xinit_slowingX$0_0$0 == .
      000003                       1316 __xinit__slowingX:
      000003 00                    1317 	.db #0x00	;  0
                                   1318 	.area _CABS (ABS)
